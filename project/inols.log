






Started logging.

<<<
Content-Length: 3035

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":18700,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\Blink","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink","name":"Blink"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1219

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\nint red = 1, inc = 1;\r\n\r\n\r\nvoid setup() { \r\n    FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n}\r\n\r\nvoid loop() { \r\n  if (red == 0 || red == 255)\r\n        inc *= -1;\r\n  \r\n  // Turn the LED on, then pause\r\n  for (int cur = 0; cur < NUM_LEDS; cur++) { \r\n    leds[cur] = CRGB (red, 0, 255 - red);\r\n    FastLED.show();\r\n  }\r\n\r\n  red += inc;\r\n  //delay(5);\r\n\r\n}\r\n"}}}Content-Length: 257

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"position":{"line":22,"character":8}}}
>>>
Content-Length: 256

{"id":2,"result":{"contents":{"kind":"markdown","value":"### variable `FastLED`  \n\n---\nType: `class CFastLED`  \n\n---\n```cpp\nextern CFastLED FastLED\n```"},"range":{"start":{"line":29,"character":4},"end":{"line":29,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":3,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3035

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":14444,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\Blink","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink","name":"Blink"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1219

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\nint red = 1, inc = 1;\r\n\r\n\r\nvoid setup() { \r\n    FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n}\r\n\r\nvoid loop() { \r\n  if (red == 0 || red == 255)\r\n        inc *= -1;\r\n  \r\n  // Turn the LED on, then pause\r\n  for (int cur = 0; cur < NUM_LEDS; cur++) { \r\n    leds[cur] = CRGB (red, 0, 255 - red);\r\n    FastLED.show();\r\n  }\r\n\r\n  red += inc;\r\n  //delay(5);\r\n\r\n}\r\n"}}}Content-Length: 257

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/38","percentage":2.6315789473684212,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"position":{"line":10,"character":18}}}
>>>
Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"range":{"start":{"line":10,"character":18},"end":{"line":10,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"position":{"line":8,"character":57}}}
>>>
Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 186

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"position":{"line":8,"character":30}}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":6,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3034

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7932,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\Blink","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink","name":"Blink"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1219

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\nint red = 1, inc = 1;\r\n\r\n\r\nvoid setup() { \r\n    FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n}\r\n\r\nvoid loop() { \r\n  if (red == 0 || red == 255)\r\n        inc *= -1;\r\n  \r\n  // Turn the LED on, then pause\r\n  for (int cur = 0; cur < NUM_LEDS; cur++) { \r\n    leds[cur] = CRGB (red, 0, 255 - red);\r\n    FastLED.show();\r\n  }\r\n\r\n  red += inc;\r\n  //delay(5);\r\n\r\n}\r\n"}}}Content-Length: 261

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"range":{"start":{"line":10,"character":18},"end":{"line":10,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 257

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 158

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"}}}Content-Length: 186

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/Blink/Blink.ino"},"position":{"line":9,"character":20}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 1717

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"red","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":11}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"inc","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":20}},"selectionRange":{"start":{"line":18,"character":13},"end":{"line":18,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/38","percentage":2.6315789473684212,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":5,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3042

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7700,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1245

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","languageId":"cpp","version":237,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\nint red = 1, inc = 1;\r\n\r\nvoid setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[cur] = CRGB (r, g, b);\r\n    FastLED.show();\r\n  }\r\n}\r\n\r\n\r\nvoid setup() { \r\n  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  setLeds(0, 5, 255, 0, 0);\r\n  setLeds(6, NUM_LEDS - 1, 0, 255, 0);\r\n}\r\n\r\n\r\nvoid loop() { \r\n  \r\n\r\n  delay(500);\r\n\r\n}\r\n"}}}Content-Length: 265

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":13,"character":27},"end":{"line":13,"character":27}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":22,"character":9},"end":{"line":22,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'cur'"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 1908

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"red","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":11}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"inc","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":20}},"selectionRange":{"start":{"line":18,"character":13},"end":{"line":18,"character":16}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":35,"character":0},"end":{"line":40,"character":1}},"selectionRange":{"start":{"line":35,"character":5},"end":{"line":35,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/38","percentage":2.6315789473684212,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":13,"character":27},"end":{"line":13,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":3,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":238},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":21}},"rangeLength":21,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":22,"character":9},"end":{"line":22,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'cur'"}]},"jsonrpc":"2.0"}Content-Length: 1532

{"id":5,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":35,"character":0},"end":{"line":40,"character":1}},"selectionRange":{"start":{"line":35,"character":5},"end":{"line":35,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":239},"contentChanges":[{"range":{"start":{"line":17,"character":0},"end":{"line":18,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 162

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 113

{"id":6,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3042

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7700,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1220

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","languageId":"cpp","version":239,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\n\r\nvoid setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[cur] = CRGB (r, g, b);\r\n    FastLED.show();\r\n  }\r\n}\r\n\r\n\r\nvoid setup() { \r\n  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  setLeds(0, 5, 255, 0, 0);\r\n  setLeds(6, NUM_LEDS - 1, 0, 255, 0);\r\n}\r\n\r\n\r\nvoid loop() { \r\n  \r\n\r\n  delay(500);\r\n\r\n}\r\n"}}}Content-Length: 162

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":240},"contentChanges":[{"range":{"start":{"line":16,"character":14},"end":{"line":17,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 265

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":240}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 162

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 162

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 162

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 162

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 162

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 162

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 163

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 163

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 265

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":22,"character":9},"end":{"line":22,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'cur'"}]},"jsonrpc":"2.0"}Content-Length: 1908

{"id":1,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"red","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":11}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"inc","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":20}},"selectionRange":{"start":{"line":18,"character":13},"end":{"line":18,"character":16}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":35,"character":0},"end":{"line":40,"character":1}},"selectionRange":{"start":{"line":35,"character":5},"end":{"line":35,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 113

{"id":2,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3042

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7700,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1216

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","languageId":"cpp","version":240,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\nvoid setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[cur] = CRGB (r, g, b);\r\n    FastLED.show();\r\n  }\r\n}\r\n\r\n\r\nvoid setup() { \r\n  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  setLeds(0, 5, 255, 0, 0);\r\n  setLeds(6, NUM_LEDS - 1, 0, 255, 0);\r\n}\r\n\r\n\r\nvoid loop() { \r\n  \r\n\r\n  delay(500);\r\n\r\n}\r\n"}}}Content-Length: 264

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 190

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":20,"character":9}}}Content-Length: 203

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":20,"character":10}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 162

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 162

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 264

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":241},"contentChanges":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":12}},"rangeLength":3,"text":"i"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 162

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 224

{"jsonrpc":"2.0","id":9,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":20,"character":10},"context":{"triggerKind":1}}}Content-Length: 266

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":241}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'cur'"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 1532

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}Content-Length: 1532

{"id":5,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1532

{"id":6,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":7,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1532

{"id":8,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 29646

{"id":9,"result":{"isIncomplete":true,"items":[{"label":" i","kind":6,"detail":"int","sortText":"3c351ac6i","filterText":"i","insertText":"i","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"i"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int"}},{"label":" isfinite(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The isfinite() function returns a nonzero value if \\\\a \\_\\_x is finite:  \nnot plus or minus infinity, and not NaN."},"sortText":"3f0f66edisfinite","filterText":"isfinite","insertText":"isfinite(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isfinite(${1:double __x})"}},{"label":" isinf(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isinf() returns 1 if the argument \\\\a \\_\\_x is positive infinity, -1 if \\\\a \\_\\_x is negative infinity, and 0 otherwise.  \n\\\\note The GCC 4.3 can replace this function with inline code that returns the 1 value for both infinities (gcc bug #35509)."},"sortText":"3f0f66edisinf","filterText":"isinf","insertText":"isinf(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isinf(${1:double __x})"}},{"label":" isnan(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isnan() returns 1 if the argument \\\\a \\_\\_x represents a \"not-a-number\" (NaN) object, otherwise 0."},"sortText":"3f0f66edisnan","filterText":"isnan","insertText":"isnan(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isnan(${1:double __x})"}},{"label":" isalnum(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphanumeric character. It is equivalent to \\\u003ctt\u003e(isalpha(c) || isdigit(c))\\\u003c/tt\u003e."},"sortText":"3f34f201isalnum","filterText":"isalnum","insertText":"isalnum(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isalnum(${1:int __c})"}},{"label":" isalpha(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphabetic character. It is equivalent to \\\u003ctt\u003e(isupper(c) || islower(c))\\\u003c/tt\u003e."},"sortText":"3f34f201isalpha","filterText":"isalpha","insertText":"isalpha(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isalpha(${1:int __c})"}},{"label":" isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks whether \\\\c c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"3f34f201isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isascii(${1:int __c})"}},{"label":" isblank(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a blank character, that is, a space or a tab."},"sortText":"3f34f201isblank","filterText":"isblank","insertText":"isblank(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isblank(${1:int __c})"}},{"label":" iscntrl(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a control character."},"sortText":"3f34f201iscntrl","filterText":"iscntrl","insertText":"iscntrl(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"iscntrl(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a digit (0 through 9)."},"sortText":"3f34f201isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isdigit(${1:int __c})"}},{"label":" isgraph(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character except space."},"sortText":"3f34f201isgraph","filterText":"isgraph","insertText":"isgraph(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isgraph(${1:int __c})"}},{"label":" islower(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a lower-case character."},"sortText":"3f34f201islower","filterText":"islower","insertText":"islower(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"islower(${1:int __c})"}},{"label":" isprint(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character including space."},"sortText":"3f34f201isprint","filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isprint(${1:int __c})"}},{"label":" ispunct(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"3f34f201ispunct","filterText":"ispunct","insertText":"ispunct(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ispunct(${1:int __c})"}},{"label":" isspace(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for white-space characters. For the avr-libc library, these are:  \nspace, form-feed ('\\\\\\\\f'), newline ('\\\\\\\\n'), carriage return ('\\\\\\\\r'),  \nhorizontal tab ('\\\\\\\\t'), and vertical tab ('\\\\\\\\v')."},"sortText":"3f34f201isspace","filterText":"isspace","insertText":"isspace(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isspace(${1:int __c})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an uppercase letter."},"sortText":"3f34f201isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isupper(${1:int __c})"}},{"label":" isxdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"3f34f201isxdigit","filterText":"isxdigit","insertText":"isxdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isxdigit(${1:int __c})"}},{"label":"•inoise16(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@defgroup Noise Noise functions Simplex noise function definitions  \n@{  \n@name scaled 16 bit noise functions  \n@{ 16 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n16.16 fixed point values, 32 bit integers with integral coordinates in the high 16 bits and fractional in the low 16 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-65535"},"sortText":"3f42c84einoise16","filterText":"inoise16","insertText":"inoise16($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"inoise16($0)"}},{"label":"•inoise16_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw 16 bit noise functions  \n@{ 16 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-18k,18k)"},"sortText":"3f42c84einoise16_raw","filterText":"inoise16_raw","insertText":"inoise16_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"inoise16_raw($0)"}},{"label":"•inoise8(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit scaled noise functions  \n@{ 8 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n8.8 fixed point values, 16 bit integers with integral coordinates in the high 8 bits and fractional in the low 8 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-255"},"sortText":"3f42c84einoise8","filterText":"inoise8","insertText":"inoise8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"inoise8($0)"}},{"label":"•inoise8_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit raw noise functions  \n@{ 8 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-70,70)"},"sortText":"3f42c84einoise8_raw","filterText":"inoise8_raw","insertText":"inoise8_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"inoise8_raw($0)"}},{"label":" init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68init","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"initVariant()"}},{"label":" int32_t","kind":8,"sortText":"405d8e68int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int64_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int_fast8_t"}},{"label":" int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 32 bits."},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int_least32_t"}},{"label":" int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 8 bits."},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"int_least8_t"}},{"label":" intptr_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint Signed pointer compatible type."},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"intptr_t"}},{"label":"•InputPin","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"4068a03fInputPin","filterText":"InputPin","insertText":"InputPin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"InputPin"}},{"label":" INFINITY","kind":1,"sortText":"40d1050aINFINITY","filterText":"INFINITY","insertText":"INFINITY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INFINITY"}},{"label":" isinff","kind":1,"sortText":"40d1050aisinff","filterText":"isinff","insertText":"isinff","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isinff"}},{"label":" isnanf","kind":1,"sortText":"40d1050aisnanf","filterText":"isnanf","insertText":"isnanf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"isnanf"}},{"label":" ICES1","kind":1,"sortText":"40ec52eaICES1","filterText":"ICES1","insertText":"ICES1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICES1"}},{"label":" ICIE1","kind":1,"sortText":"40ec52eaICIE1","filterText":"ICIE1","insertText":"ICIE1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICIE1"}},{"label":" ICR1H","kind":1,"sortText":"40ec52eaICR1H","filterText":"ICR1H","insertText":"ICR1H","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H"}},{"label":" ICR1H1","kind":1,"sortText":"40ec52eaICR1H1","filterText":"ICR1H1","insertText":"ICR1H1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H1"}},{"label":" ICR1H2","kind":1,"sortText":"40ec52eaICR1H2","filterText":"ICR1H2","insertText":"ICR1H2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H2"}},{"label":" ICR1H3","kind":1,"sortText":"40ec52eaICR1H3","filterText":"ICR1H3","insertText":"ICR1H3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H3"}},{"label":" ICR1H4","kind":1,"sortText":"40ec52eaICR1H4","filterText":"ICR1H4","insertText":"ICR1H4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H4"}},{"label":" ICR1H5","kind":1,"sortText":"40ec52eaICR1H5","filterText":"ICR1H5","insertText":"ICR1H5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H5"}},{"label":" ICR1H6","kind":1,"sortText":"40ec52eaICR1H6","filterText":"ICR1H6","insertText":"ICR1H6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H6"}},{"label":" ICR1H7","kind":1,"sortText":"40ec52eaICR1H7","filterText":"ICR1H7","insertText":"ICR1H7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1H7"}},{"label":" ICR1L","kind":1,"sortText":"40ec52eaICR1L","filterText":"ICR1L","insertText":"ICR1L","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1L"}},{"label":" ICR1L0","kind":1,"sortText":"40ec52eaICR1L0","filterText":"ICR1L0","insertText":"ICR1L0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1L0"}},{"label":" ICR1L1","kind":1,"sortText":"40ec52eaICR1L1","filterText":"ICR1L1","insertText":"ICR1L1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1L1"}},{"label":" ICR1L5","kind":1,"sortText":"40ec52eaICR1L5","filterText":"ICR1L5","insertText":"ICR1L5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1L5"}},{"label":" ICR1L6","kind":1,"sortText":"40ec52eaICR1L6","filterText":"ICR1L6","insertText":"ICR1L6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1L6"}},{"label":" ICR1L7","kind":1,"sortText":"40ec52eaICR1L7","filterText":"ICR1L7","insertText":"ICR1L7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ICR1L7"}},{"label":" INPUT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaINPUT","filterText":"INPUT","insertText":"INPUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INPUT"}},{"label":" INPUT_PULLUP","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaINPUT_PULLUP","filterText":"INPUT_PULLUP","insertText":"INPUT_PULLUP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INPUT_PULLUP"}},{"label":" INT0_vect_num","kind":1,"sortText":"40ec52eaINT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"40ec52eaINT1","filterText":"INT1","insertText":"INT1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT1"}},{"label":" INT16_MAX","kind":1,"sortText":"40ec52eaINT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT16_MAX"}},{"label":" INT16_MIN","kind":1,"sortText":"40ec52eaINT16_MIN","filterText":"INT16_MIN","insertText":"INT16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT16_MIN"}},{"label":" INT1_vect","kind":1,"sortText":"40ec52eaINT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"40ec52eaINT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT1_vect_num"}},{"label":" INT32_MIN","kind":1,"sortText":"40ec52eaINT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT32_MIN"}},{"label":" INT64_C(value)","kind":1,"sortText":"40ec52eaINT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT64_C(${1:value})"}},{"label":" INT64_MAX","kind":1,"sortText":"40ec52eaINT64_MAX","filterText":"INT64_MAX","insertText":"INT64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT64_MAX"}},{"label":" INT64_MIN","kind":1,"sortText":"40ec52eaINT64_MIN","filterText":"INT64_MIN","insertText":"INT64_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT64_MIN"}},{"label":" INT8_C(value)","kind":1,"sortText":"40ec52eaINT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT8_C(${1:value})"}},{"label":" INT8_MAX","kind":1,"sortText":"40ec52eaINT8_MAX","filterText":"INT8_MAX","insertText":"INT8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT8_MAX"}},{"label":" INTERNAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaINTERNAL","filterText":"INTERNAL","insertText":"INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTERNAL"}},{"label":" INTF0","kind":1,"sortText":"40ec52eaINTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTF0"}},{"label":" INTMAX_C(value)","kind":1,"sortText":"40ec52eaINTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTMAX_C(${1:value})"}},{"label":" INTMAX_MAX","kind":1,"sortText":"40ec52eaINTMAX_MAX","filterText":"INTMAX_MAX","insertText":"INTMAX_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTMAX_MAX"}},{"label":" INTPTR_MAX","kind":1,"sortText":"40ec52eaINTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"40ec52eaINTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTPTR_MIN"}},{"label":" INT_FAST16_MAX","kind":1,"sortText":"40ec52eaINT_FAST16_MAX","filterText":"INT_FAST16_MAX","insertText":"INT_FAST16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST16_MAX"}},{"label":" INT_FAST16_MIN","kind":1,"sortText":"40ec52eaINT_FAST16_MIN","filterText":"INT_FAST16_MIN","insertText":"INT_FAST16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST16_MIN"}},{"label":" INT_FAST32_MAX","kind":1,"sortText":"40ec52eaINT_FAST32_MAX","filterText":"INT_FAST32_MAX","insertText":"INT_FAST32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST32_MAX"}},{"label":" INT_FAST32_MIN","kind":1,"sortText":"40ec52eaINT_FAST32_MIN","filterText":"INT_FAST32_MIN","insertText":"INT_FAST32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST32_MIN"}},{"label":" INT_FAST64_MAX","kind":1,"sortText":"40ec52eaINT_FAST64_MAX","filterText":"INT_FAST64_MAX","insertText":"INT_FAST64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST64_MAX"}},{"label":" INT_FAST64_MIN","kind":1,"sortText":"40ec52eaINT_FAST64_MIN","filterText":"INT_FAST64_MIN","insertText":"INT_FAST64_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST64_MIN"}},{"label":" INT_FAST8_MAX","kind":1,"sortText":"40ec52eaINT_FAST8_MAX","filterText":"INT_FAST8_MAX","insertText":"INT_FAST8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST8_MAX"}},{"label":" INT_FAST8_MIN","kind":1,"sortText":"40ec52eaINT_FAST8_MIN","filterText":"INT_FAST8_MIN","insertText":"INT_FAST8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_FAST8_MIN"}},{"label":" INT_LEAST16_MIN","kind":1,"sortText":"40ec52eaINT_LEAST16_MIN","filterText":"INT_LEAST16_MIN","insertText":"INT_LEAST16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_LEAST16_MIN"}},{"label":" INT_LEAST32_MAX","kind":1,"sortText":"40ec52eaINT_LEAST32_MAX","filterText":"INT_LEAST32_MAX","insertText":"INT_LEAST32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_LEAST32_MAX"}},{"label":" INT_LEAST32_MIN","kind":1,"sortText":"40ec52eaINT_LEAST32_MIN","filterText":"INT_LEAST32_MIN","insertText":"INT_LEAST32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_LEAST32_MIN"}},{"label":" INT_LEAST64_MAX","kind":1,"sortText":"40ec52eaINT_LEAST64_MAX","filterText":"INT_LEAST64_MAX","insertText":"INT_LEAST64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_LEAST64_MAX"}},{"label":" INT_LEAST8_MAX","kind":1,"sortText":"40ec52eaINT_LEAST8_MAX","filterText":"INT_LEAST8_MAX","insertText":"INT_LEAST8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INT_LEAST8_MAX"}},{"label":" ISC00","kind":1,"sortText":"40ec52eaISC00","filterText":"ISC00","insertText":"ISC00","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ISC00"}},{"label":" ISC10","kind":1,"sortText":"40ec52eaISC10","filterText":"ISC10","insertText":"ISC10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ISC10"}},{"label":" ISC11","kind":1,"sortText":"40ec52eaISC11","filterText":"ISC11","insertText":"ISC11","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"ISC11"}},{"label":" IVCE","kind":1,"sortText":"40ec52eaIVCE","filterText":"IVCE","insertText":"IVCE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"IVCE"}},{"label":" interrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eainterrupts","filterText":"interrupts","insertText":"interrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"interrupts()"}},{"label":"•IDATA2","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85IDATA2","filterText":"IDATA2","insertText":"IDATA2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"IDATA2"}},{"label":"•IDATACLC3","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85IDATACLC3","filterText":"IDATACLC3","insertText":"IDATACLC3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"IDATACLC3"}},{"label":"•INTERRUPT_THRESHOLD","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"410abe85INTERRUPT_THRESHOLD","filterText":"INTERRUPT_THRESHOLD","insertText":"INTERRUPT_THRESHOLD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":10}},"newText":"INTERRUPT_THRESHOLD"}}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/38","percentage":2.6315789473684212,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":12,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":22,"character":3},"end":{"line":22,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":13,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":15,"character":6}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 223

{"id":14,"result":{"contents":{"kind":"markdown","value":"### variable `g`  \n\n---\nType: `byte`  \n\n---\n```cpp\nbyte g\n```"},"range":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},"jsonrpc":"2.0"}
<<<
Content-Length: 196

{"jsonrpc":"2.0","id":15,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":15,"character":6}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}
>>>
Content-Length: 185

{"id":15,"result":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","range":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 358

{"id":16,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 386

{"id":17,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":242},"contentChanges":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":19,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":25}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":242}}}Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":243},"contentChanges":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"rangeLength":0,"text":"1"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":21,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":243}}}Content-Length: 204

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":11}}}
>>>
Content-Length: 386

{"id":23,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":11},"end":{"line":29,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":244},"contentChanges":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":11}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":25,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":245},"contentChanges":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":10}},"rangeLength":0,"text":"5"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":26,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":11},"end":{"line":29,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":245}}}Content-Length: 191

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":1}}}
>>>
Content-Length: 39

{"id":28,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":1}}}
>>>
Content-Length: 39

{"id":29,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":2}}}
>>>
Content-Length: 386

{"id":30,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":32,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":38}}}
>>>
Content-Length: 39

{"id":33,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":246},"contentChanges":[{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":38}},"rangeLength":36,"text":"c"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 339

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'c'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":34,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":35,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 35460

{"id":35,"result":{"isIncomplete":true,"items":[{"label":"•CRGB","kind":22,"documentation":{"kind":"markdown","value":"From `\"pixeltypes.h\"`  \nRepresentation of an RGB pixel (Red, Green, Blue)"},"sortText":"3efc9701CRGB","filterText":"CRGB","insertText":"CRGB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGB"}},{"label":" char","kind":14,"sortText":"3f000000char","filterText":"char","insertText":"char","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"char"}},{"label":" char16_t","kind":14,"sortText":"3f000000char16_t","filterText":"char16_t","insertText":"char16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"char16_t"}},{"label":" char32_t","kind":14,"sortText":"3f000000char32_t","filterText":"char32_t","insertText":"char32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"char32_t"}},{"label":" class","kind":14,"sortText":"3f000000class","filterText":"class","insertText":"class","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"class"}},{"label":" const","kind":14,"sortText":"3f000000const","filterText":"const","insertText":"const","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"const"}},{"label":" const_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000const_cast","filterText":"const_cast","insertText":"const_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"const_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" constexpr","kind":14,"sortText":"3f000000constexpr","filterText":"constexpr","insertText":"constexpr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"constexpr"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"3f03413bCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3f2cccccCFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CFastLED()"}},{"label":"•CHSV","kind":22,"documentation":{"kind":"markdown","value":"From `\"pixeltypes.h\"`  \nRepresentation of an HSV pixel (hue, saturation, value (aka brightness))."},"sortText":"3f3a59f0CHSV","filterText":"CHSV","insertText":"CHSV","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CHSV"}},{"label":"•CLEDController","kind":7,"documentation":{"kind":"markdown","value":"From `\"controller.h\"`  \nBase definition for an LED controller. Pretty much the methods that every LED controller object will make available.  \nNote that the showARGB method is not impelemented for all controllers yet. Note also the methods for eventual checking of background writing of data (I'm looking at you, teensy 3.0 DMA controller!). If you want to pass LED controllers around to methods, make them references to this type, keeps your code saner. However, most people won't be seeing/using these objects directly at all"},"sortText":"3f4a1413CLEDController","filterText":"CLEDController","insertText":"CLEDController","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLEDController"}},{"label":"•ColorTemperature","kind":8,"documentation":{"kind":"markdown","value":"From `\"color.h\"`"},"sortText":"3f651eb8ColorTemperature","filterText":"ColorTemperature","insertText":"ColorTemperature","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"ColorTemperature"}},{"label":" CHSV(…)","kind":4,"detail":"[3 overloads]","sortText":"3f733333CHSV","filterText":"CHSV","insertText":"CHSV($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CHSV($0)"}},{"label":" CLEDController(…)","kind":4,"detail":"[3 overloads]","sortText":"3f733333CLEDController","filterText":"CLEDController","insertText":"CLEDController($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLEDController($0)"}},{"label":" CRGB(…)","kind":4,"detail":"[7 overloads]","sortText":"3f733333CRGB","filterText":"CRGB","insertText":"CRGB($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGB($0)"}},{"label":" calloc(size_t __nele, size_t __size)","kind":3,"detail":"void *","documentation":{"kind":"markdown","value":"Allocate \\\\c nele elements of \\\\c size each. Identical to calling  \n\\\\c malloc() using \\\u003ctt\u003enele * size\\\u003c/tt\u003e as argument, except the allocated memory will be cleared to zero."},"sortText":"403f858bcalloc","filterText":"calloc","insertText":"calloc(${1:size_t __nele}, ${2:size_t __size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"calloc(${1:size_t __nele}, ${2:size_t __size})"}},{"label":" cbrt(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cbrt() function returns the cube root of \\\\a \\_\\_x."},"sortText":"403f858bcbrt","filterText":"cbrt","insertText":"cbrt(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cbrt(${1:double __x})"}},{"label":" ceil(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The ceil() function returns the smallest integral value greater than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"403f858bceil","filterText":"ceil","insertText":"ceil(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"ceil(${1:double __x})"}},{"label":" copysign(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The copysign() function returns \\\\a \\_\\_x but with the sign of \\\\a \\_\\_y.  \nThey work even if \\\\a \\_\\_x or \\\\a \\_\\_y are NaN or zero."},"sortText":"403f858bcopysign","filterText":"copysign","insertText":"copysign(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"copysign(${1:double __x}, ${2:double __y})"}},{"label":" cos(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cos() function returns the cosine of \\\\a \\_\\_x, measured in radians."},"sortText":"403f858bcos","filterText":"cos","insertText":"cos(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cos(${1:double __x})"}},{"label":" cosh(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The cosh() function returns the hyperbolic cosine of \\\\a \\_\\_x."},"sortText":"403f858bcosh","filterText":"cosh","insertText":"cosh(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cosh(${1:double __x})"}},{"label":"•cleanup_R1()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nClean up the r1 register after a series of \\*LEAVING_R1_DIRTY calls"},"sortText":"4066d1c6cleanup_R1","filterText":"cleanup_R1","insertText":"cleanup_R1()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cleanup_R1()"}},{"label":" CEveryNBSeconds","kind":7,"sortText":"4068a03fCEveryNBSeconds","filterText":"CEveryNBSeconds","insertText":"CEveryNBSeconds","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CEveryNBSeconds"}},{"label":" CEveryNHours","kind":7,"sortText":"4068a03fCEveryNHours","filterText":"CEveryNHours","insertText":"CEveryNHours","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CEveryNHours"}},{"label":" CEveryNMillis","kind":7,"sortText":"4068a03fCEveryNMillis","filterText":"CEveryNMillis","insertText":"CEveryNMillis","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CEveryNMillis"}},{"label":" CEveryNMinutes","kind":7,"sortText":"4068a03fCEveryNMinutes","filterText":"CEveryNMinutes","insertText":"CEveryNMinutes","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CEveryNMinutes"}},{"label":" CEveryNSeconds","kind":7,"sortText":"4068a03fCEveryNSeconds","filterText":"CEveryNSeconds","insertText":"CEveryNSeconds","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CEveryNSeconds"}},{"label":"•CHSVPalette16","kind":7,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fCHSVPalette16","filterText":"CHSVPalette16","insertText":"CHSVPalette16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CHSVPalette16"}},{"label":"•CHSVPalette256","kind":7,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fCHSVPalette256","filterText":"CHSVPalette256","insertText":"CHSVPalette256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CHSVPalette256"}},{"label":"•CHSVPalette32","kind":7,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fCHSVPalette32","filterText":"CHSVPalette32","insertText":"CHSVPalette32","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CHSVPalette32"}},{"label":"•CMinWait\u003cint WAIT\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`  \nClass to ensure that a minimum amount of time has kicked since the last time run - and delay if not enough time has passed yet this should make sure that chipsets that have"},"sortText":"4068a03fCMinWait","filterText":"CMinWait","insertText":"CMinWait\u003c${1:int WAIT}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CMinWait\u003c${1:int WAIT}\u003e"}},{"label":"•CPixelLEDController\u003cEOrder RGB_ORDER, int LANES, uint32_t MASK\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"controller.h\"`"},"sortText":"4068a03fCPixelLEDController","filterText":"CPixelLEDController","insertText":"CPixelLEDController\u003c${1:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CPixelLEDController\u003c${1:EOrder RGB_ORDER}\u003e"}},{"label":"•CPixelView\u003cclass PIXEL_TYPE\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"pixelset.h\"`  \n// Represents a set of CRGB led objects. Provides the [] array operator, and works like a normal array in that case.  \n// This should be kept in sync with the set of functions provided by CRGB as well as functions in colorutils. Note // that a pixel set is a window into another set of led data, it is not its own set of led data."},"sortText":"4068a03fCPixelView","filterText":"CPixelView","insertText":"CPixelView\u003c${1:class PIXEL_TYPE}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CPixelView\u003c${1:class PIXEL_TYPE}\u003e"}},{"label":"•CRGBArray\u003cint SIZE\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"pixelset.h\"`"},"sortText":"4068a03fCRGBArray","filterText":"CRGBArray","insertText":"CRGBArray\u003c${1:int SIZE}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGBArray\u003c${1:int SIZE}\u003e"}},{"label":"•CRGBPalette16","kind":7,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nPalettes  \nRGB Palettes map an 8-bit value (0..255) to an RGB color.  \nYou can create any color palette you wish; a couple of starters are provided: Forest, Clouds, Lava, Ocean, Rainbow, and Rainbow Stripes.  \nPalettes come in the traditional 256-entry variety, which take up 768 bytes of RAM, and lightweight 16-entry varieties. The 16-entry variety automatically interpolates between its entries to produce a full 256-element color map, but at a cost of only 48 bytes or RAM.  \nBasic operation is like this: (example shows the 16-entry variety)  \n1\\. Declare your palette storage:  \nCRGBPalette16 myPalette;  \n2\\. Fill myPalette with your own 16 colors, or with a preset color scheme.  \nYou can specify your 16 colors a variety of ways:  \nCRGBPalette16 myPalette( CRGB::Black,  \nCRGB::Black,  \nCRGB::Red,  \nCRGB::Yellow,  \nCRGB::Green,  \nCRGB::Blue,  \nCRGB::Purple,  \nCRGB::Black,  \n0x100000,  \n0x200000,  \n0x400000,  \n0x800000,  \nCHSV( 30,255,255),  \nCHSV( 50,255,255),  \nCHSV( 70,255,255),  \nCHSV( 90,255,255) );  \nOr you can initiaize your palette with a preset color scheme:  \nmyPalette = RainbowStripesColors_p;  \n3\\. Any time you want to set a pixel to a color from your palette, use \"ColorFromPalette(...)\" as shown:  \nuint8_t index = /\\* any value 0..255 \\*/;  \nleds[i] = ColorFromPalette( myPalette, index);  \nEven though your palette has only 16 explicily defined entries, you can use an 'index' from 0..255. The 16 explicit palette entries will be spread evenly across the 0..255 range, and the intermedate values will be RGB-interpolated between adjacent explicit entries.  \nIt's easier to use than it sounds."},"sortText":"4068a03fCRGBPalette16","filterText":"CRGBPalette16","insertText":"CRGBPalette16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGBPalette16"}},{"label":"•CRGBPalette256","kind":7,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fCRGBPalette256","filterText":"CRGBPalette256","insertText":"CRGBPalette256","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGBPalette256"}},{"label":"•CRGBPalette32","kind":7,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fCRGBPalette32","filterText":"CRGBPalette32","insertText":"CRGBPalette32","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGBPalette32"}},{"label":"•CRGBSet","kind":8,"documentation":{"kind":"markdown","value":"From `\"pixelset.h\"`"},"sortText":"4068a03fCRGBSet","filterText":"CRGBSet","insertText":"CRGBSet","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CRGBSet"}},{"label":"•Candle","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n1900 K, 255, 147, 41"},"sortText":"4068a03fCandle","filterText":"Candle","insertText":"Candle","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"Candle"}},{"label":"•CarbonArc","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n5200 K, 255, 250, 244"},"sortText":"4068a03fCarbonArc","filterText":"CarbonArc","insertText":"CarbonArc","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CarbonArc"}},{"label":"•ClearBlueSky","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n20000 K, 64, 156, 255"},"sortText":"4068a03fClearBlueSky","filterText":"ClearBlueSky","insertText":"ClearBlueSky","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"ClearBlueSky"}},{"label":" CloudColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Cloudy color pallete"},"sortText":"4068a03fCloudColors_p","filterText":"CloudColors_p","insertText":"CloudColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CloudColors_p"}},{"label":"•ColorFromPalette(…)","kind":3,"detail":"[8 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fColorFromPalette","filterText":"ColorFromPalette","insertText":"ColorFromPalette($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"ColorFromPalette($0)"}},{"label":"•CoolWhiteFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 212, 235, 255"},"sortText":"4068a03fCoolWhiteFluorescent","filterText":"CoolWhiteFluorescent","insertText":"CoolWhiteFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CoolWhiteFluorescent"}},{"label":"•calculate_max_brightness_for_power_mW(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \ncalculate_max_brightness_for_power_mW tells you the highest brightness level you can use and still stay under the specified power budget. It takes a 'target brightness' which is the brightness you'd ideally like to use. The result from this function will be no higher than the target_brightess you supply, but may be lower."},"sortText":"4068a03fcalculate_max_brightness_for_power_mW","filterText":"calculate_max_brightness_for_power_mW","insertText":"calculate_max_brightness_for_power_mW($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"calculate_max_brightness_for_power_mW($0)"}},{"label":"•calculate_max_brightness_for_power_vmA(const CRGB *ledbuffer, uint16_t numLeds, uint8_t target_brightness, uint32_t max_power_V, uint32_t max_power_mA)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \ncalculate_max_brightness_for_power_mW tells you the highest brightness level you can use and still stay under the specified power budget for a given set of leds. It takes a pointer to an array of CRGB objects, a count, a 'target brightness' which is the brightness you'd ideally like to use, and the max power in volts and milliamps. The result from this function will be no higher than the target_brightess you supply, but may be lower."},"sortText":"4068a03fcalculate_max_brightness_for_power_vmA","filterText":"calculate_max_brightness_for_power_vmA","insertText":"calculate_max_brightness_for_power_vmA(${1:const CRGB *ledbuffer}, ${2:uint16_t numLeds}, ${3:uint8_t target_brightness}, ${4:uint32_t max_power_V}, ${5:uint32_t max_power_mA})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"calculate_max_brightness_for_power_vmA(${1:const CRGB *ledbuffer}, ${2:uint16_t numLeds}, ${3:uint8_t target_brightness}, ${4:uint32_t max_power_V}, ${5:uint32_t max_power_mA})"}},{"label":"•calculate_unscaled_power_mW(const CRGB *ledbuffer, uint16_t numLeds)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \ncalculate_unscaled_power_mW tells you how many milliwatts the current LED data would draw at brightness = 255."},"sortText":"4068a03fcalculate_unscaled_power_mW","filterText":"calculate_unscaled_power_mW","insertText":"calculate_unscaled_power_mW(${1:const CRGB *ledbuffer}, ${2:uint16_t numLeds})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"calculate_unscaled_power_mW(${1:const CRGB *ledbuffer}, ${2:uint16_t numLeds})"}},{"label":" clearerr(FILE *__stream)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Clear the error and end-of-file flags of \\\\c stream."},"sortText":"4068a03fclearerr","filterText":"clearerr","insertText":"clearerr(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"clearerr(${1:FILE *__stream})"}},{"label":"•countPulseASM(volatile uint8_t *port, uint8_t bit, uint8_t stateMask, unsigned long maxloops)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"4068a03fcountPulseASM","filterText":"countPulseASM","insertText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})"}},{"label":" cubicwave8(uint8_t in)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"cubicwave8: cubic waveform generator. Spends visibly more time at the limits than 'sine' does."},"sortText":"4068a03fcubicwave8","filterText":"cubicwave8","insertText":"cubicwave8(${1:uint8_t in})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cubicwave8(${1:uint8_t in})"}},{"label":"•cos16(uint16_t theta)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/trig8.h\"`  \nFast 16-bit approximation of cos(x). This approximation never varies more than  \n0.69% from the floating point value you'd get by doing  \nfloat s = cos(x) * 32767.0;  \n@param theta input angle from 0-65535  \n@returns sin of theta, value between -32767 to 32767."},"sortText":"4071b066cos16","filterText":"cos16","insertText":"cos16(${1:uint16_t theta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cos16(${1:uint16_t theta})"}},{"label":"•cos8(uint8_t theta)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/trig8.h\"`  \nFast 8-bit approximation of cos(x). This approximation never varies more than 2% from the floating point value you'd get by doing  \nfloat s = (cos(x) * 128.0) + 128;  \n@param theta input angle from 0-255  \n@returns sin of theta, value between 0 and 255"},"sortText":"4071b066cos8","filterText":"cos8","insertText":"cos8(${1:uint8_t theta})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cos8(${1:uint8_t theta})"}},{"label":"•ClocklessController\u003cuint8_t DATA_PIN, int T1, int T2, int T3, EOrder RGB_ORDER, int XTRA0, bool FLIP, int WAIT_TIME\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40791bfcClocklessController","filterText":"ClocklessController","insertText":"ClocklessController\u003c${1:uint8_t DATA_PIN}, ${2:int T1}, ${3:int T2}, ${4:int T3}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"ClocklessController\u003c${1:uint8_t DATA_PIN}, ${2:int T1}, ${3:int T2}, ${4:int T3}\u003e"}},{"label":" CLOCK_PIN","kind":1,"sortText":"40800000CLOCK_PIN","filterText":"CLOCK_PIN","insertText":"CLOCK_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLOCK_PIN"}},{"label":" cbrtf","kind":1,"sortText":"40d1050acbrtf","filterText":"cbrtf","insertText":"cbrtf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cbrtf"}},{"label":" ceilf","kind":1,"sortText":"40d1050aceilf","filterText":"ceilf","insertText":"ceilf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"ceilf"}},{"label":" copysignf","kind":1,"sortText":"40d1050acopysignf","filterText":"copysignf","insertText":"copysignf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"copysignf"}},{"label":" cosf","kind":1,"sortText":"40d1050acosf","filterText":"cosf","insertText":"cosf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"cosf"}},{"label":" coshf","kind":1,"sortText":"40d1050acoshf","filterText":"coshf","insertText":"coshf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"coshf"}},{"label":" CAL0","kind":1,"sortText":"40ec52eaCAL0","filterText":"CAL0","insertText":"CAL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL0"}},{"label":" CAL1","kind":1,"sortText":"40ec52eaCAL1","filterText":"CAL1","insertText":"CAL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL1"}},{"label":" CAL2","kind":1,"sortText":"40ec52eaCAL2","filterText":"CAL2","insertText":"CAL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL2"}},{"label":" CAL3","kind":1,"sortText":"40ec52eaCAL3","filterText":"CAL3","insertText":"CAL3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL3"}},{"label":" CAL4","kind":1,"sortText":"40ec52eaCAL4","filterText":"CAL4","insertText":"CAL4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL4"}},{"label":" CAL5","kind":1,"sortText":"40ec52eaCAL5","filterText":"CAL5","insertText":"CAL5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL5"}},{"label":" CAL6","kind":1,"sortText":"40ec52eaCAL6","filterText":"CAL6","insertText":"CAL6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL6"}},{"label":" CAL7","kind":1,"sortText":"40ec52eaCAL7","filterText":"CAL7","insertText":"CAL7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CAL7"}},{"label":" CHANGE","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaCHANGE","filterText":"CHANGE","insertText":"CHANGE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CHANGE"}},{"label":" CLKPCE","kind":1,"sortText":"40ec52eaCLKPCE","filterText":"CLKPCE","insertText":"CLKPCE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLKPCE"}},{"label":" CLKPR","kind":1,"sortText":"40ec52eaCLKPR","filterText":"CLKPR","insertText":"CLKPR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLKPR"}},{"label":" CLKPS0","kind":1,"sortText":"40ec52eaCLKPS0","filterText":"CLKPS0","insertText":"CLKPS0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLKPS0"}},{"label":" CLKPS1","kind":1,"sortText":"40ec52eaCLKPS1","filterText":"CLKPS1","insertText":"CLKPS1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLKPS1"}},{"label":" CLKPS2","kind":1,"sortText":"40ec52eaCLKPS2","filterText":"CLKPS2","insertText":"CLKPS2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLKPS2"}},{"label":" CLKPS3","kind":1,"sortText":"40ec52eaCLKPS3","filterText":"CLKPS3","insertText":"CLKPS3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CLKPS3"}},{"label":" COM0A0","kind":1,"sortText":"40ec52eaCOM0A0","filterText":"COM0A0","insertText":"COM0A0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM0A0"}},{"label":" COM0A1","kind":1,"sortText":"40ec52eaCOM0A1","filterText":"COM0A1","insertText":"COM0A1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM0A1"}},{"label":" COM0B0","kind":1,"sortText":"40ec52eaCOM0B0","filterText":"COM0B0","insertText":"COM0B0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM0B0"}},{"label":" COM0B1","kind":1,"sortText":"40ec52eaCOM0B1","filterText":"COM0B1","insertText":"COM0B1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM0B1"}},{"label":" COM1A0","kind":1,"sortText":"40ec52eaCOM1A0","filterText":"COM1A0","insertText":"COM1A0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM1A0"}},{"label":" COM1A1","kind":1,"sortText":"40ec52eaCOM1A1","filterText":"COM1A1","insertText":"COM1A1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM1A1"}},{"label":" COM1B0","kind":1,"sortText":"40ec52eaCOM1B0","filterText":"COM1B0","insertText":"COM1B0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM1B0"}},{"label":" COM1B1","kind":1,"sortText":"40ec52eaCOM1B1","filterText":"COM1B1","insertText":"COM1B1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM1B1"}},{"label":" COM2A0","kind":1,"sortText":"40ec52eaCOM2A0","filterText":"COM2A0","insertText":"COM2A0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM2A0"}},{"label":" COM2A1","kind":1,"sortText":"40ec52eaCOM2A1","filterText":"COM2A1","insertText":"COM2A1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM2A1"}},{"label":" COM2B0","kind":1,"sortText":"40ec52eaCOM2B0","filterText":"COM2B0","insertText":"COM2B0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM2B0"}},{"label":" COM2B1","kind":1,"sortText":"40ec52eaCOM2B1","filterText":"COM2B1","insertText":"COM2B1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"COM2B1"}},{"label":" CPHA","kind":1,"sortText":"40ec52eaCPHA","filterText":"CPHA","insertText":"CPHA","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CPHA"}},{"label":" CPOL","kind":1,"sortText":"40ec52eaCPOL","filterText":"CPOL","insertText":"CPOL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CPOL"}},{"label":" CS00","kind":1,"sortText":"40ec52eaCS00","filterText":"CS00","insertText":"CS00","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS00"}},{"label":" CS01","kind":1,"sortText":"40ec52eaCS01","filterText":"CS01","insertText":"CS01","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS01"}},{"label":" CS02","kind":1,"sortText":"40ec52eaCS02","filterText":"CS02","insertText":"CS02","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS02"}},{"label":" CS10","kind":1,"sortText":"40ec52eaCS10","filterText":"CS10","insertText":"CS10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS10"}},{"label":" CS11","kind":1,"sortText":"40ec52eaCS11","filterText":"CS11","insertText":"CS11","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS11"}},{"label":" CS12","kind":1,"sortText":"40ec52eaCS12","filterText":"CS12","insertText":"CS12","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS12"}},{"label":" CS20","kind":1,"sortText":"40ec52eaCS20","filterText":"CS20","insertText":"CS20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS20"}},{"label":" CS21","kind":1,"sortText":"40ec52eaCS21","filterText":"CS21","insertText":"CS21","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS21"}},{"label":" CS22","kind":1,"sortText":"40ec52eaCS22","filterText":"CS22","insertText":"CS22","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"CS22"}},{"label":" clockCyclesPerMicrosecond()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaclockCyclesPerMicrosecond","filterText":"clockCyclesPerMicrosecond","insertText":"clockCyclesPerMicrosecond()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"clockCyclesPerMicrosecond()"}},{"label":" clockCyclesToMicroseconds(a)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaclockCyclesToMicroseconds","filterText":"clockCyclesToMicroseconds","insertText":"clockCyclesToMicroseconds(${1:a})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"newText":"clockCyclesToMicroseconds(${1:a})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 444

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":3},"end":{"line":29,"character":3}},"context":{"diagnostics":[{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"message":"Use of undeclared identifier 'c'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":246}}}Content-Length: 323

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":247},"contentChanges":[{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":3}},"rangeLength":1,"text":"setLeds(5, NUM_LEDS - 1, 0, 255, 0);"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":37,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":38,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":247}}}Content-Length: 266

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":28,"character":27},"end":{"line":28,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":248},"contentChanges":[{"range":{"start":{"line":28,"character":27},"end":{"line":28,"character":27}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 163

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":40,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":248}}}Content-Length: 287

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":249},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":41,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 323

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":250},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":0}},"rangeLength":0,"text":"setLeds(5, NUM_LEDS - 1, 0, 255, 0);"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":42,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":36},"end":{"line":29,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":250}}}Content-Length: 191

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":0}}}
>>>
Content-Length: 356

{"id":44,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":7}}},"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":1}}}
>>>
Content-Length: 473

{"id":45,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":7}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":1},"end":{"line":29,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":46,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":12}}}
>>>
Content-Length: 358

{"id":47,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":28,"character":11},"end":{"line":28,"character":12}}},"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":12}}}
>>>
Content-Length: 358

{"id":48,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":28,"character":11},"end":{"line":28,"character":12}}},"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":49,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":251},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":0}},"rangeLength":0,"text":"  "}]}}Content-Length: 163

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":50,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":12}}}
>>>
Content-Length: 358

{"id":52,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":28,"character":11},"end":{"line":28,"character":12}}},"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":251}}}Content-Length: 192

{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":29}}}
>>>
Content-Length: 358

{"id":53,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":28},"end":{"line":29,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":28}}}
>>>
Content-Length: 473

{"id":54,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":28},"end":{"line":29,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":55,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":56,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":30}}}
>>>
Content-Length: 39

{"id":56,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":57,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":17}}}
>>>
Content-Length: 219

{"id":57,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 15\n```"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":21}}},"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":10}}}
>>>
Content-Length: 39

{"id":58,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":10}}}
>>>
Content-Length: 39

{"id":59,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":16}}}
>>>
Content-Length: 219

{"id":60,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 15\n```"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":21}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":16}}}
>>>
Content-Length: 37

{"id":61,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":16},"end":{"line":29,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 395

{"id":62,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server278470947/sketch/project.ino.cpp","selection":{"start":{"line":38,"character":16},"end":{"line":38,"character":16}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 741

{"id":63,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server278470947/sketch/project.ino.cpp","selection":{"start":{"line":38,"character":13},"end":{"line":38,"character":21}}}]}},{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":29,"character":13},"end":{"line":29,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":25}}}
>>>
Content-Length: 358

{"id":64,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":24}}}
>>>
Content-Length: 39

{"id":65,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 473

{"id":66,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":252},"contentChanges":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":68,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":253},"contentChanges":[{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":24}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":69,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":254},"contentChanges":[{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":70,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":255},"contentChanges":[{"range":{"start":{"line":29,"character":21},"end":{"line":29,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":72,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":21},"end":{"line":29,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 395

{"id":73,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server278470947/sketch/project.ino.cpp","selection":{"start":{"line":38,"character":21},"end":{"line":38,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":256},"contentChanges":[{"range":{"start":{"line":29,"character":20},"end":{"line":29,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 512

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":20}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'NUM_LED'; did you mean 'HUE_RED'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:78:5:\nnote: 'HUE_RED' declared here"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":74,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":257},"contentChanges":[{"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":19}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_LE'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":75,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":258},"contentChanges":[{"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 345

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_L'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":76,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":259},"contentChanges":[{"range":{"start":{"line":29,"character":17},"end":{"line":29,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 344

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":77,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":260},"contentChanges":[{"range":{"start":{"line":29,"character":16},"end":{"line":29,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 343

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":78,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":261},"contentChanges":[{"range":{"start":{"line":29,"character":15},"end":{"line":29,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":15}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NU'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":79,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":262},"contentChanges":[{"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'N'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":80,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":263},"contentChanges":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":81,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":82,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":264},"contentChanges":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":13}},"rangeLength":0,"text":"1"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":83,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":83,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":265},"contentChanges":[{"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":14}},"rangeLength":0,"text":"0"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":84,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":15},"end":{"line":29,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":85,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":265}}}Content-Length: 204

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":15}}}
>>>
Content-Length: 37

{"id":86,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":15},"end":{"line":30,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 395

{"id":87,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server278470947/sketch/project.ino.cpp","selection":{"start":{"line":39,"character":15},"end":{"line":39,"character":15}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":88,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":11}}}
>>>
Content-Length: 473

{"id":88,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":266},"contentChanges":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":11}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":90,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":267},"contentChanges":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":10}},"rangeLength":0,"text":"1"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":91,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":268},"contentChanges":[{"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"rangeLength":0,"text":"9"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":92,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":93,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":268}}}Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":269},"contentChanges":[{"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":94,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":95,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":270},"contentChanges":[{"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":96,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":270}}}Content-Length: 192

{"jsonrpc":"2.0","id":98,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":33}}}
>>>
Content-Length: 39

{"id":98,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":18}}}
>>>
Content-Length: 358

{"id":99,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":17}}}
>>>
Content-Length: 40

{"id":100,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":18}}}
>>>
Content-Length: 474

{"id":101,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":102,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":27,"character":59}}}
>>>
Content-Length: 40

{"id":103,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":271},"contentChanges":[{"range":{"start":{"line":29,"character":17},"end":{"line":29,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":17},"end":{"line":29,"character":18}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":104,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":272},"contentChanges":[{"range":{"start":{"line":29,"character":17},"end":{"line":29,"character":17}},"rangeLength":0,"text":"2"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":105,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":273},"contentChanges":[{"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":18}},"rangeLength":0,"text":"5"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":107,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":274},"contentChanges":[{"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":19}},"rangeLength":0,"text":"5"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":108,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":20},"end":{"line":29,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":274}}}Content-Length: 193

{"jsonrpc":"2.0","id":110,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":23}}}
>>>
Content-Length: 359

{"id":110,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":111,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":24}}}
>>>
Content-Length: 40

{"id":111,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":25}}}
>>>
Content-Length: 359

{"id":112,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":28,"character":25},"end":{"line":28,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":22}}}
>>>
Content-Length: 359

{"id":113,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":22}}}
>>>
Content-Length: 474

{"id":114,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":27,"character":29}}}
>>>
Content-Length: 219

{"id":116,"result":{"contents":{"kind":"markdown","value":"### macro `DATA_PIN`  \n\n---\n```cpp\n#define DATA_PIN 3\n```"},"range":{"start":{"line":27,"character":28},"end":{"line":27,"character":36}}},"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":275},"contentChanges":[{"range":{"start":{"line":28,"character":21},"end":{"line":28,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":28,"character":21},"end":{"line":28,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":117,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":276},"contentChanges":[{"range":{"start":{"line":28,"character":21},"end":{"line":28,"character":21}},"rangeLength":0,"text":"2"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":118,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":277},"contentChanges":[{"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":22}},"rangeLength":0,"text":"5"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":119,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":278},"contentChanges":[{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":23}},"rangeLength":0,"text":"5"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":120,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":278}}}Content-Length: 193

{"jsonrpc":"2.0","id":122,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":18}}}
>>>
Content-Length: 40

{"id":122,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":18}}}
>>>
Content-Length: 40

{"id":123,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":28}}}
>>>
Content-Length: 40

{"id":124,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":125,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":29}}}
>>>
Content-Length: 359

{"id":125,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":30}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 359

{"id":126,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":26},"end":{"line":30,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":127,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":31}}}
>>>
Content-Length: 40

{"id":127,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":128,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":29}}}
>>>
Content-Length: 359

{"id":128,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":30}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":28}}}
>>>
Content-Length: 40

{"id":129,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":29}}}
>>>
Content-Length: 474

{"id":130,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":279},"contentChanges":[{"range":{"start":{"line":30,"character":28},"end":{"line":30,"character":29}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":132,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":28},"end":{"line":30,"character":29}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":132,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":280},"contentChanges":[{"range":{"start":{"line":30,"character":28},"end":{"line":30,"character":28}},"rangeLength":0,"text":"2"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":133,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":133,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":281},"contentChanges":[{"range":{"start":{"line":30,"character":29},"end":{"line":30,"character":29}},"rangeLength":0,"text":"5"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":134,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":282},"contentChanges":[{"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"rangeLength":0,"text":"5"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":135,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":135,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":31},"end":{"line":30,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":136,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":282}}}Content-Length: 193

{"jsonrpc":"2.0","id":137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":32}}}
>>>
Content-Length: 359

{"id":137,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":31},"end":{"line":30,"character":32}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":138,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":35}}}
>>>
Content-Length: 40

{"id":138,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":139,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":36}}}
>>>
Content-Length: 474

{"id":139,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":33},"end":{"line":30,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 383

{"id":140,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":30,"character":33},"end":{"line":30,"character":36}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":283},"contentChanges":[{"range":{"start":{"line":30,"character":33},"end":{"line":30,"character":36}},"rangeLength":3,"text":"0"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":141,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":141,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":142,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":34},"end":{"line":30,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":142,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":283}}}Content-Length: 193

{"jsonrpc":"2.0","id":143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":16}}}
>>>
Content-Length: 359

{"id":143,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":15},"end":{"line":29,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":144,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":22}}}
>>>
Content-Length: 40

{"id":144,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":145,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":23}}}
>>>
Content-Length: 40

{"id":145,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":146,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":23}}}
>>>
Content-Length: 38

{"id":146,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 383

{"id":147,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":29,"character":22},"end":{"line":29,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":284},"contentChanges":[{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":25}},"rangeLength":3,"text":"2"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":148,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":148,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":285},"contentChanges":[{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":23}},"rangeLength":0,"text":"3"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":149,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":286},"contentChanges":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"rangeLength":0,"text":"4"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":150,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":151,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":151,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":286}}}Content-Length: 193

{"jsonrpc":"2.0","id":152,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":28}}}
>>>
Content-Length: 359

{"id":152,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":28},"end":{"line":29,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":153,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 359

{"id":153,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":26},"end":{"line":30,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":154,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":26}}}
>>>
Content-Length: 474

{"id":154,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":26},"end":{"line":30,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":155,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":16}}}
>>>
Content-Length: 359

{"id":156,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":15},"end":{"line":29,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":157,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":10}}}
>>>
Content-Length: 40

{"id":157,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":12}}}
>>>
Content-Length: 359

{"id":158,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":13}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":159,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":12}}}
>>>
Content-Length: 359

{"id":159,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":11},"end":{"line":29,"character":12}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":160,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":14}}}
>>>
Content-Length: 40

{"id":160,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":13}}}
>>>
Content-Length: 40

{"id":161,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":14}}}
>>>
Content-Length: 474

{"id":162,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":163,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":287},"contentChanges":[{"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":164,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":14}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":164,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":288},"contentChanges":[{"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":13}},"rangeLength":0,"text":"4"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":165,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":165,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":166,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":288}}}Content-Length: 205

{"jsonrpc":"2.0","id":167,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":14}}}
>>>
Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":168,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":11}}}
>>>
Content-Length: 474

{"id":168,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":11},"end":{"line":29,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":289},"contentChanges":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":11}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":170,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":290},"contentChanges":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":10}},"rangeLength":0,"text":"4"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":171,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":11},"end":{"line":29,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":172,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":290}}}Content-Length: 205

{"jsonrpc":"2.0","id":173,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":13}}}
>>>
Content-Length: 38

{"id":173,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":15},"end":{"line":29,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":174,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":291},"contentChanges":[{"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":175,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":292},"contentChanges":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":176,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 437

{"jsonrpc":"2.0","id":177,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":13}},"context":{"diagnostics":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":14}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":177,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":293},"contentChanges":[{"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":13}},"rangeLength":0,"text":"8"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":178,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":178,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":179,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":293}}}Content-Length: 205

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":14}}}
>>>
Content-Length: 38

{"id":180,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":181,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":12}}}
>>>
Content-Length: 474

{"id":181,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}},"kind":1},{"range":{"start":{"line":28,"character":2},"end":{"line":28,"character":9}},"kind":1},{"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":9}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":12},"end":{"line":30,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":182,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":294},"contentChanges":[{"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":183,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":295},"contentChanges":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":11}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":184,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":296},"contentChanges":[{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":10}},"rangeLength":0,"text":"8"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":185,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":185,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":6}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":9}},"selectionRange":{"start":{"line":15,"character":8},"end":{"line":15,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":12}},"selectionRange":{"start":{"line":15,"character":11},"end":{"line":15,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":13}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":18,"character":0},"end":{"line":23,"character":1}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":11},"end":{"line":30,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":186,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":296}}}Content-Length: 193

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":20,"character":12}}}
>>>
Content-Length: 423

{"id":187,"result":{"contents":{"kind":"markdown","value":"### instance-method `operator=`  \n\n---\n→ `CRGB \u0026`  \nParameters:  \n- `const CRGB \u0026 rhs`\n\nallow assignment from one RGB struct to another  \n\n---\n```cpp\n// In CRGB\npublic: inline CRGB \u0026operator=(const CRGB \u0026rhs) noexcept = default\n```"},"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":13}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":188,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":20}}}
>>>
Content-Length: 359

{"id":188,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":29,"character":19},"end":{"line":29,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":189,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":27,"character":19}}}
>>>
Content-Length: 314

{"id":189,"result":{"contents":{"kind":"markdown","value":"### class `NEOPIXEL`  \n\n---\n```cpp\ntemplate \u003cuint8_t DATA_PIN\u003e\nclass NEOPIXEL : public WS2812Controller800Khz\u003cDATA_PIN, GRB\u003e {}\n```"},"range":{"start":{"line":27,"character":18},"end":{"line":27,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":190,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":27,"character":16}}}
>>>
Content-Length: 607

{"id":190,"result":{"contents":{"kind":"markdown","value":"### static-method `addLeds`  \n\n---\n→ `CLEDController \u0026`  \nParameters:  \n- `struct CRGB * data`\n- `int nLedsOrOffset`\n- `int nLedsIfOffset = 0`\n\n---\n```cpp\n// In CFastLED\npublic: template \u003c\u003e\nstatic CLEDController \u0026addLeds\u003cNEOPIXEL, '\\x03'\u003e(struct CRGB *data,\n                                                 int nLedsOrOffset,\n                                                 int nLedsIfOffset = 0)\n```"},"range":{"start":{"line":27,"character":10},"end":{"line":27,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":191,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":16}}}
>>>
Content-Length: 40

{"id":191,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":192,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":17}}}
>>>
Content-Length: 40

{"id":192,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":193,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":13,"character":22}}}
>>>
Content-Length: 40

{"id":193,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 291

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":297},"contentChanges":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":0}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":194,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":6}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":9}},"selectionRange":{"start":{"line":16,"character":8},"end":{"line":16,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":12}},"selectionRange":{"start":{"line":16,"character":11},"end":{"line":16,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":13}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":19,"character":0},"end":{"line":24,"character":1}},"selectionRange":{"start":{"line":19,"character":5},"end":{"line":19,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":27,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":27,"character":5},"end":{"line":27,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":35,"character":0},"end":{"line":40,"character":1}},"selectionRange":{"start":{"line":35,"character":5},"end":{"line":35,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":297}}}Content-Length: 291

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":298},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":195,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}






Started logging.

<<<
Content-Length: 3042

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7700,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1257

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","languageId":"cpp","version":298,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 255;\r\n\r\nvoid setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = CRGB (r, g, b);\r\n    FastLED.show();\r\n  }\r\n}\r\n\r\n\r\nvoid setup() { \r\n  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  setLeds(0, 4, 255, 255, 0);\r\n  setLeds(4, 8, 255, 234, 0);\r\n  setLeds(8, NUM_LEDS - 1, 255, 0, 0);\r\n}\r\n\r\n\r\nvoid loop() { \r\n  \r\n\r\n  delay(500);\r\n\r\n}\r\n"}}}Content-Length: 162

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":298}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 1532

{"id":1,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/37","percentage":10.81081081081081,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":15}}}
>>>
Content-Length: 357

{"id":2,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":31,"character":14},"end":{"line":31,"character":15}}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/37","percentage":83.78378378378379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/37","percentage":83.78378378378379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/37","percentage":91.89189189189189,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/37","percentage":94.5945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/37","percentage":97.29729729729729,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":16}}}
>>>
Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":14}}}
>>>
Content-Length: 357

{"id":4,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":14},"end":{"line":30,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":16}}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":15}}}
>>>
Content-Length: 357

{"id":6,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":14},"end":{"line":30,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":16}}}
>>>
Content-Length: 38

{"id":7,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":17}}}
>>>
Content-Length: 38

{"id":8,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":18}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 382

{"id":10,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":299},"contentChanges":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}},"rangeLength":3,"text":"n"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":11,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":12,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":17},"context":{"triggerKind":1}}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'n'"}]},"jsonrpc":"2.0"}Content-Length: 16900

{"id":12,"result":{"isIncomplete":true,"items":[{"label":" num","kind":6,"detail":"int","sortText":"3dfc0000num","filterText":"num","insertText":"num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"num"}},{"label":" new type(expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"new ${1:type}(${0:expressions})"}},{"label":" new type[size](expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"new ${1:type}[${2:size}](${0:expressions})"}},{"label":" noexcept(expression)","kind":15,"detail":"bool","sortText":"3f000000noexcept","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"noexcept(${0:expression})"}},{"label":" nullptr","kind":15,"detail":"std::nullptr_t","sortText":"3f000000nullptr","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nullptr"}},{"label":" NEOPIXEL\u003cuint8_t DATA_PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3f17ae13NEOPIXEL","filterText":"NEOPIXEL","insertText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•nscale8(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8 - scale down the brightness of an array of pixels all at once. This function can scale pixels all the way down to black even if 'scale' is not zero."},"sortText":"3f651eb8nscale8","filterText":"nscale8","insertText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":"•nscale8_video(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8_video - scale down the brightness of an array of pixels all at once. Guaranteed to never scale a pixel all the way down to black, unless 'scale' is zero."},"sortText":"3f651eb8nscale8_video","filterText":"nscale8_video","insertText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":" NUM_LEDS","kind":1,"sortText":"40400000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NUM_LEDS"}},{"label":" noTone(uint8_t _pin)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68noTone","filterText":"noTone","insertText":"noTone(${1:uint8_t _pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"noTone(${1:uint8_t _pin})"}},{"label":" nullptr_t","kind":8,"sortText":"405d8e68nullptr_t","filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nullptr_t"}},{"label":"•NOBLEND","kind":20,"detail":"TBlendType","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fNOBLEND","filterText":"NOBLEND","insertText":"NOBLEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NOBLEND"}},{"label":"•napplyGamma_video(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nThe \"n\" versions below modify their arguments in-place."},"sortText":"4068a03fnapplyGamma_video","filterText":"napplyGamma_video","insertText":"napplyGamma_video($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"napplyGamma_video($0)"}},{"label":"•nblend(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblend - destructively modifies one color, blending in a given fraction of an overlay color"},"sortText":"4068a03fnblend","filterText":"nblend","insertText":"nblend($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nblend($0)"}},{"label":"•nblendPaletteTowardPalette(CRGBPalette16 \u0026currentPalette, CRGBPalette16 \u0026targetPalette, uint8_t maxChanges = 24)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblendPaletteTowardPalette:  \nAlter one palette by making it slightly more like a 'target palette', used for palette cross-fades.  \nIt does this by comparing each of the R, G, and B channels of each entry in the current palette to the corresponding entry in the target palette and making small adjustments:  \nIf the Red channel is too low, it will be increased.  \nIf the Red channel is too high, it will be slightly reduced.  \n... and likewise for Green and Blue channels.  \nAdditionally, there are two significant visual improvements to this algorithm implemented here. First is this:  \nWhen increasing a channel, it is stepped up by ONE.  \nWhen decreasing a channel, it is stepped down by TWO.  \nDue to the way the eye perceives light, and the way colors are represented in RGB, this produces a more uniform apparent brightness when cross-fading between most palette colors.  \nThe second visual tweak is limiting the number of changes that will be made to the palette at once. If all the palette entries are changed at once, it can give a muddled appearance.  \nHowever, if only a few palette entries are changed at once,  \nyou get a visually smoother transition: in the middle of the cross-fade your current palette will actually contain some colors from the old palette, a few blended colors, and some colors from the new palette.  \nThe maximum number of possible palette changes per call is 48 (sixteen color entries time three channels each).  \nThe default 'maximim number of changes' here is 12, meaning that only approximately a quarter of the palette entries will be changed per call."},"sortText":"4068a03fnblendPaletteTowardPalette","filterText":"nblendPaletteTowardPalette","insertText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})"}},{"label":"•nscale8_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8, also this version of nscale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_LEAVING_R1_DIRTY","filterText":"nscale8_LEAVING_R1_DIRTY","insertText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8_video_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8_video, also this version of nscale8_video does not clean up the R1 register on AVR If you are doing several 'scale8_video's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_video_LEAVING_R1_DIRTY","filterText":"nscale8_video_LEAVING_R1_DIRTY","insertText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8x2(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2","filterText":"nscale8x2","insertText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x2_video(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2_video","filterText":"nscale8x2_video","insertText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x3(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3","filterText":"nscale8x3","insertText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":"•nscale8x3_video(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3_video","filterText":"nscale8x3_video","insertText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":" NAN","kind":1,"sortText":"40d1050aNAN","filterText":"NAN","insertText":"NAN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NAN"}},{"label":" NOT_AN_INTERRUPT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_AN_INTERRUPT","filterText":"NOT_AN_INTERRUPT","insertText":"NOT_AN_INTERRUPT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NOT_AN_INTERRUPT"}},{"label":" NOT_A_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PIN","filterText":"NOT_A_PIN","insertText":"NOT_A_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NOT_A_PIN"}},{"label":" NOT_A_PORT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PORT","filterText":"NOT_A_PORT","insertText":"NOT_A_PORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NOT_A_PORT"}},{"label":" NOT_ON_TIMER","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_ON_TIMER","filterText":"NOT_ON_TIMER","insertText":"NOT_ON_TIMER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NOT_ON_TIMER"}},{"label":"•NO_IGNORE_CHAR","kind":1,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40ec52eaNO_IGNORE_CHAR","filterText":"NO_IGNORE_CHAR","insertText":"NO_IGNORE_CHAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NO_IGNORE_CHAR"}},{"label":" NULL","kind":1,"sortText":"40ec52eaNULL","filterText":"NULL","insertText":"NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NULL"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NUM_CONTROLLERS"}},{"label":" noInterrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eanoInterrupts","filterText":"noInterrupts","insertText":"noInterrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"noInterrupts()"}},{"label":"•NO_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"40f66322NO_PIN","filterText":"NO_PIN","insertText":"NO_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NO_PIN"}},{"label":"•NO_TIME(A, B, C)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NO_TIME","filterText":"NO_TIME","insertText":"NO_TIME(${1:A}, ${2:B}, ${3:C})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NO_TIME(${1:A}, ${2:B}, ${3:C})"}},{"label":"•NS(_NS)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NS","filterText":"NS","insertText":"NS(${1:_NS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NS(${1:_NS})"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":300},"contentChanges":[{"range":{"start":{"line":30,"character":17},"end":{"line":30,"character":17}},"rangeLength":0,"text":"u"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'nu'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":13,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":14,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":18},"context":{"triggerKind":3}}}
>>>
Content-Length: 2335

{"id":14,"result":{"isIncomplete":false,"items":[{"label":" num","kind":6,"detail":"int","sortText":"3dfc0000num","filterText":"num","insertText":"num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"num"}},{"label":" nullptr","kind":15,"detail":"std::nullptr_t","sortText":"3f000000nullptr","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"nullptr"}},{"label":" NUM_LEDS","kind":1,"sortText":"40580000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"NUM_LEDS"}},{"label":" nullptr_t","kind":8,"sortText":"405d8e68nullptr_t","filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"nullptr_t"}},{"label":" NULL","kind":1,"sortText":"40fec88dNULL","filterText":"NULL","insertText":"NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"NULL"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40fec88dNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"NUM_CONTROLLERS"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"411d98a4NUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"411d98a4NUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":301},"contentChanges":[{"range":{"start":{"line":30,"character":18},"end":{"line":30,"character":18}},"rangeLength":0,"text":"m"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":15,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":301}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":18}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 212

{"id":17,"result":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}},"kind":1},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}},"context":{"diagnostics":[]}}}Content-Length: 192

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":22}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 204

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":23}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 39

{"id":19,"result":null,"jsonrpc":"2.0"}Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 142

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/2","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 382

{"id":21,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}}}]}}],"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":302},"contentChanges":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"rangeLength":3,"text":"num"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":22,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":24},"end":{"line":30,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":302}}}Content-Length: 192

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":17}}}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":17}}}
>>>
Content-Length: 37

{"id":25,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 382

{"id":26,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":303},"contentChanges":[{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"rangeLength":3,"text":"num"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":27,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":19},"end":{"line":31,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":303}}}Content-Length: 192

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":22}}}
>>>
Content-Length: 39

{"id":29,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":23}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 382

{"id":31,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":31,"character":21},"end":{"line":31,"character":24}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":304},"contentChanges":[{"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":24}},"rangeLength":3,"text":"num"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":32,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":24},"end":{"line":31,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":304}}}Content-Length: 192

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":32,"character":27}}}
>>>
Content-Length: 39

{"id":34,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":32,"character":28}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 382

{"id":36,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/audruiuno/project/project.ino","selection":{"start":{"line":32,"character":27},"end":{"line":32,"character":30}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":305},"contentChanges":[{"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":30}},"rangeLength":3,"text":"num"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":37,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":32,"character":30},"end":{"line":32,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":38,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":305}}}Content-Length: 192

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":18,"character":10}}}
>>>
Content-Length: 39

{"id":39,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":18,"character":11}}}
>>>
Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":41,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":306},"contentChanges":[{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":13}},"rangeLength":3,"text":"1"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":42,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":11}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":307},"contentChanges":[{"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"rangeLength":0,"text":"2"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 163

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":43,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":308},"contentChanges":[{"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":12}},"rangeLength":0,"text":"8"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":44,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":13},"end":{"line":18,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":308}}}Content-Length: 192

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":18,"character":11}}}
>>>
Content-Length: 39

{"id":46,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":18,"character":11}}}
>>>
Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":309},"contentChanges":[{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":13}},"rangeLength":3,"text":"3"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":49,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":11}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":310},"contentChanges":[{"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"rangeLength":0,"text":"2"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 163

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":50,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":12},"end":{"line":18,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":310}}}Content-Length: 266

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":32,"character":38},"end":{"line":32,"character":38}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":58}}}
>>>
Content-Length: 39

{"id":53,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":54,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":15}}}
>>>
Content-Length: 606

{"id":54,"result":{"contents":{"kind":"markdown","value":"### static-method `addLeds`  \n\n---\n→ `CLEDController \u0026`  \nParameters:  \n- `struct CRGB * data`\n- `int nLedsOrOffset`\n- `int nLedsIfOffset = 0`\n\n---\n```cpp\n// In CFastLED\npublic: template \u003c\u003e\nstatic CLEDController \u0026addLeds\u003cNEOPIXEL, '\\x03'\u003e(struct CRGB *data,\n                                                 int nLedsOrOffset,\n                                                 int nLedsIfOffset = 0)\n```"},"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":16}}}
>>>
Content-Length: 125

{"id":55,"result":[{"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":17}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":16},"end":{"line":29,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":29,"character":16},"end":{"line":33,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":57,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":32,"character":24}}}
>>>
Content-Length: 39

{"id":58,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":12}}}
>>>
Content-Length: 606

{"id":59,"result":{"contents":{"kind":"markdown","value":"### static-method `addLeds`  \n\n---\n→ `CLEDController \u0026`  \nParameters:  \n- `struct CRGB * data`\n- `int nLedsOrOffset`\n- `int nLedsIfOffset = 0`\n\n---\n```cpp\n// In CFastLED\npublic: template \u003c\u003e\nstatic CLEDController \u0026addLeds\u003cNEOPIXEL, '\\x03'\u003e(struct CRGB *data,\n                                                 int nLedsOrOffset,\n                                                 int nLedsIfOffset = 0)\n```"},"range":{"start":{"line":29,"character":10},"end":{"line":29,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":18,"character":0}}}
>>>
Content-Length: 39

{"id":60,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":18,"character":0}}}
>>>
Content-Length: 37

{"id":61,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":0},"end":{"line":19,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":32,"character":23}}}
>>>
Content-Length: 210

{"id":64,"result":{"contents":{"kind":"markdown","value":"### `expression`  \n\n---\nType: `int`  \nValue = `14`"},"range":{"start":{"line":32,"character":22},"end":{"line":32,"character":23}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":32,"character":24}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":32,"character":24},"end":{"line":32,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":32,"character":25},"end":{"line":32,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":311},"contentChanges":[{"range":{"start":{"line":32,"character":24},"end":{"line":32,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":32,"character":24},"end":{"line":32,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":68,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":312},"contentChanges":[{"range":{"start":{"line":32,"character":23},"end":{"line":32,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":32,"character":23},"end":{"line":32,"character":24}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":69,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":313},"contentChanges":[{"range":{"start":{"line":32,"character":22},"end":{"line":32,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":70,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":314},"contentChanges":[{"range":{"start":{"line":32,"character":21},"end":{"line":32,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":71,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":32,"character":21},"end":{"line":32,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 395

{"id":72,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server630062731/sketch/project.ino.cpp","selection":{"start":{"line":41,"character":21},"end":{"line":41,"character":21}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":314}}}Content-Length: 192

{"jsonrpc":"2.0","id":73,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":22}}}
>>>
Content-Length: 283

{"id":73,"result":{"contents":{"kind":"markdown","value":"### variable `num`  \n\n---\nType: `int`  \nValue = `32`  \nPassed as g (converted to byte)  \n\n---\n```cpp\nint num = 32\n```"},"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":21}}}
>>>
Content-Length: 313

{"id":74,"result":{"contents":{"kind":"markdown","value":"### class `NEOPIXEL`  \n\n---\n```cpp\ntemplate \u003cuint8_t DATA_PIN\u003e\nclass NEOPIXEL : public WS2812Controller800Khz\u003cDATA_PIN, GRB\u003e {}\n```"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 283

{"id":75,"result":{"contents":{"kind":"markdown","value":"### variable `num`  \n\n---\nType: `int`  \nValue = `32`  \nPassed as g (converted to byte)  \n\n---\n```cpp\nint num = 32\n```"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 568

{"id":76,"result":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}},"kind":1},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}},"kind":2},{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"kind":2},{"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":24}},"kind":2},{"range":{"start":{"line":32,"character":23},"end":{"line":32,"character":26}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":315},"contentChanges":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"rangeLength":3,"text":"0"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":78,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":79,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":79,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":315}}}Content-Length: 192

{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":24}}}
>>>
Content-Length: 39

{"id":80,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":81,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":24}}}
>>>
Content-Length: 39

{"id":81,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":20}}}
>>>
Content-Length: 358

{"id":82,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":83,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 39

{"id":83,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":316},"contentChanges":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":84,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 436

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":85,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":317},"contentChanges":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":21}},"rangeLength":0,"text":"n"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'n'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":86,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 225

{"jsonrpc":"2.0","id":87,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":22},"context":{"triggerKind":1}}}
>>>
Content-Length: 16901

{"id":87,"result":{"isIncomplete":false,"items":[{"label":" num","kind":6,"detail":"int","sortText":"3da367aanum","filterText":"num","insertText":"num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"num"}},{"label":" new type[size](expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"new ${1:type}[${2:size}](${0:expressions})"}},{"label":" new type(expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"new ${1:type}(${0:expressions})"}},{"label":" noexcept(expression)","kind":15,"detail":"bool","sortText":"3f000000noexcept","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"noexcept(${0:expression})"}},{"label":" nullptr","kind":15,"detail":"std::nullptr_t","sortText":"3f000000nullptr","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nullptr"}},{"label":" NEOPIXEL\u003cuint8_t DATA_PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3f17ae13NEOPIXEL","filterText":"NEOPIXEL","insertText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•nscale8(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8 - scale down the brightness of an array of pixels all at once. This function can scale pixels all the way down to black even if 'scale' is not zero."},"sortText":"3f651eb8nscale8","filterText":"nscale8","insertText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":"•nscale8_video(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8_video - scale down the brightness of an array of pixels all at once. Guaranteed to never scale a pixel all the way down to black, unless 'scale' is zero."},"sortText":"3f651eb8nscale8_video","filterText":"nscale8_video","insertText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":" NUM_LEDS","kind":1,"sortText":"40400000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NUM_LEDS"}},{"label":" noTone(uint8_t _pin)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68noTone","filterText":"noTone","insertText":"noTone(${1:uint8_t _pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"noTone(${1:uint8_t _pin})"}},{"label":" nullptr_t","kind":8,"sortText":"405d8e68nullptr_t","filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nullptr_t"}},{"label":"•NOBLEND","kind":20,"detail":"TBlendType","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fNOBLEND","filterText":"NOBLEND","insertText":"NOBLEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NOBLEND"}},{"label":"•napplyGamma_video(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nThe \"n\" versions below modify their arguments in-place."},"sortText":"4068a03fnapplyGamma_video","filterText":"napplyGamma_video","insertText":"napplyGamma_video($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"napplyGamma_video($0)"}},{"label":"•nblend(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblend - destructively modifies one color, blending in a given fraction of an overlay color"},"sortText":"4068a03fnblend","filterText":"nblend","insertText":"nblend($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nblend($0)"}},{"label":"•nblendPaletteTowardPalette(CRGBPalette16 \u0026currentPalette, CRGBPalette16 \u0026targetPalette, uint8_t maxChanges = 24)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblendPaletteTowardPalette:  \nAlter one palette by making it slightly more like a 'target palette', used for palette cross-fades.  \nIt does this by comparing each of the R, G, and B channels of each entry in the current palette to the corresponding entry in the target palette and making small adjustments:  \nIf the Red channel is too low, it will be increased.  \nIf the Red channel is too high, it will be slightly reduced.  \n... and likewise for Green and Blue channels.  \nAdditionally, there are two significant visual improvements to this algorithm implemented here. First is this:  \nWhen increasing a channel, it is stepped up by ONE.  \nWhen decreasing a channel, it is stepped down by TWO.  \nDue to the way the eye perceives light, and the way colors are represented in RGB, this produces a more uniform apparent brightness when cross-fading between most palette colors.  \nThe second visual tweak is limiting the number of changes that will be made to the palette at once. If all the palette entries are changed at once, it can give a muddled appearance.  \nHowever, if only a few palette entries are changed at once,  \nyou get a visually smoother transition: in the middle of the cross-fade your current palette will actually contain some colors from the old palette, a few blended colors, and some colors from the new palette.  \nThe maximum number of possible palette changes per call is 48 (sixteen color entries time three channels each).  \nThe default 'maximim number of changes' here is 12, meaning that only approximately a quarter of the palette entries will be changed per call."},"sortText":"4068a03fnblendPaletteTowardPalette","filterText":"nblendPaletteTowardPalette","insertText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})"}},{"label":"•nscale8_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8, also this version of nscale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_LEAVING_R1_DIRTY","filterText":"nscale8_LEAVING_R1_DIRTY","insertText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8_video_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8_video, also this version of nscale8_video does not clean up the R1 register on AVR If you are doing several 'scale8_video's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_video_LEAVING_R1_DIRTY","filterText":"nscale8_video_LEAVING_R1_DIRTY","insertText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8x2(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2","filterText":"nscale8x2","insertText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x2_video(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2_video","filterText":"nscale8x2_video","insertText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x3(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3","filterText":"nscale8x3","insertText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":"•nscale8x3_video(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3_video","filterText":"nscale8x3_video","insertText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":" NAN","kind":1,"sortText":"40d1050aNAN","filterText":"NAN","insertText":"NAN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NAN"}},{"label":" NOT_AN_INTERRUPT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_AN_INTERRUPT","filterText":"NOT_AN_INTERRUPT","insertText":"NOT_AN_INTERRUPT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NOT_AN_INTERRUPT"}},{"label":" NOT_A_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PIN","filterText":"NOT_A_PIN","insertText":"NOT_A_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NOT_A_PIN"}},{"label":" NOT_A_PORT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PORT","filterText":"NOT_A_PORT","insertText":"NOT_A_PORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NOT_A_PORT"}},{"label":" NOT_ON_TIMER","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_ON_TIMER","filterText":"NOT_ON_TIMER","insertText":"NOT_ON_TIMER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NOT_ON_TIMER"}},{"label":"•NO_IGNORE_CHAR","kind":1,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40ec52eaNO_IGNORE_CHAR","filterText":"NO_IGNORE_CHAR","insertText":"NO_IGNORE_CHAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NO_IGNORE_CHAR"}},{"label":" NULL","kind":1,"sortText":"40ec52eaNULL","filterText":"NULL","insertText":"NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NULL"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NUM_CONTROLLERS"}},{"label":" noInterrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eanoInterrupts","filterText":"noInterrupts","insertText":"noInterrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"noInterrupts()"}},{"label":"•NO_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"40f66322NO_PIN","filterText":"NO_PIN","insertText":"NO_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NO_PIN"}},{"label":"•NO_TIME(A, B, C)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NO_TIME","filterText":"NO_TIME","insertText":"NO_TIME(${1:A}, ${2:B}, ${3:C})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NO_TIME(${1:A}, ${2:B}, ${3:C})"}},{"label":"•NS(_NS)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NS","filterText":"NS","insertText":"NS(${1:_NS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NS(${1:_NS})"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":318},"contentChanges":[{"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"rangeLength":0,"text":"u"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'nu'"}]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":88,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"message":"Use of undeclared identifier 'nu'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 449

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":23}},"message":"Use of undeclared identifier 'nu'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":90,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":319},"contentChanges":[{"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":23}},"rangeLength":0,"text":"m"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1533

{"id":91,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":24},"end":{"line":30,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":23}}}Content-Length: 163

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 568

{"id":93,"result":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}},"kind":1},{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":19}},"kind":2},{"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":24}},"kind":2},{"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}},"kind":2},{"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":24}},"kind":2},{"range":{"start":{"line":32,"character":23},"end":{"line":32,"character":26}},"kind":2}],"jsonrpc":"2.0"}Content-Length: 1533

{"id":94,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":95,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":96,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1533

{"id":97,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":19}}}Content-Length: 163

{"jsonrpc":"2.0","id":99,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 473

{"id":98,"result":[{"range":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}},"kind":1},{"range":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1},{"range":{"start":{"line":31,"character":2},"end":{"line":31,"character":9}},"kind":1},{"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":9}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 1533

{"id":99,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":100,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":320},"contentChanges":[{"range":{"start":{"line":30,"character":18},"end":{"line":30,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":18}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'nu'"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":101,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":321},"contentChanges":[{"range":{"start":{"line":30,"character":17},"end":{"line":30,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 341

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'n'"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":102,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":322},"contentChanges":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":103,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 437

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":17}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":323},"contentChanges":[{"range":{"start":{"line":30,"character":16},"end":{"line":30,"character":16}},"rangeLength":0,"text":"0"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":105,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":30,"character":17},"end":{"line":30,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":323}}}Content-Length: 193

{"jsonrpc":"2.0","id":107,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 314

{"id":107,"result":{"contents":{"kind":"markdown","value":"### class `NEOPIXEL`  \n\n---\n```cpp\ntemplate \u003cuint8_t DATA_PIN\u003e\nclass NEOPIXEL : public WS2812Controller800Khz\u003cDATA_PIN, GRB\u003e {}\n```"},"range":{"start":{"line":29,"character":18},"end":{"line":29,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":108,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 284

{"id":108,"result":{"contents":{"kind":"markdown","value":"### variable `num`  \n\n---\nType: `int`  \nValue = `32`  \nPassed as g (converted to byte)  \n\n---\n```cpp\nint num = 32\n```"},"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":109,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":20}}}
>>>
Content-Length: 359

{"id":109,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":31,"character":19},"end":{"line":31,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":110,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":19}}}
>>>
Content-Length: 359

{"id":110,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `byte r`\n- `byte g`\n- `byte b`\n\n---\n```cpp\nvoid setLeds(int start, int end, byte r, byte g, byte b)\n```"},"range":{"start":{"line":31,"character":16},"end":{"line":31,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":31,"character":19}}}
>>>
Content-Length: 474

{"id":111,"result":[{"range":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}},"kind":1},{"range":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}},"kind":1},{"range":{"start":{"line":30,"character":2},"end":{"line":30,"character":9}},"kind":1},{"range":{"start":{"line":31,"character":2},"end":{"line":31,"character":9}},"kind":1},{"range":{"start":{"line":32,"character":2},"end":{"line":32,"character":9}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":19},"end":{"line":31,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":29,"character":29}}}
>>>
Content-Length: 219

{"id":113,"result":{"contents":{"kind":"markdown","value":"### macro `DATA_PIN`  \n\n---\n```cpp\n#define DATA_PIN 3\n```"},"range":{"start":{"line":29,"character":28},"end":{"line":29,"character":36}}},"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":324},"contentChanges":[{"range":{"start":{"line":31,"character":19},"end":{"line":31,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 164

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 1534

{"id":114,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":20},"end":{"line":31,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":115,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":325},"contentChanges":[{"range":{"start":{"line":31,"character":20},"end":{"line":31,"character":20}},"rangeLength":0,"text":"*"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":116,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":116,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":326},"contentChanges":[{"range":{"start":{"line":31,"character":21},"end":{"line":31,"character":21}},"rangeLength":0,"text":" "}]}}Content-Length: 164

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 329

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[{"range":{"start":{"line":31,"character":22},"end":{"line":31,"character":23}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":117,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 437

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":22},"end":{"line":31,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":31,"character":22},"end":{"line":31,"character":23}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":118,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":326}}}Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":327},"contentChanges":[{"range":{"start":{"line":31,"character":22},"end":{"line":31,"character":22}},"rangeLength":0,"text":"2"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 1534

{"id":119,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"range":{"start":{"line":31,"character":23},"end":{"line":31,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":120,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":327}}}Content-Length: 192

{"jsonrpc":"2.0","id":121,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"},"position":{"line":28,"character":8}}}
>>>
Content-Length: 233

{"id":121,"result":{"contents":{"kind":"markdown","value":"### function `setup`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid setup()\n```"},"range":{"start":{"line":28,"character":5},"end":{"line":28,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 287

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":328},"contentChanges":[{"range":{"start":{"line":26,"character":0},"end":{"line":27,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}
>>>
Content-Length: 115

{"id":122,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3042

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7700,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\audruiuno\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1250

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","languageId":"cpp","version":328,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// How many leds in your strip?\r\n#define NUM_LEDS 15\r\n\r\n// For led chips like WS2812, which have a data line, ground, and power, you just\r\n// need to define DATA_PIN.  For led chipsets that are SPI based (four wires - data, clock,\r\n// ground, and power), like the LPD8806 define both DATA_PIN and CLOCK_PIN\r\n// Clock pin only needed for SPI based chipsets when not using hardware SPI\r\n#define DATA_PIN 3\r\n#define CLOCK_PIN 13\r\n\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nbyte r, g, b;\r\nint num = 32;\r\n\r\nvoid setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = CRGB (r, g, b);\r\n    FastLED.show();\r\n  }\r\n}\r\n\r\nvoid setup() { \r\n  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  setLeds(0, 4, 0, num, 0);\r\n  setLeds(4, 8, num * 2, num, 0);\r\n  setLeds(8, NUM_LEDS, num, 0, 0);\r\n}\r\n\r\n\r\nvoid loop() { \r\n  \r\n\r\n  delay(500);\r\n\r\n}\r\n"}}}Content-Length: 162

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":328}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 287

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":329},"contentChanges":[{"range":{"start":{"line":33,"character":0},"end":{"line":34,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 162

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino"}}}Content-Length: 162

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/audruiuno/project/project.ino","version":329}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 1532

{"id":1,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":27,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":27,"character":5},"end":{"line":27,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":35,"character":0},"end":{"line":40,"character":1}},"selectionRange":{"start":{"line":35,"character":5},"end":{"line":35,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1532

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"r","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":6}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":6}}},{"name":"g","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":9}},"selectionRange":{"start":{"line":17,"character":8},"end":{"line":17,"character":9}}},{"name":"b","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":12}},"selectionRange":{"start":{"line":17,"character":11},"end":{"line":17,"character":12}}},{"name":"num","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":12}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":7}}},{"name":"setLeds","kind":12,"range":{"start":{"line":20,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":20,"character":5},"end":{"line":20,"character":12}}},{"name":"setup","kind":12,"range":{"start":{"line":27,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":27,"character":5},"end":{"line":27,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":35,"character":0},"end":{"line":40,"character":1}},"selectionRange":{"start":{"line":35,"character":5},"end":{"line":35,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 113

{"id":3,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10188,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3187

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// Colors\r\n#define GREEN 128, 0, 0    // CRGB::Green\r\n#define YELLOW 255, 165, 0 // CRGB::Orange\r\n#define RED 0, 255, 0      // CRGB::Red\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 100\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = 255;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = CRGB (r, g, b);\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, GREEN);\r\n  setLeds(d1, d2, YELLOW);\r\n  setLeds(d2, d3, RED);\r\n}\r\n\r\n// TODO: testa köra med dessa istället (kan ta bort defines för colors om det funkar)\r\n/*\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n*/\r\n\r\n// TODO: testa om det funkar att bara köra FastLED.clear() istället för att sätta alla till 0, 0, 0\r\nvoid setLedsOff() {\r\n  //for (int i = 0; i < NUM_LEDS; i++) {\r\n  //  leds[i] = CRGB (0, 0, 0);\r\n  //}\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    //ledBrightness = map(timerOn, 0, TIME_ON, 0, 255);\r\n    ledBrightness = timerOn >= TIME_ON / 2 ? 255 : map(timerOn, 0, TIME_ON / 2, 0, 255);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 268

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 197

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":11,"character":6}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 2939

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2939

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":106,"character":17},"end":{"line":106,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 76

{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}Content-Length: 198

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":16}}}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":53,"character":21}}}
>>>
Content-Length: 38

{"id":7,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 197

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":29,"character":0}}}
>>>
Content-Length: 38

{"id":8,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 209

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":29,"character":0}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":10,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":29,"character":50}}}
>>>
Content-Length: 221

{"id":11,"result":{"contents":{"kind":"markdown","value":"### type-alias `byte`  \n\n---\n```cpp\ntypedef uint8_t byte\n```"},"range":{"start":{"line":29,"character":49},"end":{"line":29,"character":53}}},"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":2},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":0}},"rangeLength":0,"text":"/"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 2749

{"id":12,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":3},"contentChanges":[{"range":{"start":{"line":29,"character":1},"end":{"line":29,"character":1}},"rangeLength":0,"text":"*"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 170

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 2555

{"id":13,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":29,"character":2},"end":{"line":29,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":3}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":41,"character":1},"end":{"line":41,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":4},"contentChanges":[{"range":{"start":{"line":41,"character":1},"end":{"line":41,"character":1}},"rangeLength":0,"text":"*"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 170

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":5},"contentChanges":[{"range":{"start":{"line":41,"character":2},"end":{"line":41,"character":2}},"rangeLength":0,"text":"/"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 170

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 271

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":41,"character":3},"end":{"line":41,"character":3}},"context":{"diagnostics":[]}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":5}}}Content-Length: 198

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":44,"character":1}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 170

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 271

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":44,"character":2},"end":{"line":44,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":6},"contentChanges":[{"range":{"start":{"line":44,"character":1},"end":{"line":44,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 170

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":7},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 170

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 358

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":101,"character":4},"end":{"line":101,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setAllLeds'"}]},"jsonrpc":"2.0"}Content-Length: 358

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":101,"character":4},"end":{"line":101,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setAllLeds'"}]},"jsonrpc":"2.0"}Content-Length: 2555

{"id":16,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 358

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":101,"character":4},"end":{"line":101,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setAllLeds'"}]},"jsonrpc":"2.0"}Content-Length: 2555

{"id":17,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 39

{"id":19,"result":null,"jsonrpc":"2.0"}Content-Length: 2555

{"id":20,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}Content-Length: 1080

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":44,"character":0},"end":{"line":44,"character":1}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":54,"character":2},"end":{"line":54,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setLeds'"},{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setLeds'"},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setLeds'"},{"range":{"start":{"line":58,"character":1},"end":{"line":58,"character":2}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 2749

{"id":22,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":1},"end":{"line":58,"character":2}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":23,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":7}}}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 447

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":2},"end":{"line":58,"character":2}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":1},"end":{"line":58,"character":2}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}]}}}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}Content-Length: 535

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":1},"end":{"line":58,"character":2}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":106,"character":4},"end":{"line":106,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setLedsOff'"}]},"jsonrpc":"2.0"}Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":8},"contentChanges":[{"range":{"start":{"line":58,"character":1},"end":{"line":58,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 170

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":9},"contentChanges":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 170

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":9}}}Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
>>>
Content-Length: 535

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":61,"character":0},"end":{"line":61,"character":4}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":106,"character":4},"end":{"line":106,"character":14}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setLedsOff'"}]},"jsonrpc":"2.0"}Content-Length: 2746

{"id":25,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":26,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":5,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":27}}}
>>>
Content-Length: 260

{"id":27,"result":{"contents":{"kind":"markdown","value":"### variable `timerOn`  \n\n---\nType: `int`  \nValue = `6000`  \n\n---\n```cpp\nint timerOn = 6000\n```"},"range":{"start":{"line":99,"character":20},"end":{"line":99,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":41}}}
>>>
Content-Length: 39

{"id":28,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":42}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":42},"end":{"line":99,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":10},"contentChanges":[{"range":{"start":{"line":99,"character":41},"end":{"line":99,"character":42}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":6,"jsonrpc":"2.0"}Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":99,"character":42},"end":{"line":99,"character":43}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":31,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":11},"contentChanges":[{"range":{"start":{"line":99,"character":41},"end":{"line":99,"character":41}},"rangeLength":0,"text":"3"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":32,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":42},"end":{"line":99,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":11}}}Content-Length: 199

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":77}}}
>>>
Content-Length: 39

{"id":34,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":77}}}
>>>
Content-Length: 39

{"id":35,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":78}}}
>>>
Content-Length: 125

{"id":36,"result":[{"range":{"start":{"line":99,"character":51},"end":{"line":99,"character":54}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":78},"end":{"line":99,"character":78}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":37,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":12},"contentChanges":[{"range":{"start":{"line":99,"character":77},"end":{"line":99,"character":78}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":99,"character":77},"end":{"line":99,"character":78}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":38,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":13},"contentChanges":[{"range":{"start":{"line":99,"character":77},"end":{"line":99,"character":77}},"rangeLength":0,"text":"3"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 170

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":39,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":78},"end":{"line":99,"character":78}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":13}}}Content-Length: 199

{"jsonrpc":"2.0","id":41,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":59}}}
>>>
Content-Length: 290

{"id":41,"result":{"contents":{"kind":"markdown","value":"### variable `timerOn`  \n\n---\nType: `int`  \nValue = `6000`  \nPassed (converted to long)  \n\n---\n```cpp\nint timerOn = 6000\n```"},"range":{"start":{"line":99,"character":55},"end":{"line":99,"character":62}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":62}}}
>>>
Content-Length: 322

{"id":42,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":99,"character":55},"end":{"line":99,"character":62}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":43,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":63}}}
>>>
Content-Length: 322

{"id":43,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":99,"character":62},"end":{"line":99,"character":63}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":64}}}
>>>
Content-Length: 39

{"id":44,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":64}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":46,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":64},"end":{"line":99,"character":75}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 389

{"id":46,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","selection":{"start":{"line":99,"character":64},"end":{"line":99,"character":75}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":64},"end":{"line":99,"character":78}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 389

{"id":47,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","selection":{"start":{"line":99,"character":64},"end":{"line":99,"character":78}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":78}}}
>>>
Content-Length: 322

{"id":48,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":99,"character":78},"end":{"line":99,"character":79}}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":78}}}
>>>
Content-Length: 125

{"id":49,"result":[{"range":{"start":{"line":99,"character":51},"end":{"line":99,"character":54}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":78},"end":{"line":99,"character":78}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":66}}}
>>>
Content-Length: 322

{"id":51,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":99,"character":65},"end":{"line":99,"character":66}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":52,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":64}}}
>>>
Content-Length: 39

{"id":52,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":64}}}
>>>
Content-Length: 37

{"id":53,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":64},"end":{"line":99,"character":78}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 389

{"id":54,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","selection":{"start":{"line":99,"character":64},"end":{"line":99,"character":78}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":64},"end":{"line":99,"character":79}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 389

{"id":55,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","selection":{"start":{"line":99,"character":64},"end":{"line":99,"character":79}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":56,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":79}}}
>>>
Content-Length: 322

{"id":56,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":99,"character":78},"end":{"line":99,"character":79}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":57,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":80}}}
>>>
Content-Length: 39

{"id":57,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":81}}}
>>>
Content-Length: 322

{"id":58,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":99,"character":81},"end":{"line":99,"character":82}}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":81}}}
>>>
Content-Length: 125

{"id":59,"result":[{"range":{"start":{"line":99,"character":51},"end":{"line":99,"character":54}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":81},"end":{"line":99,"character":81}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":60,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":14},"contentChanges":[{"range":{"start":{"line":99,"character":80},"end":{"line":99,"character":81}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":99,"character":80},"end":{"line":99,"character":81}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":61,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 443

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":80},"end":{"line":99,"character":80}},"context":{"diagnostics":[{"range":{"start":{"line":99,"character":80},"end":{"line":99,"character":81}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":14}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":15},"contentChanges":[{"range":{"start":{"line":99,"character":80},"end":{"line":99,"character":80}},"rangeLength":0,"text":"1"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 2940

{"id":63,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":16},"contentChanges":[{"range":{"start":{"line":99,"character":81},"end":{"line":99,"character":81}},"rangeLength":0,"text":"6"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2940

{"id":64,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":99,"character":82},"end":{"line":99,"character":82}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":65,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":16}}}Content-Length: 200

{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":101,"character":44}}}
>>>
Content-Length: 281

{"id":66,"result":{"contents":{"kind":"markdown","value":"### variable `activityLow`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as red  \n\n---\n```cpp\nint activityLow = 2\n```"},"range":{"start":{"line":101,"character":42},"end":{"line":101,"character":53}}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":98,"character":55},"end":{"line":98,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":98,"character":0},"end":{"line":98,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":68,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":17},"contentChanges":[{"range":{"start":{"line":98,"character":0},"end":{"line":98,"character":55}},"rangeLength":55,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2940

{"id":69,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":18},"contentChanges":[{"range":{"start":{"line":97,"character":20},"end":{"line":98,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10188,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3130

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":18,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// Colors\r\n#define GREEN 128, 0, 0    // CRGB::Green\r\n#define YELLOW 255, 165, 0 // CRGB::Orange\r\n#define RED 0, 255, 0      // CRGB::Red\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 100\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = 255;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\n/*void setLeds(int start, int end, byte r, byte g, byte b) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = CRGB (r, g, b);\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, GREEN);\r\n  setLeds(d1, d2, YELLOW);\r\n  setLeds(d2, d3, RED);\r\n}*/\r\n\r\n// TODO: testa köra med dessa istället (kan ta bort defines för colors om det funkar)\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\n\r\n// TODO: testa om det funkar att bara köra FastLED.clear() istället för att sätta alla till 0, 0, 0\r\nvoid setLedsOff() {\r\n  //for (int i = 0; i < NUM_LEDS; i++) {\r\n  //  leds[i] = CRGB (0, 0, 0);\r\n  //}\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = timerOn >= TIME_ON / 3 ? 255 : map(timerOn, 0, TIME_ON / 3, 16, 255);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":97,"character":20},"end":{"line":97,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":18}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 2939

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2939

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2939

{"id":4,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2939

{"id":5,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 169

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 169

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 169

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 170

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 170

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 170

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 170

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2939

{"id":6,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2939

{"id":7,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 2939

{"id":8,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2939

{"id":9,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2940

{"id":10,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2940

{"id":11,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 2940

{"id":12,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2940

{"id":13,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 170

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 170

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2940

{"id":14,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 2940

{"id":15,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":28,"character":0},"end":{"line":43,"character":85}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 170

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2940

{"id":17,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":67,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":110,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":29,"character":0},"end":{"line":43,"character":85}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":19},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":43,"character":85}},"rangeLength":450,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 114

{"id":19,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10188,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2649

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":19,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// Colors\r\n#define GREEN 128, 0, 0    // CRGB::Green\r\n#define YELLOW 255, 165, 0 // CRGB::Orange\r\n#define RED 0, 255, 0      // CRGB::Red\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 100\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = 255;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\n\r\n// TODO: testa om det funkar att bara köra FastLED.clear() istället för att sätta alla till 0, 0, 0\r\nvoid setLedsOff() {\r\n  //for (int i = 0; i < NUM_LEDS; i++) {\r\n  //  leds[i] = CRGB (0, 0, 0);\r\n  //}\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = timerOn >= TIME_ON / 3 ? 255 : map(timerOn, 0, TIME_ON / 3, 16, 255);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":20},"contentChanges":[{"range":{"start":{"line":29,"character":0},"end":{"line":30,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":21},"contentChanges":[{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 169

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":21}}}Content-Length: 198

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":18,"character":10}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 198

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":12,"character":23}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 209

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":6,"character":39}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 169

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 169

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 169

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 169

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 169

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 170

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 170

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 113

{"id":1,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10188,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2641

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":21,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n// Colors\r\n#define GREEN 128, 0, 0    // CRGB::Green\r\n#define YELLOW 255, 165, 0 // CRGB::Orange\r\n#define RED 0, 255, 0      // CRGB::Red\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 100\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = 255;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\n\r\n// TODO: testa om det funkar att bara köra FastLED.clear() istället för att sätta alla till 0, 0, 0\r\nvoid setLedsOff() {\r\n  //for (int i = 0; i < NUM_LEDS; i++) {\r\n  //  leds[i] = CRGB (0, 0, 0);\r\n  //}\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = timerOn >= TIME_ON / 3 ? 255 : map(timerOn, 0, TIME_ON / 3, 16, 255);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 269

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":4,"character":0},"end":{"line":6,"character":39}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 269

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":39}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":22},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":6,"character":39}},"rangeLength":137,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 169

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":22}}}Content-Length: 291

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":23},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":4,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 169

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 291

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":24},"contentChanges":[{"range":{"start":{"line":3,"character":0},"end":{"line":4,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 169

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":24}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 2938

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":68,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":68,"character":5},"end":{"line":68,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2938

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":19}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":18}},"selectionRange":{"start":{"line":19,"character":10},"end":{"line":19,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":23}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":51,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":68,"character":0},"end":{"line":94,"character":1}},"selectionRange":{"start":{"line":68,"character":5},"end":{"line":68,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":4,"result":[],"jsonrpc":"2.0"}Content-Length: 113

{"id":5,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10188,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 2490

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":24,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 100\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = 255;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\n\r\n// TODO: testa om det funkar att bara köra FastLED.clear() istället för att sätta alla till 0, 0, 0\r\nvoid setLedsOff() {\r\n  //for (int i = 0; i < NUM_LEDS; i++) {\r\n  //  leds[i] = CRGB (0, 0, 0);\r\n  //}\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = timerOn >= TIME_ON / 3 ? 255 : map(timerOn, 0, TIME_ON / 3, 16, 255);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 169

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":25},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":0}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":25}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 2938

{"id":1,"result":[{"name":"leds","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":19}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":18}},"selectionRange":{"start":{"line":14,"character":10},"end":{"line":14,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":20}},"selectionRange":{"start":{"line":15,"character":4},"end":{"line":15,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":37}},"selectionRange":{"start":{"line":15,"character":22},"end":{"line":15,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":54}},"selectionRange":{"start":{"line":15,"character":39},"end":{"line":15,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":23}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":21}},"selectionRange":{"start":{"line":19,"character":4},"end":{"line":19,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":21}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":26}},"selectionRange":{"start":{"line":21,"character":14},"end":{"line":21,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":29,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":31,"character":0},"end":{"line":36,"character":1}},"selectionRange":{"start":{"line":31,"character":5},"end":{"line":31,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":46,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":48,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":89,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2938

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":18}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":20}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":37}},"selectionRange":{"start":{"line":16,"character":22},"end":{"line":16,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":54}},"selectionRange":{"start":{"line":16,"character":39},"end":{"line":16,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":23}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":21}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":26}},"selectionRange":{"start":{"line":22,"character":14},"end":{"line":22,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":47,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":49,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":90,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2938

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":18}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":20}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":37}},"selectionRange":{"start":{"line":16,"character":22},"end":{"line":16,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":54}},"selectionRange":{"start":{"line":16,"character":39},"end":{"line":16,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":23}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":21}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":26}},"selectionRange":{"start":{"line":22,"character":14},"end":{"line":22,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":47,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":49,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":90,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":40,"character":84}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 38

{"id":4,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 197

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":50,"character":1}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 198

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":45,"character":11}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}Content-Length: 487

{"id":6,"result":{"contents":{"kind":"markdown","value":"### instance-method `clear`  \n\n---\n→ `void`  \nParameters:  \n- `bool writeData = false`\n\nclear the leds, wiping the local array of data, optionally black out the leds as well  \n@param writeData whether or not to write out to the leds as well  \n\n---\n```cpp\n// In CFastLED\npublic: void clear(bool writeData = false)\n```"},"range":{"start":{"line":45,"character":10},"end":{"line":45,"character":15}}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":45,"character":13}}}
>>>
Content-Length: 487

{"id":7,"result":{"contents":{"kind":"markdown","value":"### instance-method `clear`  \n\n---\n→ `void`  \nParameters:  \n- `bool writeData = false`\n\nclear the leds, wiping the local array of data, optionally black out the leds as well  \n@param writeData whether or not to write out to the leds as well  \n\n---\n```cpp\n// In CFastLED\npublic: void clear(bool writeData = false)\n```"},"range":{"start":{"line":45,"character":10},"end":{"line":45,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 197

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":78,"character":3}}}
>>>
Content-Length: 38

{"id":8,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 197

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":78,"character":4}}}
>>>
Content-Length: 268

{"id":9,"result":{"contents":{"kind":"markdown","value":"### variable `ledBrightness`  \n\n---\nType: `int`  \nValue = `255`  \n\n---\n```cpp\nint ledBrightness = 255\n```"},"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":78,"character":4}}}
>>>
Content-Length: 479

{"id":10,"result":[{"range":{"start":{"line":17,"character":4},"end":{"line":17,"character":17}},"kind":1},{"range":{"start":{"line":53,"character":17},"end":{"line":53,"character":30}},"kind":2},{"range":{"start":{"line":59,"character":24},"end":{"line":59,"character":37}},"kind":2},{"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":17}},"kind":3},{"range":{"start":{"line":79,"character":26},"end":{"line":79,"character":39}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":26},"contentChanges":[{"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":4}},"rangeLength":0,"text":"/"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 334

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":78,"character":4},"end":{"line":78,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 2939

{"id":12,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":18}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":20}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":37}},"selectionRange":{"start":{"line":16,"character":22},"end":{"line":16,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":54}},"selectionRange":{"start":{"line":16,"character":39},"end":{"line":16,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":23}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":21}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":26}},"selectionRange":{"start":{"line":22,"character":14},"end":{"line":22,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":47,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":49,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":90,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":27},"contentChanges":[{"range":{"start":{"line":78,"character":5},"end":{"line":78,"character":5}},"rangeLength":0,"text":"/"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 2939

{"id":13,"result":[{"name":"leds","kind":13,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":19}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":18}},"selectionRange":{"start":{"line":15,"character":10},"end":{"line":15,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":20}},"selectionRange":{"start":{"line":16,"character":4},"end":{"line":16,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":37}},"selectionRange":{"start":{"line":16,"character":22},"end":{"line":16,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":54}},"selectionRange":{"start":{"line":16,"character":39},"end":{"line":16,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":23}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":21}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":26}},"selectionRange":{"start":{"line":22,"character":14},"end":{"line":22,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":30,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":32,"character":0},"end":{"line":37,"character":1}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":47,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":15}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":49,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":90,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":78,"character":6},"end":{"line":78,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":27}}}Content-Length: 199

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":75,"character":17}}}
>>>
Content-Length: 323

{"id":15,"result":{"contents":{"kind":"markdown","value":"### variable `timeNow`  \n\n---\nType: `unsigned long`  \nCalculate delta time since last iteration  \n\n---\n```cpp\n// In loop\nunsigned long timeNow = millis()\n```"},"range":{"start":{"line":75,"character":13},"end":{"line":75,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":51,"character":15}}}
>>>
Content-Length: 270

{"id":16,"result":{"contents":{"kind":"markdown","value":"### variable `timerOn`  \n\n---\nType: `int`  \nValue = `6000`  \nPassed  \n\n---\n```cpp\nint timerOn = 6000\n```"},"range":{"start":{"line":51,"character":15},"end":{"line":51,"character":22}}},"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":42,"character":0},"end":{"line":44,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":28},"contentChanges":[{"range":{"start":{"line":42,"character":0},"end":{"line":44,"character":5}},"rangeLength":80,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 114

{"id":18,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12184,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3050

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 10000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    //timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":64,"character":23},"end":{"line":64,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 268

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 169

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 3134

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 3134

{"id":4,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/37","percentage":5.405405405405405,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/37","percentage":8.108108108108109,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/37","percentage":8.108108108108109,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/37","percentage":10.81081081081081,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/37","percentage":83.78378378378379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/37","percentage":91.89189189189189,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/37","percentage":94.5945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/37","percentage":97.29729729729729,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 196

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":0,"character":9}}}
>>>
Content-Length: 228

{"id":5,"result":{"contents":{"kind":"markdown","value":"### macro `FASTLED_INTERNAL`  \n\n---\n```cpp\n#define FASTLED_INTERNAL\n```"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":24}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":26,"character":51}}}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":26,"character":51}}}
>>>
Content-Length: 38

{"id":7,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 197

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":6,"character":28}}}
>>>
Content-Length: 38

{"id":8,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":61,"character":14}}}
>>>
Content-Length: 260

{"id":9,"result":{"contents":{"kind":"markdown","value":"### variable `activityLow`  \n\n---\nType: `int`  \nValue = `2`  \n\n---\n```cpp\nint activityLow = 2\n```"},"range":{"start":{"line":61,"character":8},"end":{"line":61,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":111,"character":4}}}
>>>
Content-Length: 39

{"id":10,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":105,"character":6}}}
>>>
Content-Length: 37

{"id":11,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":105,"character":6},"end":{"line":105,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":2},"contentChanges":[{"range":{"start":{"line":105,"character":5},"end":{"line":105,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3135

{"id":13,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":3},"contentChanges":[{"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3135

{"id":14,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":64,"character":23},"end":{"line":64,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":105,"character":4},"end":{"line":105,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":15,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":3}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":11,"character":17}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":4},"contentChanges":[{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 170

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 37

{"id":18,"result":[],"jsonrpc":"2.0"}Content-Length: 3135

{"id":19,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":5},"contentChanges":[{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"rangeLength":0,"text":"8"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3135

{"id":21,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":5}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":6},"contentChanges":[{"range":{"start":{"line":11,"character":48},"end":{"line":11,"character":48}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 3135

{"id":23,"result":[{"name":"leds","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":19}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":18}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":20}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":37}},"selectionRange":{"start":{"line":18,"character":22},"end":{"line":18,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":54}},"selectionRange":{"start":{"line":18,"character":39},"end":{"line":18,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":38}},"selectionRange":{"start":{"line":19,"character":4},"end":{"line":19,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":21}},"selectionRange":{"start":{"line":23,"character":4},"end":{"line":23,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":26}},"selectionRange":{"start":{"line":24,"character":14},"end":{"line":24,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":27,"character":0},"end":{"line":32,"character":1}},"selectionRange":{"start":{"line":27,"character":5},"end":{"line":27,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":34,"character":0},"end":{"line":39,"character":1}},"selectionRange":{"start":{"line":34,"character":5},"end":{"line":34,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":44,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":46,"character":0},"end":{"line":70,"character":1}},"selectionRange":{"start":{"line":46,"character":5},"end":{"line":46,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":72,"character":0},"end":{"line":77,"character":1}},"selectionRange":{"start":{"line":72,"character":5},"end":{"line":72,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":85,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":87,"character":0},"end":{"line":114,"character":1}},"selectionRange":{"start":{"line":87,"character":5},"end":{"line":87,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 142

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"1/2","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":65,"character":23},"end":{"line":65,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":24,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":6}}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":7},"contentChanges":[{"range":{"start":{"line":11,"character":48},"end":{"line":12,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3135

{"id":25,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":64,"character":23},"end":{"line":64,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":48},"end":{"line":11,"character":48}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":26,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":7}}}Content-Length: 211

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":11,"character":20}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":20},"end":{"line":11,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":8},"contentChanges":[{"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3135

{"id":30,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":8}}}Content-Length: 59

{"jsonrpc":"2.0","id":32,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"id":32,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2872,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3047

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 8000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nconst int num = 32;\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":11,"character":19},"end":{"line":11,"character":19}},"context":{"diagnostics":[]}}}Content-Length: 268

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 169

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 3134

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 3134

{"id":4,"result":[{"name":"leds","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":19}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":9}}},{"name":"num","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":18}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":13}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":20}},"selectionRange":{"start":{"line":17,"character":4},"end":{"line":17,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":37}},"selectionRange":{"start":{"line":17,"character":22},"end":{"line":17,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":54}},"selectionRange":{"start":{"line":17,"character":39},"end":{"line":17,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":38}},"selectionRange":{"start":{"line":18,"character":4},"end":{"line":18,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":21}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":21}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":26}},"selectionRange":{"start":{"line":23,"character":14},"end":{"line":23,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":26,"character":0},"end":{"line":31,"character":1}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":33,"character":0},"end":{"line":38,"character":1}},"selectionRange":{"start":{"line":33,"character":5},"end":{"line":33,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":40,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":40,"character":5},"end":{"line":40,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":69,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":71,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":71,"character":5},"end":{"line":71,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":84,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":113,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/37","percentage":10.81081081081081,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/37","percentage":83.78378378378379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/37","percentage":91.89189189189189,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/37","percentage":94.5945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/37","percentage":97.29729729729729,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 196

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":8,"character":9}}}
>>>
Content-Length: 217

{"id":5,"result":{"contents":{"kind":"markdown","value":"### macro `PIEZO_PIN`  \n\n---\n```cpp\n#define PIEZO_PIN A0\n```"},"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":6,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2992,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3190

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define NUM_LEDS_FRONT 4\r\n#define LED_PIN_FRONT 5\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 8000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nCRGB ledsFront[NUM_LEDS_FRONT];\r\n\r\n\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN_FRONT>(ledsFront, NUM_LEDS);\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 268

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 169

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 3139

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":47,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":49,"character":0},"end":{"line":73,"character":1}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":75,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":75,"character":5},"end":{"line":75,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":83,"character":0},"end":{"line":89,"character":1}},"selectionRange":{"start":{"line":83,"character":5},"end":{"line":83,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":118,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 3139

{"id":4,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":47,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":49,"character":0},"end":{"line":73,"character":1}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":75,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":75,"character":5},"end":{"line":75,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":83,"character":0},"end":{"line":89,"character":1}},"selectionRange":{"start":{"line":83,"character":5},"end":{"line":83,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":118,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":52,"character":16}}}
>>>
Content-Length: 297

{"id":5,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `char`\n\n---\n```cpp\n// In Print\npublic: size_t println(char)\n```"},"range":{"start":{"line":52,"character":11},"end":{"line":52,"character":18}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":16}}}
>>>
Content-Length: 262

{"id":6,"result":{"contents":{"kind":"markdown","value":"### variable `activityHigh`  \n\n---\nType: `int`  \nValue = `5`  \n\n---\n```cpp\nint activityHigh = 5\n```"},"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":20}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":85,"character":46}}}
>>>
Content-Length: 303

{"id":7,"result":{"contents":{"kind":"markdown","value":"### variable `ledsFront`  \n\n---\nType: `CRGB [4]`  \nValue = `{{{}}, {{}}, {{}}, {{}}}`  \nPassed as data  \n\n---\n```cpp\nCRGB ledsFront[4]\n```"},"range":{"start":{"line":85,"character":43},"end":{"line":85,"character":52}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":85,"character":61}}}
>>>
Content-Length: 218

{"id":8,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":85,"character":54},"end":{"line":85,"character":62}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":85,"character":39}}}
>>>
Content-Length: 227

{"id":9,"result":{"contents":{"kind":"markdown","value":"### macro `LED_PIN_FRONT`  \n\n---\n```cpp\n#define LED_PIN_FRONT 5\n```"},"range":{"start":{"line":85,"character":28},"end":{"line":85,"character":41}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":107,"character":33}}}
>>>
Content-Length: 314

{"id":10,"result":{"contents":{"kind":"markdown","value":"### variable `ledBrightness`  \n\n---\nType: `int`  \nValue = `255`  \nPassed as scale (converted to uint8_t)  \n\n---\n```cpp\nint ledBrightness = 255\n```"},"range":{"start":{"line":107,"character":26},"end":{"line":107,"character":39}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":93,"character":33}}}
>>>
Content-Length: 221

{"id":11,"result":{"contents":{"kind":"markdown","value":"### macro `PIEZO_PIN`  \n\n---\n```cpp\n#define PIEZO_PIN A0\n```"},"range":{"start":{"line":93,"character":29},"end":{"line":93,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":85,"character":32}}}
>>>
Content-Length: 228

{"id":12,"result":{"contents":{"kind":"markdown","value":"### macro `LED_PIN_FRONT`  \n\n---\n```cpp\n#define LED_PIN_FRONT 5\n```"},"range":{"start":{"line":85,"character":28},"end":{"line":85,"character":41}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":30}}}
>>>
Content-Length: 39

{"id":13,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":0}}}
>>>
Content-Length: 39

{"id":14,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":46,"character":0}}}
>>>
Content-Length: 39

{"id":15,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":47,"character":1},"end":{"line":47,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":30,"character":0},"end":{"line":47,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":46,"character":3}}}
>>>
Content-Length: 256

{"id":18,"result":{"contents":{"kind":"markdown","value":"### variable `FastLED`  \n\n---\nType: `class CFastLED`  \n\n---\n```cpp\nextern CFastLED FastLED\n```"},"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":14}}}
>>>
Content-Length: 246

{"id":19,"result":{"contents":{"kind":"markdown","value":"### param `green`  \n\n---\nType: `int`  \n\n---\n```cpp\n// In setAllLeds\nint green\n```"},"range":{"start":{"line":38,"character":11},"end":{"line":38,"character":16}}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":31,"character":11}}}
>>>
Content-Length: 391

{"id":20,"result":[{"range":{"start":{"line":31,"character":11},"end":{"line":31,"character":12}},"kind":1},{"range":{"start":{"line":31,"character":22},"end":{"line":31,"character":23}},"kind":2},{"range":{"start":{"line":31,"character":31},"end":{"line":31,"character":32}},"kind":3},{"range":{"start":{"line":32,"character":9},"end":{"line":32,"character":10}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":31,"character":11},"end":{"line":31,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":21,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":35,"character":0}}}
>>>
Content-Length: 39

{"id":22,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":23,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":30,"character":1}}}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":31,"character":1}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":32,"character":1}}}
>>>
Content-Length: 39

{"id":26,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":27,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":34,"character":3}}}
>>>
Content-Length: 198

{"id":27,"result":[{"uri":"file:///C:/Users/tommy/Documents/Arduino/libraries/FastLED/src/FastLED.cpp","range":{"start":{"line":12,"character":9},"end":{"line":12,"character":16}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 7259

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Documents/Arduino/libraries/FastLED/src/FastLED.cpp","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\n#include \"FastLED.h\"\n\n\n#if defined(__SAM3X8E__)\nvolatile uint32_t fuckit;\n#endif\n\nFASTLED_NAMESPACE_BEGIN\n\nvoid *pSmartMatrix = NULL;\n\nCFastLED FastLED;\n\nCLEDController *CLEDController::m_pHead = NULL;\nCLEDController *CLEDController::m_pTail = NULL;\nstatic uint32_t lastshow = 0;\n\nuint32_t _frame_cnt=0;\nuint32_t _retry_cnt=0;\n\n// uint32_t CRGB::Squant = ((uint32_t)((__TIME__[4]-'0') * 28))<<16 | ((__TIME__[6]-'0')*50)<<8 | ((__TIME__[7]-'0')*28);\n\nCFastLED::CFastLED() {\n\t// clear out the array of led controllers\n\t// m_nControllers = 0;\n\tm_Scale = 255;\n\tm_nFPS = 0;\n\tm_pPowerFunc = NULL;\n\tm_nPowerData = 0xFFFFFFFF;\n}\n\nCLEDController &CFastLED::addLeds(CLEDController *pLed,\n\t\t\t\t\t\t\t\t  struct CRGB *data,\n\t\t\t\t\t\t\t\t  int nLedsOrOffset, int nLedsIfOffset) {\n\tint nOffset = (nLedsIfOffset > 0) ? nLedsOrOffset : 0;\n\tint nLeds = (nLedsIfOffset > 0) ? nLedsIfOffset : nLedsOrOffset;\n\n\tpLed->init();\n\tpLed->setLeds(data + nOffset, nLeds);\n\tFastLED.setMaxRefreshRate(pLed->getMaxRefreshRate(),true);\n\treturn *pLed;\n}\n\nvoid CFastLED::show(uint8_t scale) {\n\t// guard against showing too rapidly\n\twhile(m_nMinMicros && ((micros()-lastshow) < m_nMinMicros));\n\tlastshow = micros();\n\n\t// If we have a function for computing power, use it!\n\tif(m_pPowerFunc) {\n\t\tscale = (*m_pPowerFunc)(scale, m_nPowerData);\n\t}\n\n\tCLEDController *pCur = CLEDController::head();\n\twhile(pCur) {\n\t\tuint8_t d = pCur->getDither();\n\t\tif(m_nFPS < 100) { pCur->setDither(0); }\n\t\tpCur->showLeds(scale);\n\t\tpCur->setDither(d);\n\t\tpCur = pCur->next();\n\t}\n\tcountFPS();\n}\n\nint CFastLED::count() {\n    int x = 0;\n\tCLEDController *pCur = CLEDController::head();\n\twhile( pCur) {\n        ++x;\n\t\tpCur = pCur->next();\n\t}\n    return x;\n}\n\nCLEDController & CFastLED::operator[](int x) {\n\tCLEDController *pCur = CLEDController::head();\n\twhile(x-- && pCur) {\n\t\tpCur = pCur->next();\n\t}\n\tif(pCur == NULL) {\n\t\treturn *(CLEDController::head());\n\t} else {\n\t\treturn *pCur;\n\t}\n}\n\nvoid CFastLED::showColor(const struct CRGB & color, uint8_t scale) {\n\twhile(m_nMinMicros && ((micros()-lastshow) < m_nMinMicros));\n\tlastshow = micros();\n\n\t// If we have a function for computing power, use it!\n\tif(m_pPowerFunc) {\n\t\tscale = (*m_pPowerFunc)(scale, m_nPowerData);\n\t}\n\n\tCLEDController *pCur = CLEDController::head();\n\twhile(pCur) {\n\t\tuint8_t d = pCur->getDither();\n\t\tif(m_nFPS < 100) { pCur->setDither(0); }\n\t\tpCur->showColor(color, scale);\n\t\tpCur->setDither(d);\n\t\tpCur = pCur->next();\n\t}\n\tcountFPS();\n}\n\nvoid CFastLED::clear(bool writeData) {\n\tif(writeData) {\n\t\tshowColor(CRGB(0,0,0), 0);\n\t}\n    clearData();\n}\n\nvoid CFastLED::clearData() {\n\tCLEDController *pCur = CLEDController::head();\n\twhile(pCur) {\n\t\tpCur->clearLedData();\n\t\tpCur = pCur->next();\n\t}\n}\n\nvoid CFastLED::delay(unsigned long ms) {\n\tunsigned long start = millis();\n        do {\n#ifndef FASTLED_ACCURATE_CLOCK\n\t\t// make sure to allow at least one ms to pass to ensure the clock moves\n\t\t// forward\n\t\t::delay(1);\n#endif\n\t\tshow();\n\t\tyield();\n\t}\n\twhile((millis()-start) < ms);\n}\n\nvoid CFastLED::setTemperature(const struct CRGB & temp) {\n\tCLEDController *pCur = CLEDController::head();\n\twhile(pCur) {\n\t\tpCur->setTemperature(temp);\n\t\tpCur = pCur->next();\n\t}\n}\n\nvoid CFastLED::setCorrection(const struct CRGB & correction) {\n\tCLEDController *pCur = CLEDController::head();\n\twhile(pCur) {\n\t\tpCur->setCorrection(correction);\n\t\tpCur = pCur->next();\n\t}\n}\n\nvoid CFastLED::setDither(uint8_t ditherMode)  {\n\tCLEDController *pCur = CLEDController::head();\n\twhile(pCur) {\n\t\tpCur->setDither(ditherMode);\n\t\tpCur = pCur->next();\n\t}\n}\n\n//\n// template<int m, int n> void transpose8(unsigned char A[8], unsigned char B[8]) {\n// \tuint32_t x, y, t;\n//\n// \t// Load the array and pack it into x and y.\n//   \ty = *(unsigned int*)(A);\n// \tx = *(unsigned int*)(A+4);\n//\n// \t// x = (A[0]<<24)   | (A[m]<<16)   | (A[2*m]<<8) | A[3*m];\n// \t// y = (A[4*m]<<24) | (A[5*m]<<16) | (A[6*m]<<8) | A[7*m];\n//\n        // // pre-transform x\n        // t = (x ^ (x >> 7)) & 0x00AA00AA;  x = x ^ t ^ (t << 7);\n        // t = (x ^ (x >>14)) & 0x0000CCCC;  x = x ^ t ^ (t <<14);\n\t\t\t\t//\n        // // pre-transform y\n        // t = (y ^ (y >> 7)) & 0x00AA00AA;  y = y ^ t ^ (t << 7);\n        // t = (y ^ (y >>14)) & 0x0000CCCC;  y = y ^ t ^ (t <<14);\n\t\t\t\t//\n        // // final transform\n        // t = (x & 0xF0F0F0F0) | ((y >> 4) & 0x0F0F0F0F);\n        // y = ((x << 4) & 0xF0F0F0F0) | (y & 0x0F0F0F0F);\n        // x = t;\n//\n// \tB[7*n] = y; y >>= 8;\n// \tB[6*n] = y; y >>= 8;\n// \tB[5*n] = y; y >>= 8;\n// \tB[4*n] = y;\n//\n//   B[3*n] = x; x >>= 8;\n// \tB[2*n] = x; x >>= 8;\n// \tB[n] = x; x >>= 8;\n// \tB[0] = x;\n// \t// B[0]=x>>24;    B[n]=x>>16;    B[2*n]=x>>8;  B[3*n]=x>>0;\n// \t// B[4*n]=y>>24;  B[5*n]=y>>16;  B[6*n]=y>>8;  B[7*n]=y>>0;\n// }\n//\n// void transposeLines(Lines & out, Lines & in) {\n// \ttranspose8<1,2>(in.bytes, out.bytes);\n// \ttranspose8<1,2>(in.bytes + 8, out.bytes + 1);\n// }\n\nextern int noise_min;\nextern int noise_max;\n\nvoid CFastLED::countFPS(int nFrames) {\n\tstatic int br = 0;\n\tstatic uint32_t lastframe = 0; // millis();\n\n\tif(br++ >= nFrames) {\n\t\tuint32_t now = millis();\n\t\tnow -= lastframe;\n\t\tif(now == 0) {\n\t\t\tnow = 1; // prevent division by zero below\n\t\t}\n\t\tm_nFPS = (br * 1000) / now;\n\t\tbr = 0;\n\t\tlastframe = millis();\n\t}\n}\n\nvoid CFastLED::setMaxRefreshRate(uint16_t refresh, bool constrain) {\n\tif(constrain) {\n\t\t// if we're constraining, the new value of m_nMinMicros _must_ be higher than previously (because we're only\n\t\t// allowed to slow things down if constraining)\n\t\tif(refresh > 0) {\n\t\t\tm_nMinMicros = ((1000000 / refresh) > m_nMinMicros) ? (1000000 / refresh) : m_nMinMicros;\n\t\t}\n\t} else if(refresh > 0) {\n\t\tm_nMinMicros = 1000000 / refresh;\n\t} else {\n\t\tm_nMinMicros = 0;\n\t}\n}\n\nextern \"C\" int atexit(void (* /*func*/ )()) { return 0; }\n\n#ifdef FASTLED_NEEDS_YIELD\nextern \"C\" void yield(void) { }\n#endif\n\n#ifdef NEED_CXX_BITS\nnamespace __cxxabiv1\n{\n\t#if !defined(ESP8266) && !defined(ESP32)\n\textern \"C\" void __cxa_pure_virtual (void) {}\n\t#endif\n\n\t/* guard variables */\n\n\t/* The ABI requires a 64-bit type.  */\n\t__extension__ typedef int __guard __attribute__((mode(__DI__)));\n\n\textern \"C\" int __cxa_guard_acquire (__guard *) __attribute__((weak));\n\textern \"C\" void __cxa_guard_release (__guard *) __attribute__((weak));\n\textern \"C\" void __cxa_guard_abort (__guard *) __attribute__((weak));\n\n\textern \"C\" int __cxa_guard_acquire (__guard *g)\n\t{\n\t\treturn !*(char *)(g);\n\t}\n\n\textern \"C\" void __cxa_guard_release (__guard *g)\n\t{\n\t\t*(char *)g = 1;\n\t}\n\n\textern \"C\" void __cxa_guard_abort (__guard *)\n\t{\n\n\t}\n}\n#endif\n\nFASTLED_NAMESPACE_END\n"}}}Content-Length: 163

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Documents/Arduino/libraries/FastLED/src/FastLED.cpp"}}}
>>>
Content-Length: 171

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c:/Users/tommy/Documents/Arduino/libraries/FastLED/src/FastLED.cpp","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":34,"character":2}}}
>>>
Content-Length: 256

{"id":28,"result":{"contents":{"kind":"markdown","value":"### variable `FastLED`  \n\n---\nType: `class CFastLED`  \n\n---\n```cpp\nextern CFastLED FastLED\n```"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":35,"character":0}}}
>>>
Content-Length: 39

{"id":29,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":35,"character":1},"end":{"line":35,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":2},"contentChanges":[{"range":{"start":{"line":35,"character":1},"end":{"line":35,"character":1}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3140

{"id":31,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":38,"character":0},"end":{"line":43,"character":1}},"selectionRange":{"start":{"line":38,"character":5},"end":{"line":38,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":45,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":76,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":76,"character":5},"end":{"line":76,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":90,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":92,"character":0},"end":{"line":119,"character":1}},"selectionRange":{"start":{"line":92,"character":5},"end":{"line":92,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":3},"contentChanges":[{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":0}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3140

{"id":32,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":39,"character":0},"end":{"line":44,"character":1}},"selectionRange":{"start":{"line":39,"character":5},"end":{"line":39,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":46,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":46,"character":5},"end":{"line":46,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 450

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":4},"contentChanges":[{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":0}},"rangeLength":0,"text":"void setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 583

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"severity":1,"code":"redefinition","source":"clang","message":"Redefinition of 'setLeds'\n\nproject.ino.cpp:48:6: note: previous definition is here"},{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}},"severity":3,"message":"Previous definition is here\n\nproject.ino.cpp:55:6: error: redefinition of 'setLeds'"}]},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2992,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3356

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":4,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define NUM_LEDS_FRONT 4\r\n#define LED_PIN_FRONT 5\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 8000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nCRGB ledsFront[NUM_LEDS_FRONT];\r\n\r\n\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN_FRONT>(ledsFront, NUM_LEDS);\r\n  FastLED.setBrightness(ledBrightness);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 270

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":42,"character":1},"end":{"line":42,"character":1}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":4}}}Content-Length: 197

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":8}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 197

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":7}}}Content-Length: 209

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":8}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 169

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 169

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 498

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"message":"Redefinition of 'setLeds'\n\nproject.ino.cpp:48:6: note: previous definition is here","severity":1,"code":"redefinition","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 199

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":10}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 199

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":11}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 199

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":12}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 583

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"severity":1,"code":"redefinition","source":"clang","message":"Redefinition of 'setLeds'\n\nproject.ino.cpp:48:6: note: previous definition is here"},{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}},"severity":3,"message":"Previous definition is here\n\nproject.ino.cpp:55:6: error: redefinition of 'setLeds'"}]},"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 3330

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLeds","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 371

{"id":4,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `const struct CRGB \u0026 color`\n\n---\n```cpp\npublic: void setLeds(int start, int end, const struct CRGB \u0026color)\n```"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},"jsonrpc":"2.0"}Content-Length: 371

{"id":5,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `const struct CRGB \u0026 color`\n\n---\n```cpp\npublic: void setLeds(int start, int end, const struct CRGB \u0026color)\n```"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},"jsonrpc":"2.0"}Content-Length: 560

{"id":6,"result":[{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}},"kind":1},{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}},"kind":1},{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"kind":1},{"range":{"start":{"line":46,"character":2},"end":{"line":46,"character":9}},"kind":1},{"range":{"start":{"line":47,"character":2},"end":{"line":47,"character":9}},"kind":1},{"range":{"start":{"line":48,"character":2},"end":{"line":48,"character":9}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 3330

{"id":7,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLeds","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 3330

{"id":8,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLeds","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}Content-Length: 372

{"id":10,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `const struct CRGB \u0026 color`\n\n---\n```cpp\npublic: void setLeds(int start, int end, const struct CRGB \u0026color)\n```"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},"jsonrpc":"2.0"}Content-Length: 372

{"id":11,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `const struct CRGB \u0026 color`\n\n---\n```cpp\npublic: void setLeds(int start, int end, const struct CRGB \u0026color)\n```"},"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},"jsonrpc":"2.0"}Content-Length: 39

{"id":12,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 170

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 500

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":12},"end":{"line":37,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"message":"Redefinition of 'setLeds'\n\nproject.ino.cpp:48:6: note: previous definition is here","severity":1,"code":"redefinition","source":"clang"}]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 199

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":41}}}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 3331

{"id":13,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLeds","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":14,"result":[],"jsonrpc":"2.0"}Content-Length: 271

{"id":15,"result":{"contents":{"kind":"markdown","value":"### struct `CRGB`  \n\n---\nRepresentation of an RGB pixel (Red, Green, Blue)  \n\n---\n```cpp\nstruct CRGB {}\n```"},"range":{"start":{"line":37,"character":39},"end":{"line":37,"character":45}}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 500

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":12},"end":{"line":37,"character":12}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":12}},"message":"Redefinition of 'setLeds'\n\nproject.ino.cpp:48:6: note: previous definition is here","severity":1,"code":"redefinition","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":17,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":5},"contentChanges":[{"range":{"start":{"line":37,"character":12},"end":{"line":37,"character":12}},"rangeLength":0,"text":"F"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":18,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsF","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":13}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":19,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":13},"context":{"triggerKind":1}}}
>>>
Content-Length: 68

{"id":19,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":13},"end":{"line":37,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":20,"result":[],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":6},"contentChanges":[{"range":{"start":{"line":37,"character":13},"end":{"line":37,"character":13}},"rangeLength":0,"text":"r"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3333

{"id":21,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFr","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":14}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":7},"contentChanges":[{"range":{"start":{"line":37,"character":14},"end":{"line":37,"character":14}},"rangeLength":0,"text":"o"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 3334

{"id":22,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFro","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":8},"contentChanges":[{"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":15}},"rangeLength":0,"text":"n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 3335

{"id":23,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFron","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":16}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":9},"contentChanges":[{"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}},"rangeLength":0,"text":"t"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 3336

{"id":24,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":17},"end":{"line":37,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":25,"result":[],"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":17},"end":{"line":37,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 37

{"id":26,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":27,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 167

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":9}}}Content-Length: 199

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":34}}}
>>>
Content-Length: 39

{"id":28,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":17}}}
>>>
Content-Length: 289

{"id":29,"result":{"contents":{"kind":"markdown","value":"### param `color`  \n\n---\nType: `const struct CRGB \u0026`  \n\n---\n```cpp\n// In setLedsFront\nconst struct CRGB \u0026color\n```"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":18}}}
>>>
Content-Length: 39

{"id":30,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":18}}}
>>>
Content-Length: 39

{"id":31,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":18}}}
>>>
Content-Length: 37

{"id":32,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":33,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":36,"character":0},"end":{"line":37,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":35,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":37,"character":36}}}
>>>
Content-Length: 39

{"id":37,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":10},"contentChanges":[{"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":36}},"rangeLength":18,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 931

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":19}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":25}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":37,"character":46},"end":{"line":37,"character":47}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 2179

{"id":38,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":17}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 443

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":19}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":39,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":40,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":10}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":11},"contentChanges":[{"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 537

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'start'"},{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'end'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":41,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":12},"contentChanges":[{"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 537

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'start'"},{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'end'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":42,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":44,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":12}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":14}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 39

{"id":45,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 199

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":17}}}Content-Length: 211

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":17}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 459

{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"message":"Use of undeclared identifier 'start'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":13},"contentChanges":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"rangeLength":5,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 170

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 459

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":16}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"message":"Use of undeclared identifier 'start'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":13}}}
>>>
Content-Length: 537

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":20}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'start'"},{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'end'"}]},"jsonrpc":"2.0"}Content-Length: 39

{"id":46,"result":null,"jsonrpc":"2.0"}Content-Length: 37

{"id":47,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":48,"result":[],"jsonrpc":"2.0"}Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'end'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":49,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":50,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":51,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":52,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":24}}}
>>>
Content-Length: 39

{"id":53,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":54,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":23}}}
>>>
Content-Length: 39

{"id":54,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":23}}}
>>>
Content-Length: 37

{"id":55,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 457

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"message":"Use of undeclared identifier 'end'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":56,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":14},"contentChanges":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"rangeLength":3,"text":"N"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'N'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":57,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}Content-Length: 232

{"jsonrpc":"2.0","id":58,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":23},"context":{"triggerKind":1}}}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 16940

{"id":58,"result":{"isIncomplete":true,"items":[{"label":" new type(expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"new ${1:type}(${0:expressions})"}},{"label":" new type[size](expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"new ${1:type}[${2:size}](${0:expressions})"}},{"label":" noexcept(expression)","kind":15,"detail":"bool","sortText":"3f000000noexcept","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"noexcept(${0:expression})"}},{"label":" nullptr","kind":15,"detail":"std::nullptr_t","sortText":"3f000000nullptr","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nullptr"}},{"label":"•nscale8(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8 - scale down the brightness of an array of pixels all at once. This function can scale pixels all the way down to black even if 'scale' is not zero."},"sortText":"3f651eb8nscale8","filterText":"nscale8","insertText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":"•nscale8_video(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8_video - scale down the brightness of an array of pixels all at once. Guaranteed to never scale a pixel all the way down to black, unless 'scale' is zero."},"sortText":"3f651eb8nscale8_video","filterText":"nscale8_video","insertText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":" NUM_LEDS","kind":1,"sortText":"40400000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NUM_LEDS"}},{"label":" NUM_LEDS_FRONT","kind":1,"sortText":"40400000NUM_LEDS_FRONT","filterText":"NUM_LEDS_FRONT","insertText":"NUM_LEDS_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NUM_LEDS_FRONT"}},{"label":" NEOPIXEL\u003cuint8_t DATA_PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"404a3370NEOPIXEL","filterText":"NEOPIXEL","insertText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":" noTone(uint8_t _pin)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68noTone","filterText":"noTone","insertText":"noTone(${1:uint8_t _pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"noTone(${1:uint8_t _pin})"}},{"label":" nullptr_t","kind":8,"sortText":"405d8e68nullptr_t","filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nullptr_t"}},{"label":"•NOBLEND","kind":20,"detail":"TBlendType","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fNOBLEND","filterText":"NOBLEND","insertText":"NOBLEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NOBLEND"}},{"label":"•napplyGamma_video(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nThe \"n\" versions below modify their arguments in-place."},"sortText":"4068a03fnapplyGamma_video","filterText":"napplyGamma_video","insertText":"napplyGamma_video($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"napplyGamma_video($0)"}},{"label":"•nblend(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblend - destructively modifies one color, blending in a given fraction of an overlay color"},"sortText":"4068a03fnblend","filterText":"nblend","insertText":"nblend($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nblend($0)"}},{"label":"•nblendPaletteTowardPalette(CRGBPalette16 \u0026currentPalette, CRGBPalette16 \u0026targetPalette, uint8_t maxChanges = 24)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblendPaletteTowardPalette:  \nAlter one palette by making it slightly more like a 'target palette', used for palette cross-fades.  \nIt does this by comparing each of the R, G, and B channels of each entry in the current palette to the corresponding entry in the target palette and making small adjustments:  \nIf the Red channel is too low, it will be increased.  \nIf the Red channel is too high, it will be slightly reduced.  \n... and likewise for Green and Blue channels.  \nAdditionally, there are two significant visual improvements to this algorithm implemented here. First is this:  \nWhen increasing a channel, it is stepped up by ONE.  \nWhen decreasing a channel, it is stepped down by TWO.  \nDue to the way the eye perceives light, and the way colors are represented in RGB, this produces a more uniform apparent brightness when cross-fading between most palette colors.  \nThe second visual tweak is limiting the number of changes that will be made to the palette at once. If all the palette entries are changed at once, it can give a muddled appearance.  \nHowever, if only a few palette entries are changed at once,  \nyou get a visually smoother transition: in the middle of the cross-fade your current palette will actually contain some colors from the old palette, a few blended colors, and some colors from the new palette.  \nThe maximum number of possible palette changes per call is 48 (sixteen color entries time three channels each).  \nThe default 'maximim number of changes' here is 12, meaning that only approximately a quarter of the palette entries will be changed per call."},"sortText":"4068a03fnblendPaletteTowardPalette","filterText":"nblendPaletteTowardPalette","insertText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})"}},{"label":"•nscale8_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8, also this version of nscale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_LEAVING_R1_DIRTY","filterText":"nscale8_LEAVING_R1_DIRTY","insertText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8_video_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8_video, also this version of nscale8_video does not clean up the R1 register on AVR If you are doing several 'scale8_video's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_video_LEAVING_R1_DIRTY","filterText":"nscale8_video_LEAVING_R1_DIRTY","insertText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8x2(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2","filterText":"nscale8x2","insertText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x2_video(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2_video","filterText":"nscale8x2_video","insertText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x3(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3","filterText":"nscale8x3","insertText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":"•nscale8x3_video(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3_video","filterText":"nscale8x3_video","insertText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":" NAN","kind":1,"sortText":"40d1050aNAN","filterText":"NAN","insertText":"NAN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NAN"}},{"label":" NOT_AN_INTERRUPT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_AN_INTERRUPT","filterText":"NOT_AN_INTERRUPT","insertText":"NOT_AN_INTERRUPT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NOT_AN_INTERRUPT"}},{"label":" NOT_A_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PIN","filterText":"NOT_A_PIN","insertText":"NOT_A_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NOT_A_PIN"}},{"label":" NOT_A_PORT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PORT","filterText":"NOT_A_PORT","insertText":"NOT_A_PORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NOT_A_PORT"}},{"label":" NOT_ON_TIMER","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_ON_TIMER","filterText":"NOT_ON_TIMER","insertText":"NOT_ON_TIMER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NOT_ON_TIMER"}},{"label":"•NO_IGNORE_CHAR","kind":1,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40ec52eaNO_IGNORE_CHAR","filterText":"NO_IGNORE_CHAR","insertText":"NO_IGNORE_CHAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NO_IGNORE_CHAR"}},{"label":" NULL","kind":1,"sortText":"40ec52eaNULL","filterText":"NULL","insertText":"NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NULL"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NUM_CONTROLLERS"}},{"label":" noInterrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eanoInterrupts","filterText":"noInterrupts","insertText":"noInterrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"noInterrupts()"}},{"label":"•NO_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"40f66322NO_PIN","filterText":"NO_PIN","insertText":"NO_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NO_PIN"}},{"label":"•NO_TIME(A, B, C)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NO_TIME","filterText":"NO_TIME","insertText":"NO_TIME(${1:A}, ${2:B}, ${3:C})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NO_TIME(${1:A}, ${2:B}, ${3:C})"}},{"label":"•NS(_NS)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NS","filterText":"NS","insertText":"NS(${1:_NS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NS(${1:_NS})"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":23}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":15},"contentChanges":[{"range":{"start":{"line":38,"character":23},"end":{"line":38,"character":23}},"rangeLength":0,"text":"U"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NU'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":59,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":60,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":38,"character":24},"context":{"triggerKind":3}}}
>>>
Content-Length: 2375

{"id":60,"result":{"isIncomplete":false,"items":[{"label":" nullptr","kind":15,"detail":"std::nullptr_t","sortText":"3f200000nullptr","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"nullptr"}},{"label":" NUM_LEDS","kind":1,"sortText":"40400000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"NUM_LEDS"}},{"label":" NUM_LEDS_FRONT","kind":1,"sortText":"40400000NUM_LEDS_FRONT","filterText":"NUM_LEDS_FRONT","insertText":"NUM_LEDS_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"NUM_LEDS_FRONT"}},{"label":" nullptr_t","kind":8,"sortText":"4071dc9bnullptr_t","filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"nullptr_t"}},{"label":" NULL","kind":1,"sortText":"40ec52eaNULL","filterText":"NULL","insertText":"NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"NULL"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"NUM_CONTROLLERS"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":16},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"rangeLength":0,"text":"L"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUL'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":61,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":63,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 457

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"message":"Use of undeclared identifier 'NUL'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":63,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":64,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":17},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NU'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":65,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":66,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 456

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":24}},"message":"Use of undeclared identifier 'NU'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":66,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":67,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":17}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":18},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":24}},"rangeLength":0,"text":"M"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":68,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 457

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":25}},"message":"Use of undeclared identifier 'NUM'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":69,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":70,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":19},"contentChanges":[{"range":{"start":{"line":38,"character":25},"end":{"line":38,"character":25}},"rangeLength":0,"text":"_"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 351

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":71,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":20},"contentChanges":[{"range":{"start":{"line":38,"character":26},"end":{"line":38,"character":26}},"rangeLength":0,"text":"L"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_L'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":72,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":21},"contentChanges":[{"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"rangeLength":0,"text":"E"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":28}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_LE'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":74,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":22},"contentChanges":[{"range":{"start":{"line":38,"character":28},"end":{"line":38,"character":28}},"rangeLength":0,"text":"D"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":29}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_LED'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":75,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":77,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 461

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":29},"end":{"line":38,"character":29}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":29}},"message":"Use of undeclared identifier 'NUM_LED'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":77,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":78,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":23},"contentChanges":[{"range":{"start":{"line":38,"character":29},"end":{"line":38,"character":29}},"rangeLength":0,"text":"_"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 355

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":30}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_LED_'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":79,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 462

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":30},"end":{"line":38,"character":30}},"context":{"diagnostics":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":30}},"message":"Use of undeclared identifier 'NUM_LED_'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":81,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":23}}}Content-Length: 309

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":24},"contentChanges":[{"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":30}},"rangeLength":8,"text":"NUM_LEDS_FRONT"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":82,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 273

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":38,"character":36},"end":{"line":38,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":83,"result":[],"jsonrpc":"2.0"}Content-Length: 407

{"id":84,"result":[{"title":"Expand macro 'NUM_LEDS_FRONT'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS_FRONT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server765156599/sketch/project.ino.cpp","selection":{"start":{"line":57,"character":36},"end":{"line":57,"character":36}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":24}}}Content-Length: 198

{"jsonrpc":"2.0","id":85,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":6}}}
>>>
Content-Length: 345

{"id":85,"result":{"contents":{"kind":"markdown","value":"### variable `leds`  \n\n---\nType: `CRGB [11]`  \nValue = `{{{}}, {{}}, {{}}, {{}}, {{}}, {{}}, {{}}, {{}}, {{}}, {{}}, ...}`  \nDefine the array of leds  \n\n---\n```cpp\nCRGB leds[11]\n```"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":8}}},"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":7}}}
>>>
Content-Length: 386

{"id":86,"result":[{"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}},"kind":1},{"range":{"start":{"line":32,"character":4},"end":{"line":32,"character":8}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":8}},"kind":1},{"range":{"start":{"line":91,"character":37},"end":{"line":91,"character":41}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":7},"end":{"line":39,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":87,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":88,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":25},"contentChanges":[{"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"rangeLength":0,"text":"_"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 663

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":9}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_'; did you mean 'leds'? (fix available)\n\nproject.ino.cpp:20:6: note: 'leds' declared here"},{"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}},"severity":3,"message":"'leds' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_'; did you mean 'leds'?"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":89,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"jsonrpc":"2.0","id":90,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":9},"context":{"triggerKind":1}}}
>>>
Content-Length: 68

{"id":90,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":26},"contentChanges":[{"range":{"start":{"line":39,"character":9},"end":{"line":39,"character":9}},"rangeLength":0,"text":"f"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 666

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_f'; did you mean 'leds'? (fix available)\n\nproject.ino.cpp:20:6: note: 'leds' declared here"},{"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}},"severity":3,"message":"'leds' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_f'; did you mean 'leds'?"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":91,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":92,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":27},"contentChanges":[{"range":{"start":{"line":39,"character":10},"end":{"line":39,"character":10}},"rangeLength":0,"text":"r"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'leds_fr'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":93,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":28},"contentChanges":[{"range":{"start":{"line":39,"character":11},"end":{"line":39,"character":11}},"rangeLength":0,"text":"o"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 354

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":12}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'leds_fro'"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":94,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":94}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":29},"contentChanges":[{"range":{"start":{"line":39,"character":12},"end":{"line":39,"character":12}},"rangeLength":0,"text":"n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 693

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_fron'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_fron'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":95,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":30},"contentChanges":[{"range":{"start":{"line":39,"character":13},"end":{"line":39,"character":13}},"rangeLength":0,"text":"t"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3336

{"id":96,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":30}}}Content-Length: 273

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 571

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}Content-Length: 189

{"id":98,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":22}}}
>>>
Content-Length: 289

{"id":99,"result":{"contents":{"kind":"markdown","value":"### param `color`  \n\n---\nType: `const struct CRGB \u0026`  \n\n---\n```cpp\n// In setLedsFront\nconst struct CRGB \u0026color\n```"},"range":{"start":{"line":39,"character":20},"end":{"line":39,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":22}}}
>>>
Content-Length: 215

{"id":100,"result":[{"range":{"start":{"line":37,"character":37},"end":{"line":37,"character":42}},"kind":1},{"range":{"start":{"line":39,"character":20},"end":{"line":39,"character":25}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":101,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":102,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":91,"character":44}}}
>>>
Content-Length: 220

{"id":103,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":91,"character":43},"end":{"line":91,"character":51}}},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":93,"character":39},"end":{"line":93,"character":39}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 301

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":31},"contentChanges":[{"range":{"start":{"line":93,"character":39},"end":{"line":93,"character":39}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":105,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":31}}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":32},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"rangeLength":0,"text":"f"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1069

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'f'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":107,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":108,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 47712

{"id":108,"result":{"isIncomplete":true,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastLED"}},{"label":" fract8","kind":8,"documentation":{"kind":"markdown","value":"ANSI unsigned short \\_Fract. range is 0 to 0.99609375 in steps of 0.00390625"},"sortText":"3eff2eb1fract8","filterText":"fract8","insertText":"fract8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract8"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"false"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"float"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" FILE","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\c FILE is the opaque structure that is passed around between the various standard IO functions."},"sortText":"3f17ae13FILE","filterText":"FILE","insertText":"FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FILE"}},{"label":" fract16","kind":8,"documentation":{"kind":"markdown","value":"ANSI: unsigned \\_Fract. range is 0 to 0.99998474121 in steps of 0.00001525878"},"sortText":"3f17ae13fract16","filterText":"fract16","insertText":"fract16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract16"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabs(${1:double __x})"}},{"label":" fdim(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fdim() function returns \\\u003cem\u003emax(\\_\\_x - \\_\\_y, 0)\\\u003c/em\u003e. If \\\\a \\_\\_x or  \n\\\\a \\_\\_y or both are NaN, NaN is returned."},"sortText":"403f858bfdim","filterText":"fdim","insertText":"fdim(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdim(${1:double __x}, ${2:double __y})"}},{"label":" ffs(int __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffs(int val);  \n\\\\brief This function finds the first (least significant) bit set in the input value.  \n\\\\returns The ffs() function returns the position of the first (least significant) bit set in the word val, or 0 if no bits are set.  \nThe least significant bit is position 1.  \n\\\\note For expressions that are constant at compile time, consider using the \\\\ref \\_FFS macro instead."},"sortText":"403f858bffs","filterText":"ffs","insertText":"ffs(${1:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffs(${1:int __val})"}},{"label":" ffsl(long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsl(long val);  \n\\\\brief Same as ffs(), for an argument of type long."},"sortText":"403f858bffsl","filterText":"ffsl","insertText":"ffsl(${1:long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsl(${1:long __val})"}},{"label":" ffsll(long long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsll(long long val);  \n\\\\brief Same as ffs(), for an argument of type long long."},"sortText":"403f858bffsll","filterText":"ffsll","insertText":"ffsll(${1:long long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsll(${1:long long __val})"}},{"label":" floor(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The floor() function returns the largest integral value less than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"403f858bfloor","filterText":"floor","insertText":"floor(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floor(${1:double __x})"}},{"label":" fma(double __x, double __y, double __z)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fma() function performs floating-point multiply-add. This is the operation \\\u003cem\u003e(\\_\\_x * \\_\\_y) + \\_\\_z\\\u003c/em\u003e, but the intermediate result is not rounded to the destination type. This can sometimes improve the precision of a calculation."},"sortText":"403f858bfma","filterText":"fma","insertText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})"}},{"label":" fmax(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmax() function returns the greater of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmax","filterText":"fmax","insertText":"fmax(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmax(${1:double __x}, ${2:double __y})"}},{"label":" fmin(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmin() function returns the lesser of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmin","filterText":"fmin","insertText":"fmin(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmin(${1:double __x}, ${2:double __y})"}},{"label":" fmod(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function fmod() returns the floating-point remainder of \\\u003cem\u003e\\_\\_x / \\_\\_y\\\u003c/em\u003e."},"sortText":"403f858bfmod","filterText":"fmod","insertText":"fmod(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmod(${1:double __x}, ${2:double __y})"}},{"label":" free(void *__ptr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The free() function causes the allocated memory referenced by \\\\c ptr to be made available for future allocations. If \\\\c ptr is NULL, no action occurs."},"sortText":"403f858bfree","filterText":"free","insertText":"free(${1:void *__ptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"free(${1:void *__ptr})"}},{"label":" frexp(double __x, int *__pexp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The frexp() function breaks a floating-point number into a normalized fraction and an integral power of 2. It stores the integer in the \\\\c int object pointed to by \\\\a \\_\\_pexp.  \nIf \\\\a \\_\\_x is a normal float point number, the frexp() function returns the value \\\\c v, such that \\\\c v has a magnitude in the interval [1/2, 1) or zero, and \\\\a \\_\\_x equals \\\\c v times 2 raised to the power \\\\a \\_\\_pexp. If \\\\a \\_\\_x is zero, both parts of the result are zero. If \\\\a \\_\\_x is not a finite number, the frexp() returns \\\\a \\_\\_x as is and stores 0 by \\\\a \\_\\_pexp.  \n\\\\note This implementation permits a zero pointer as a directive to skip a storing the exponent."},"sortText":"403f858bfrexp","filterText":"frexp","insertText":"frexp(${1:double __x}, ${2:int *__pexp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexp(${1:double __x}, ${2:int *__pexp})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40400000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INTERNAL"}},{"label":"•F(string_literal)","kind":1,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`"},"sortText":"4051050aF","filterText":"F","insertText":"F(${1:string_literal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F(${1:string_literal})"}},{"label":"•FORWARD_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fFORWARD_HUES","filterText":"FORWARD_HUES","insertText":"FORWARD_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FORWARD_HUES"}},{"label":" ForestColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Forest colors, greens"},"sortText":"4068a03fForestColors_p","filterText":"ForestColors_p","insertText":"ForestColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ForestColors_p"}},{"label":"•FullSpectrumFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 244, 242"},"sortText":"4068a03fFullSpectrumFluorescent","filterText":"FullSpectrumFluorescent","insertText":"FullSpectrumFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FullSpectrumFluorescent"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" fclose(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"This function closes \\\\c stream, and disallows and further IO to and from it.  \nWhen using fdevopen() to setup the stream, a call to fclose() is needed in order to free the internal resources allocated.  \nIf the stream has been set up using fdev_setup_stream() or FDEV_SETUP_STREAM(), use fdev_close() instead.  \nIt currently always returns 0 (for success)."},"sortText":"4068a03ffclose","filterText":"fclose","insertText":"fclose(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fclose(${1:FILE *__stream})"}},{"label":" fdevopen(int (*__put)(char, FILE *), int (*__get)(FILE *))","kind":3,"detail":"FILE *","documentation":{"kind":"markdown","value":"New prototype for avr-libc 1.4 and above."},"sortText":"4068a03ffdevopen","filterText":"fdevopen","insertText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})"}},{"label":" fdopen(int, const char *)","kind":3,"detail":"FILE *","sortText":"4068a03ffdopen","filterText":"fdopen","insertText":"fdopen(${1:int}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdopen(${1:int}, ${2:const char *})"}},{"label":" feof(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the end-of-file flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03ffeof","filterText":"feof","insertText":"feof(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"feof(${1:FILE *__stream})"}},{"label":" ferror(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the error flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03fferror","filterText":"ferror","insertText":"ferror(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ferror(${1:FILE *__stream})"}},{"label":" fflush(FILE *stream)","kind":3,"detail":"int","sortText":"4068a03ffflush","filterText":"fflush","insertText":"fflush(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fflush(${1:FILE *stream})"}},{"label":" fgetc(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fgetc reads a character from \\\\c stream. It returns the character, or \\\\c EOF in case end-of-file was encountered or an error occurred. The routines feof() or ferror() must be used to distinguish between both situations."},"sortText":"4068a03ffgetc","filterText":"fgetc","insertText":"fgetc(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetc(${1:FILE *__stream})"}},{"label":" fgetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffgetpos","filterText":"fgetpos","insertText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" fgets(char *__str, int __size, FILE *__stream)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"Read at most \\\u003ctt\u003esize - 1\\\u003c/tt\u003e bytes from \\\\c stream, until a newline character was encountered, and store the characters in the buffer pointed to by \\\\c str. Unless an error was encountered while reading, the string will then be terminated with a \\\\c NUL character.  \nIf an error was encountered, the function returns NULL and sets the error flag of \\\\c stream, which can be tested using ferror().  \nOtherwise, a pointer to the string will be returned."},"sortText":"4068a03ffgets","filterText":"fgets","insertText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})"}},{"label":" fileno(FILE *)","kind":3,"detail":"int","sortText":"4068a03ffileno","filterText":"fileno","insertText":"fileno(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fileno(${1:FILE *})"}},{"label":"•fill_2dnoise16(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint32_t x, int xscale, uint32_t y, int yscale, uint32_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend, uint16_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise16","filterText":"fill_2dnoise16","insertText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_2dnoise8(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint16_t x, int xscale, uint16_t y, int yscale, uint16_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise8","filterText":"fill_2dnoise8","insertText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_gradient(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nConvenience functions to fill an array of colors with a two-color, three-color, or four-color gradient"},"sortText":"4068a03ffill_gradient","filterText":"fill_gradient","insertText":"fill_gradient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient($0)"}},{"label":"•fill_gradient_RGB(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_gradient_RGB - fill a range of LEDs with a smooth RGB gradient between two specified RGB colors.  \nUnlike HSV, there is no 'color wheel' in RGB space,  \nand therefore there's only one 'direction' for the gradient to go, and no 'direction code' is needed."},"sortText":"4068a03ffill_gradient_RGB","filterText":"fill_gradient_RGB","insertText":"fill_gradient_RGB($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient_RGB($0)"}},{"label":"•fill_noise16(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time, uint8_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_noise16","filterText":"fill_noise16","insertText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_noise8(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name fill functions  \n@{ fill functions to fill leds with values based on noise functions. These functions use the fill_raw\\_\\* functions as appropriate."},"sortText":"4068a03ffill_noise8","filterText":"fill_noise8","insertText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_palette(CRGB *L, uint16_t N, uint8_t startIndex, uint8_t incIndex, const PALETTE \u0026pal, uint8_t brightness, TBlendType blendType)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nFill a range of LEDs with a sequece of entryies from a palette"},"sortText":"4068a03ffill_palette","filterText":"fill_palette","insertText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})"}},{"label":"•fill_rainbow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_rainbow - fill a range of LEDs with a rainbow of colors, at full saturation and full value (brightness)"},"sortText":"4068a03ffill_rainbow","filterText":"fill_rainbow","insertText":"fill_rainbow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_rainbow($0)"}},{"label":"•fill_raw_2dnoise16(uint16_t *pData, int width, int height, uint8_t octaves, q88 freq88, fract16 amplitude, int skip, uint32_t x, int scalex, uint32_t y, int scaley, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16","filterText":"fill_raw_2dnoise16","insertText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})"}},{"label":"•fill_raw_2dnoise16into8(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16into8","filterText":"fill_raw_2dnoise16into8","insertText":"fill_raw_2dnoise16into8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16into8($0)"}},{"label":"•fill_raw_2dnoise8(uint8_t *pData, int width, int height, uint8_t octaves, uint16_t x, int scalex, uint16_t y, int scaley, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise8","filterText":"fill_raw_2dnoise8","insertText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})"}},{"label":"•fill_raw_noise16into8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint32_t x, int scalex, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_noise16into8","filterText":"fill_raw_noise16into8","insertText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})"}},{"label":"•fill_raw_noise8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint16_t x, int scalex, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw fill functions  \n@{ Raw noise fill functions - fill into a 1d or 2d array of 8-bit values using either 8-bit noise or 16-bit noise functions.  \n@param pData the array of data to write into  \n@param num_points the number of points of noise to compute  \n@param octaves the number of octaves to use for noise  \n@param x the x position in the noise field  \n@param y the y position in the noise field for 2d functions  \n@param scalex the scale (distance) between x points when filling in noise  \n@param scaley the scale (distance) between y points when filling in noise  \n@param time the time position for the noise field"},"sortText":"4068a03ffill_raw_noise8","filterText":"fill_raw_noise8","insertText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})"}},{"label":"•fill_solid(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_solid - fill a range of LEDs with a solid color Example: fill_solid( leds, NUM_LEDS, CRGB(50,0,200));"},"sortText":"4068a03ffill_solid","filterText":"fill_solid","insertText":"fill_solid($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_solid($0)"}},{"label":" floatToSfract15(float f)","kind":3,"detail":"sfract15","documentation":{"kind":"markdown","value":"conversion from IEEE754 float in the range (-1,1) to 16-bit fixed point. Note that the extremes of one and negative one are NOT representable. The representable range is basically"},"sortText":"4068a03ffloatToSfract15","filterText":"floatToSfract15","insertText":"floatToSfract15(${1:float f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floatToSfract15(${1:float f})"}},{"label":" fopen(const char *path, const char *mode)","kind":3,"detail":"FILE *","sortText":"4068a03ffopen","filterText":"fopen","insertText":"fopen(${1:const char *path}, ${2:const char *mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fopen(${1:const char *path}, ${2:const char *mode})"}},{"label":" fpos_t","kind":8,"sortText":"4068a03ffpos_t","filterText":"fpos_t","insertText":"fpos_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fpos_t"}},{"label":" fprintf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fprintf performs formatted output to \\\\c stream.  \nSee \\\\c vfprintf() for details."},"sortText":"4068a03ffprintf","filterText":"fprintf","insertText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fprintf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c fprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03ffprintf_P","filterText":"fprintf_P","insertText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fputc(int __c, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fputc sends the character \\\\c c (though given as type  \n\\\\c int) to \\\\c stream. It returns the character, or \\\\c EOF in case an error occurred."},"sortText":"4068a03ffputc","filterText":"fputc","insertText":"fputc(${1:int __c}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputc(${1:int __c}, ${2:FILE *__stream})"}},{"label":" fputs(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Write the string pointed to by \\\\c str to stream \\\\c stream.  \nReturns 0 on success and EOF on error."},"sortText":"4068a03ffputs","filterText":"fputs","insertText":"fputs(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fputs_P(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fputs() where \\\\c str resides in program memory."},"sortText":"4068a03ffputs_P","filterText":"fputs_P","insertText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fread(void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Read \\\\c nmemb objects, \\\\c size bytes each, from \\\\c stream,  \nto the buffer pointed to by \\\\c ptr.  \nReturns the number of objects successfully read, i. e.  \n\\\\c nmemb unless an input error occured or end-of-file was encountered. feof() and ferror() must be used to distinguish between these two conditions."},"sortText":"4068a03ffread","filterText":"fread","insertText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" freopen(const char *path, const char *mode, FILE *stream)","kind":3,"detail":"FILE *","sortText":"4068a03ffreopen","filterText":"freopen","insertText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})"}},{"label":" fscanf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fscanf performs formatted input, reading the input data from \\\\c stream.  \nSee vfscanf() for details."},"sortText":"4068a03ffscanf","filterText":"fscanf","insertText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fscanf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fscanf() using a \\\\c fmt string in program memory."},"sortText":"4068a03ffscanf_P","filterText":"fscanf_P","insertText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fseek(FILE *stream, long offset, int whence)","kind":3,"detail":"int","sortText":"4068a03ffseek","filterText":"fseek","insertText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})"}},{"label":" fsetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffsetpos","filterText":"fsetpos","insertText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" ftell(FILE *stream)","kind":3,"detail":"long","sortText":"4068a03fftell","filterText":"ftell","insertText":"ftell(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ftell(${1:FILE *stream})"}},{"label":" fwrite(const void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Write \\\\c nmemb objects, \\\\c size bytes each, to \\\\c stream.  \nThe first byte of the first object is referenced by \\\\c ptr.  \nReturns the number of objects successfully written, i. e.  \n\\\\c nmemb unless an output error occured."},"sortText":"4068a03ffwrite","filterText":"fwrite","insertText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" F_CPU","kind":1,"sortText":"40800000F_CPU","filterText":"F_CPU","insertText":"F_CPU","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F_CPU"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40b194b3FASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabsf"}},{"label":" fdimf","kind":1,"sortText":"40d1050afdimf","filterText":"fdimf","insertText":"fdimf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdimf"}},{"label":" floorf","kind":1,"sortText":"40d1050afloorf","filterText":"floorf","insertText":"floorf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floorf"}},{"label":" fmaf","kind":1,"sortText":"40d1050afmaf","filterText":"fmaf","insertText":"fmaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaf"}},{"label":" fmaxf","kind":1,"sortText":"40d1050afmaxf","filterText":"fmaxf","insertText":"fmaxf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaxf"}},{"label":" fminf","kind":1,"sortText":"40d1050afminf","filterText":"fminf","insertText":"fminf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fminf"}},{"label":" fmodf","kind":1,"sortText":"40d1050afmodf","filterText":"fmodf","insertText":"fmodf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmodf"}},{"label":" frexpf","kind":1,"sortText":"40d1050afrexpf","filterText":"frexpf","insertText":"frexpf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexpf"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FALLING"}},{"label":" FE0","kind":1,"sortText":"40ec52eaFE0","filterText":"FE0","insertText":"FE0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FE0"}},{"label":" FLASHEND","kind":1,"sortText":"40ec52eaFLASHEND","filterText":"FLASHEND","insertText":"FLASHEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FLASHEND"}},{"label":" FOC0A","kind":1,"sortText":"40ec52eaFOC0A","filterText":"FOC0A","insertText":"FOC0A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0A"}},{"label":" FOC0B","kind":1,"sortText":"40ec52eaFOC0B","filterText":"FOC0B","insertText":"FOC0B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0B"}},{"label":" FOC1A","kind":1,"sortText":"40ec52eaFOC1A","filterText":"FOC1A","insertText":"FOC1A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1A"}},{"label":" FOC1B","kind":1,"sortText":"40ec52eaFOC1B","filterText":"FOC1B","insertText":"FOC1B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1B"}},{"label":" FOC2A","kind":1,"sortText":"40ec52eaFOC2A","filterText":"FOC2A","insertText":"FOC2A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2A"}},{"label":" FOC2B","kind":1,"sortText":"40ec52eaFOC2B","filterText":"FOC2B","insertText":"FOC2B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2B"}},{"label":" FUSE_BODLEVEL0","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL0","filterText":"FUSE_BODLEVEL0","insertText":"FUSE_BODLEVEL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL0"}},{"label":" FUSE_BODLEVEL1","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL1","filterText":"FUSE_BODLEVEL1","insertText":"FUSE_BODLEVEL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL1"}},{"label":" FUSE_BODLEVEL2","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL2","filterText":"FUSE_BODLEVEL2","insertText":"FUSE_BODLEVEL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL2"}},{"label":" FUSE_BOOTRST","kind":1,"sortText":"40ec52eaFUSE_BOOTRST","filterText":"FUSE_BOOTRST","insertText":"FUSE_BOOTRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTRST"}},{"label":" FUSE_BOOTSZ0","kind":1,"sortText":"40ec52eaFUSE_BOOTSZ0","filterText":"FUSE_BOOTSZ0","insertText":"FUSE_BOOTSZ0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTSZ0"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":33},"contentChanges":[{"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":3}},"rangeLength":0,"text":"a"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1070

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'fa'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":109,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":110,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":4},"context":{"triggerKind":3}}}
>>>
Content-Length: 13806

{"id":110,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastLED"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"false"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" CFastLED","kind":7,"sortText":"3fd1c28eCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3fe19999CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"CFastLED()"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fabs(${1:double __x})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40580000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INTERNAL"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" FastSPI_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED","filterText":"FastSPI_LED","insertText":"FastSPI_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastSPI_LED"}},{"label":" FastSPI_LED2","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED2","filterText":"FastSPI_LED2","insertText":"FastSPI_LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastSPI_LED2"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40be2cd4FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40cb621cFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fabsf"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d6327bFASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d6327bFASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40df0d07FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40df0d07FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40fec88dFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FALLING"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 440

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":4},"end":{"line":94,"character":4}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"message":"Unknown type name 'fa'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":111,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":112,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":33}}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":34},"contentChanges":[{"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":113,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":3},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 47712

{"id":113,"result":{"isIncomplete":true,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastLED"}},{"label":" fract8","kind":8,"documentation":{"kind":"markdown","value":"ANSI unsigned short \\_Fract. range is 0 to 0.99609375 in steps of 0.00390625"},"sortText":"3eff2eb1fract8","filterText":"fract8","insertText":"fract8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract8"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"false"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"float"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" FILE","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\c FILE is the opaque structure that is passed around between the various standard IO functions."},"sortText":"3f17ae13FILE","filterText":"FILE","insertText":"FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FILE"}},{"label":" fract16","kind":8,"documentation":{"kind":"markdown","value":"ANSI: unsigned \\_Fract. range is 0 to 0.99998474121 in steps of 0.00001525878"},"sortText":"3f17ae13fract16","filterText":"fract16","insertText":"fract16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract16"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabs(${1:double __x})"}},{"label":" fdim(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fdim() function returns \\\u003cem\u003emax(\\_\\_x - \\_\\_y, 0)\\\u003c/em\u003e. If \\\\a \\_\\_x or  \n\\\\a \\_\\_y or both are NaN, NaN is returned."},"sortText":"403f858bfdim","filterText":"fdim","insertText":"fdim(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdim(${1:double __x}, ${2:double __y})"}},{"label":" ffs(int __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffs(int val);  \n\\\\brief This function finds the first (least significant) bit set in the input value.  \n\\\\returns The ffs() function returns the position of the first (least significant) bit set in the word val, or 0 if no bits are set.  \nThe least significant bit is position 1.  \n\\\\note For expressions that are constant at compile time, consider using the \\\\ref \\_FFS macro instead."},"sortText":"403f858bffs","filterText":"ffs","insertText":"ffs(${1:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffs(${1:int __val})"}},{"label":" ffsl(long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsl(long val);  \n\\\\brief Same as ffs(), for an argument of type long."},"sortText":"403f858bffsl","filterText":"ffsl","insertText":"ffsl(${1:long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsl(${1:long __val})"}},{"label":" ffsll(long long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsll(long long val);  \n\\\\brief Same as ffs(), for an argument of type long long."},"sortText":"403f858bffsll","filterText":"ffsll","insertText":"ffsll(${1:long long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsll(${1:long long __val})"}},{"label":" floor(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The floor() function returns the largest integral value less than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"403f858bfloor","filterText":"floor","insertText":"floor(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floor(${1:double __x})"}},{"label":" fma(double __x, double __y, double __z)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fma() function performs floating-point multiply-add. This is the operation \\\u003cem\u003e(\\_\\_x * \\_\\_y) + \\_\\_z\\\u003c/em\u003e, but the intermediate result is not rounded to the destination type. This can sometimes improve the precision of a calculation."},"sortText":"403f858bfma","filterText":"fma","insertText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})"}},{"label":" fmax(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmax() function returns the greater of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmax","filterText":"fmax","insertText":"fmax(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmax(${1:double __x}, ${2:double __y})"}},{"label":" fmin(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmin() function returns the lesser of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmin","filterText":"fmin","insertText":"fmin(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmin(${1:double __x}, ${2:double __y})"}},{"label":" fmod(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function fmod() returns the floating-point remainder of \\\u003cem\u003e\\_\\_x / \\_\\_y\\\u003c/em\u003e."},"sortText":"403f858bfmod","filterText":"fmod","insertText":"fmod(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmod(${1:double __x}, ${2:double __y})"}},{"label":" free(void *__ptr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The free() function causes the allocated memory referenced by \\\\c ptr to be made available for future allocations. If \\\\c ptr is NULL, no action occurs."},"sortText":"403f858bfree","filterText":"free","insertText":"free(${1:void *__ptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"free(${1:void *__ptr})"}},{"label":" frexp(double __x, int *__pexp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The frexp() function breaks a floating-point number into a normalized fraction and an integral power of 2. It stores the integer in the \\\\c int object pointed to by \\\\a \\_\\_pexp.  \nIf \\\\a \\_\\_x is a normal float point number, the frexp() function returns the value \\\\c v, such that \\\\c v has a magnitude in the interval [1/2, 1) or zero, and \\\\a \\_\\_x equals \\\\c v times 2 raised to the power \\\\a \\_\\_pexp. If \\\\a \\_\\_x is zero, both parts of the result are zero. If \\\\a \\_\\_x is not a finite number, the frexp() returns \\\\a \\_\\_x as is and stores 0 by \\\\a \\_\\_pexp.  \n\\\\note This implementation permits a zero pointer as a directive to skip a storing the exponent."},"sortText":"403f858bfrexp","filterText":"frexp","insertText":"frexp(${1:double __x}, ${2:int *__pexp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexp(${1:double __x}, ${2:int *__pexp})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40400000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INTERNAL"}},{"label":"•F(string_literal)","kind":1,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`"},"sortText":"4051050aF","filterText":"F","insertText":"F(${1:string_literal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F(${1:string_literal})"}},{"label":"•FORWARD_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fFORWARD_HUES","filterText":"FORWARD_HUES","insertText":"FORWARD_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FORWARD_HUES"}},{"label":" ForestColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Forest colors, greens"},"sortText":"4068a03fForestColors_p","filterText":"ForestColors_p","insertText":"ForestColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ForestColors_p"}},{"label":"•FullSpectrumFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 244, 242"},"sortText":"4068a03fFullSpectrumFluorescent","filterText":"FullSpectrumFluorescent","insertText":"FullSpectrumFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FullSpectrumFluorescent"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" fclose(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"This function closes \\\\c stream, and disallows and further IO to and from it.  \nWhen using fdevopen() to setup the stream, a call to fclose() is needed in order to free the internal resources allocated.  \nIf the stream has been set up using fdev_setup_stream() or FDEV_SETUP_STREAM(), use fdev_close() instead.  \nIt currently always returns 0 (for success)."},"sortText":"4068a03ffclose","filterText":"fclose","insertText":"fclose(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fclose(${1:FILE *__stream})"}},{"label":" fdevopen(int (*__put)(char, FILE *), int (*__get)(FILE *))","kind":3,"detail":"FILE *","documentation":{"kind":"markdown","value":"New prototype for avr-libc 1.4 and above."},"sortText":"4068a03ffdevopen","filterText":"fdevopen","insertText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})"}},{"label":" fdopen(int, const char *)","kind":3,"detail":"FILE *","sortText":"4068a03ffdopen","filterText":"fdopen","insertText":"fdopen(${1:int}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdopen(${1:int}, ${2:const char *})"}},{"label":" feof(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the end-of-file flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03ffeof","filterText":"feof","insertText":"feof(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"feof(${1:FILE *__stream})"}},{"label":" ferror(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the error flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03fferror","filterText":"ferror","insertText":"ferror(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ferror(${1:FILE *__stream})"}},{"label":" fflush(FILE *stream)","kind":3,"detail":"int","sortText":"4068a03ffflush","filterText":"fflush","insertText":"fflush(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fflush(${1:FILE *stream})"}},{"label":" fgetc(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fgetc reads a character from \\\\c stream. It returns the character, or \\\\c EOF in case end-of-file was encountered or an error occurred. The routines feof() or ferror() must be used to distinguish between both situations."},"sortText":"4068a03ffgetc","filterText":"fgetc","insertText":"fgetc(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetc(${1:FILE *__stream})"}},{"label":" fgetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffgetpos","filterText":"fgetpos","insertText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" fgets(char *__str, int __size, FILE *__stream)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"Read at most \\\u003ctt\u003esize - 1\\\u003c/tt\u003e bytes from \\\\c stream, until a newline character was encountered, and store the characters in the buffer pointed to by \\\\c str. Unless an error was encountered while reading, the string will then be terminated with a \\\\c NUL character.  \nIf an error was encountered, the function returns NULL and sets the error flag of \\\\c stream, which can be tested using ferror().  \nOtherwise, a pointer to the string will be returned."},"sortText":"4068a03ffgets","filterText":"fgets","insertText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})"}},{"label":" fileno(FILE *)","kind":3,"detail":"int","sortText":"4068a03ffileno","filterText":"fileno","insertText":"fileno(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fileno(${1:FILE *})"}},{"label":"•fill_2dnoise16(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint32_t x, int xscale, uint32_t y, int yscale, uint32_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend, uint16_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise16","filterText":"fill_2dnoise16","insertText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_2dnoise8(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint16_t x, int xscale, uint16_t y, int yscale, uint16_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise8","filterText":"fill_2dnoise8","insertText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_gradient(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nConvenience functions to fill an array of colors with a two-color, three-color, or four-color gradient"},"sortText":"4068a03ffill_gradient","filterText":"fill_gradient","insertText":"fill_gradient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient($0)"}},{"label":"•fill_gradient_RGB(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_gradient_RGB - fill a range of LEDs with a smooth RGB gradient between two specified RGB colors.  \nUnlike HSV, there is no 'color wheel' in RGB space,  \nand therefore there's only one 'direction' for the gradient to go, and no 'direction code' is needed."},"sortText":"4068a03ffill_gradient_RGB","filterText":"fill_gradient_RGB","insertText":"fill_gradient_RGB($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient_RGB($0)"}},{"label":"•fill_noise16(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time, uint8_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_noise16","filterText":"fill_noise16","insertText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_noise8(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name fill functions  \n@{ fill functions to fill leds with values based on noise functions. These functions use the fill_raw\\_\\* functions as appropriate."},"sortText":"4068a03ffill_noise8","filterText":"fill_noise8","insertText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_palette(CRGB *L, uint16_t N, uint8_t startIndex, uint8_t incIndex, const PALETTE \u0026pal, uint8_t brightness, TBlendType blendType)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nFill a range of LEDs with a sequece of entryies from a palette"},"sortText":"4068a03ffill_palette","filterText":"fill_palette","insertText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})"}},{"label":"•fill_rainbow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_rainbow - fill a range of LEDs with a rainbow of colors, at full saturation and full value (brightness)"},"sortText":"4068a03ffill_rainbow","filterText":"fill_rainbow","insertText":"fill_rainbow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_rainbow($0)"}},{"label":"•fill_raw_2dnoise16(uint16_t *pData, int width, int height, uint8_t octaves, q88 freq88, fract16 amplitude, int skip, uint32_t x, int scalex, uint32_t y, int scaley, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16","filterText":"fill_raw_2dnoise16","insertText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})"}},{"label":"•fill_raw_2dnoise16into8(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16into8","filterText":"fill_raw_2dnoise16into8","insertText":"fill_raw_2dnoise16into8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16into8($0)"}},{"label":"•fill_raw_2dnoise8(uint8_t *pData, int width, int height, uint8_t octaves, uint16_t x, int scalex, uint16_t y, int scaley, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise8","filterText":"fill_raw_2dnoise8","insertText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})"}},{"label":"•fill_raw_noise16into8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint32_t x, int scalex, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_noise16into8","filterText":"fill_raw_noise16into8","insertText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})"}},{"label":"•fill_raw_noise8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint16_t x, int scalex, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw fill functions  \n@{ Raw noise fill functions - fill into a 1d or 2d array of 8-bit values using either 8-bit noise or 16-bit noise functions.  \n@param pData the array of data to write into  \n@param num_points the number of points of noise to compute  \n@param octaves the number of octaves to use for noise  \n@param x the x position in the noise field  \n@param y the y position in the noise field for 2d functions  \n@param scalex the scale (distance) between x points when filling in noise  \n@param scaley the scale (distance) between y points when filling in noise  \n@param time the time position for the noise field"},"sortText":"4068a03ffill_raw_noise8","filterText":"fill_raw_noise8","insertText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})"}},{"label":"•fill_solid(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_solid - fill a range of LEDs with a solid color Example: fill_solid( leds, NUM_LEDS, CRGB(50,0,200));"},"sortText":"4068a03ffill_solid","filterText":"fill_solid","insertText":"fill_solid($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_solid($0)"}},{"label":" floatToSfract15(float f)","kind":3,"detail":"sfract15","documentation":{"kind":"markdown","value":"conversion from IEEE754 float in the range (-1,1) to 16-bit fixed point. Note that the extremes of one and negative one are NOT representable. The representable range is basically"},"sortText":"4068a03ffloatToSfract15","filterText":"floatToSfract15","insertText":"floatToSfract15(${1:float f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floatToSfract15(${1:float f})"}},{"label":" fopen(const char *path, const char *mode)","kind":3,"detail":"FILE *","sortText":"4068a03ffopen","filterText":"fopen","insertText":"fopen(${1:const char *path}, ${2:const char *mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fopen(${1:const char *path}, ${2:const char *mode})"}},{"label":" fpos_t","kind":8,"sortText":"4068a03ffpos_t","filterText":"fpos_t","insertText":"fpos_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fpos_t"}},{"label":" fprintf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fprintf performs formatted output to \\\\c stream.  \nSee \\\\c vfprintf() for details."},"sortText":"4068a03ffprintf","filterText":"fprintf","insertText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fprintf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c fprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03ffprintf_P","filterText":"fprintf_P","insertText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fputc(int __c, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fputc sends the character \\\\c c (though given as type  \n\\\\c int) to \\\\c stream. It returns the character, or \\\\c EOF in case an error occurred."},"sortText":"4068a03ffputc","filterText":"fputc","insertText":"fputc(${1:int __c}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputc(${1:int __c}, ${2:FILE *__stream})"}},{"label":" fputs(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Write the string pointed to by \\\\c str to stream \\\\c stream.  \nReturns 0 on success and EOF on error."},"sortText":"4068a03ffputs","filterText":"fputs","insertText":"fputs(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fputs_P(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fputs() where \\\\c str resides in program memory."},"sortText":"4068a03ffputs_P","filterText":"fputs_P","insertText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fread(void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Read \\\\c nmemb objects, \\\\c size bytes each, from \\\\c stream,  \nto the buffer pointed to by \\\\c ptr.  \nReturns the number of objects successfully read, i. e.  \n\\\\c nmemb unless an input error occured or end-of-file was encountered. feof() and ferror() must be used to distinguish between these two conditions."},"sortText":"4068a03ffread","filterText":"fread","insertText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" freopen(const char *path, const char *mode, FILE *stream)","kind":3,"detail":"FILE *","sortText":"4068a03ffreopen","filterText":"freopen","insertText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})"}},{"label":" fscanf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fscanf performs formatted input, reading the input data from \\\\c stream.  \nSee vfscanf() for details."},"sortText":"4068a03ffscanf","filterText":"fscanf","insertText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fscanf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fscanf() using a \\\\c fmt string in program memory."},"sortText":"4068a03ffscanf_P","filterText":"fscanf_P","insertText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fseek(FILE *stream, long offset, int whence)","kind":3,"detail":"int","sortText":"4068a03ffseek","filterText":"fseek","insertText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})"}},{"label":" fsetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffsetpos","filterText":"fsetpos","insertText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" ftell(FILE *stream)","kind":3,"detail":"long","sortText":"4068a03fftell","filterText":"ftell","insertText":"ftell(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ftell(${1:FILE *stream})"}},{"label":" fwrite(const void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Write \\\\c nmemb objects, \\\\c size bytes each, to \\\\c stream.  \nThe first byte of the first object is referenced by \\\\c ptr.  \nReturns the number of objects successfully written, i. e.  \n\\\\c nmemb unless an output error occured."},"sortText":"4068a03ffwrite","filterText":"fwrite","insertText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" F_CPU","kind":1,"sortText":"40800000F_CPU","filterText":"F_CPU","insertText":"F_CPU","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F_CPU"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40b194b3FASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabsf"}},{"label":" fdimf","kind":1,"sortText":"40d1050afdimf","filterText":"fdimf","insertText":"fdimf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdimf"}},{"label":" floorf","kind":1,"sortText":"40d1050afloorf","filterText":"floorf","insertText":"floorf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floorf"}},{"label":" fmaf","kind":1,"sortText":"40d1050afmaf","filterText":"fmaf","insertText":"fmaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaf"}},{"label":" fmaxf","kind":1,"sortText":"40d1050afmaxf","filterText":"fmaxf","insertText":"fmaxf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaxf"}},{"label":" fminf","kind":1,"sortText":"40d1050afminf","filterText":"fminf","insertText":"fminf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fminf"}},{"label":" fmodf","kind":1,"sortText":"40d1050afmodf","filterText":"fmodf","insertText":"fmodf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmodf"}},{"label":" frexpf","kind":1,"sortText":"40d1050afrexpf","filterText":"frexpf","insertText":"frexpf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexpf"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FALLING"}},{"label":" FE0","kind":1,"sortText":"40ec52eaFE0","filterText":"FE0","insertText":"FE0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FE0"}},{"label":" FLASHEND","kind":1,"sortText":"40ec52eaFLASHEND","filterText":"FLASHEND","insertText":"FLASHEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FLASHEND"}},{"label":" FOC0A","kind":1,"sortText":"40ec52eaFOC0A","filterText":"FOC0A","insertText":"FOC0A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0A"}},{"label":" FOC0B","kind":1,"sortText":"40ec52eaFOC0B","filterText":"FOC0B","insertText":"FOC0B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0B"}},{"label":" FOC1A","kind":1,"sortText":"40ec52eaFOC1A","filterText":"FOC1A","insertText":"FOC1A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1A"}},{"label":" FOC1B","kind":1,"sortText":"40ec52eaFOC1B","filterText":"FOC1B","insertText":"FOC1B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1B"}},{"label":" FOC2A","kind":1,"sortText":"40ec52eaFOC2A","filterText":"FOC2A","insertText":"FOC2A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2A"}},{"label":" FOC2B","kind":1,"sortText":"40ec52eaFOC2B","filterText":"FOC2B","insertText":"FOC2B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2B"}},{"label":" FUSE_BODLEVEL0","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL0","filterText":"FUSE_BODLEVEL0","insertText":"FUSE_BODLEVEL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL0"}},{"label":" FUSE_BODLEVEL1","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL1","filterText":"FUSE_BODLEVEL1","insertText":"FUSE_BODLEVEL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL1"}},{"label":" FUSE_BODLEVEL2","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL2","filterText":"FUSE_BODLEVEL2","insertText":"FUSE_BODLEVEL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL2"}},{"label":" FUSE_BOOTRST","kind":1,"sortText":"40ec52eaFUSE_BOOTRST","filterText":"FUSE_BOOTRST","insertText":"FUSE_BOOTRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTRST"}},{"label":" FUSE_BOOTSZ0","kind":1,"sortText":"40ec52eaFUSE_BOOTSZ0","filterText":"FUSE_BOOTSZ0","insertText":"FUSE_BOOTSZ0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTSZ0"}}]},"jsonrpc":"2.0"}Content-Length: 1069

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'f'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":114,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":35},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":115,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":116,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":35}}}Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":36},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3340

{"id":117,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":118,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":36}}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":37},"contentChanges":[{"range":{"start":{"line":95,"character":0},"end":{"line":95,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3340

{"id":119,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":38},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":95,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":120,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":38}}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":39},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"rangeLength":0,"text":"F"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1085

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'F' (fix available)"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":122,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":123,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 47712

{"id":123,"result":{"isIncomplete":true,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastLED"}},{"label":" fract8","kind":8,"documentation":{"kind":"markdown","value":"ANSI unsigned short \\_Fract. range is 0 to 0.99609375 in steps of 0.00390625"},"sortText":"3eff2eb1fract8","filterText":"fract8","insertText":"fract8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract8"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"false"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"float"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" FILE","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\c FILE is the opaque structure that is passed around between the various standard IO functions."},"sortText":"3f17ae13FILE","filterText":"FILE","insertText":"FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FILE"}},{"label":" fract16","kind":8,"documentation":{"kind":"markdown","value":"ANSI: unsigned \\_Fract. range is 0 to 0.99998474121 in steps of 0.00001525878"},"sortText":"3f17ae13fract16","filterText":"fract16","insertText":"fract16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract16"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabs(${1:double __x})"}},{"label":" fdim(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fdim() function returns \\\u003cem\u003emax(\\_\\_x - \\_\\_y, 0)\\\u003c/em\u003e. If \\\\a \\_\\_x or  \n\\\\a \\_\\_y or both are NaN, NaN is returned."},"sortText":"403f858bfdim","filterText":"fdim","insertText":"fdim(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdim(${1:double __x}, ${2:double __y})"}},{"label":" ffs(int __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffs(int val);  \n\\\\brief This function finds the first (least significant) bit set in the input value.  \n\\\\returns The ffs() function returns the position of the first (least significant) bit set in the word val, or 0 if no bits are set.  \nThe least significant bit is position 1.  \n\\\\note For expressions that are constant at compile time, consider using the \\\\ref \\_FFS macro instead."},"sortText":"403f858bffs","filterText":"ffs","insertText":"ffs(${1:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffs(${1:int __val})"}},{"label":" ffsl(long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsl(long val);  \n\\\\brief Same as ffs(), for an argument of type long."},"sortText":"403f858bffsl","filterText":"ffsl","insertText":"ffsl(${1:long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsl(${1:long __val})"}},{"label":" ffsll(long long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsll(long long val);  \n\\\\brief Same as ffs(), for an argument of type long long."},"sortText":"403f858bffsll","filterText":"ffsll","insertText":"ffsll(${1:long long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsll(${1:long long __val})"}},{"label":" floor(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The floor() function returns the largest integral value less than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"403f858bfloor","filterText":"floor","insertText":"floor(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floor(${1:double __x})"}},{"label":" fma(double __x, double __y, double __z)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fma() function performs floating-point multiply-add. This is the operation \\\u003cem\u003e(\\_\\_x * \\_\\_y) + \\_\\_z\\\u003c/em\u003e, but the intermediate result is not rounded to the destination type. This can sometimes improve the precision of a calculation."},"sortText":"403f858bfma","filterText":"fma","insertText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})"}},{"label":" fmax(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmax() function returns the greater of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmax","filterText":"fmax","insertText":"fmax(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmax(${1:double __x}, ${2:double __y})"}},{"label":" fmin(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmin() function returns the lesser of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmin","filterText":"fmin","insertText":"fmin(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmin(${1:double __x}, ${2:double __y})"}},{"label":" fmod(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function fmod() returns the floating-point remainder of \\\u003cem\u003e\\_\\_x / \\_\\_y\\\u003c/em\u003e."},"sortText":"403f858bfmod","filterText":"fmod","insertText":"fmod(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmod(${1:double __x}, ${2:double __y})"}},{"label":" free(void *__ptr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The free() function causes the allocated memory referenced by \\\\c ptr to be made available for future allocations. If \\\\c ptr is NULL, no action occurs."},"sortText":"403f858bfree","filterText":"free","insertText":"free(${1:void *__ptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"free(${1:void *__ptr})"}},{"label":" frexp(double __x, int *__pexp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The frexp() function breaks a floating-point number into a normalized fraction and an integral power of 2. It stores the integer in the \\\\c int object pointed to by \\\\a \\_\\_pexp.  \nIf \\\\a \\_\\_x is a normal float point number, the frexp() function returns the value \\\\c v, such that \\\\c v has a magnitude in the interval [1/2, 1) or zero, and \\\\a \\_\\_x equals \\\\c v times 2 raised to the power \\\\a \\_\\_pexp. If \\\\a \\_\\_x is zero, both parts of the result are zero. If \\\\a \\_\\_x is not a finite number, the frexp() returns \\\\a \\_\\_x as is and stores 0 by \\\\a \\_\\_pexp.  \n\\\\note This implementation permits a zero pointer as a directive to skip a storing the exponent."},"sortText":"403f858bfrexp","filterText":"frexp","insertText":"frexp(${1:double __x}, ${2:int *__pexp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexp(${1:double __x}, ${2:int *__pexp})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40400000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INTERNAL"}},{"label":"•F(string_literal)","kind":1,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`"},"sortText":"4051050aF","filterText":"F","insertText":"F(${1:string_literal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F(${1:string_literal})"}},{"label":"•FORWARD_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fFORWARD_HUES","filterText":"FORWARD_HUES","insertText":"FORWARD_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FORWARD_HUES"}},{"label":" ForestColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Forest colors, greens"},"sortText":"4068a03fForestColors_p","filterText":"ForestColors_p","insertText":"ForestColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ForestColors_p"}},{"label":"•FullSpectrumFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 244, 242"},"sortText":"4068a03fFullSpectrumFluorescent","filterText":"FullSpectrumFluorescent","insertText":"FullSpectrumFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FullSpectrumFluorescent"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" fclose(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"This function closes \\\\c stream, and disallows and further IO to and from it.  \nWhen using fdevopen() to setup the stream, a call to fclose() is needed in order to free the internal resources allocated.  \nIf the stream has been set up using fdev_setup_stream() or FDEV_SETUP_STREAM(), use fdev_close() instead.  \nIt currently always returns 0 (for success)."},"sortText":"4068a03ffclose","filterText":"fclose","insertText":"fclose(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fclose(${1:FILE *__stream})"}},{"label":" fdevopen(int (*__put)(char, FILE *), int (*__get)(FILE *))","kind":3,"detail":"FILE *","documentation":{"kind":"markdown","value":"New prototype for avr-libc 1.4 and above."},"sortText":"4068a03ffdevopen","filterText":"fdevopen","insertText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})"}},{"label":" fdopen(int, const char *)","kind":3,"detail":"FILE *","sortText":"4068a03ffdopen","filterText":"fdopen","insertText":"fdopen(${1:int}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdopen(${1:int}, ${2:const char *})"}},{"label":" feof(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the end-of-file flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03ffeof","filterText":"feof","insertText":"feof(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"feof(${1:FILE *__stream})"}},{"label":" ferror(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the error flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03fferror","filterText":"ferror","insertText":"ferror(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ferror(${1:FILE *__stream})"}},{"label":" fflush(FILE *stream)","kind":3,"detail":"int","sortText":"4068a03ffflush","filterText":"fflush","insertText":"fflush(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fflush(${1:FILE *stream})"}},{"label":" fgetc(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fgetc reads a character from \\\\c stream. It returns the character, or \\\\c EOF in case end-of-file was encountered or an error occurred. The routines feof() or ferror() must be used to distinguish between both situations."},"sortText":"4068a03ffgetc","filterText":"fgetc","insertText":"fgetc(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetc(${1:FILE *__stream})"}},{"label":" fgetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffgetpos","filterText":"fgetpos","insertText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" fgets(char *__str, int __size, FILE *__stream)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"Read at most \\\u003ctt\u003esize - 1\\\u003c/tt\u003e bytes from \\\\c stream, until a newline character was encountered, and store the characters in the buffer pointed to by \\\\c str. Unless an error was encountered while reading, the string will then be terminated with a \\\\c NUL character.  \nIf an error was encountered, the function returns NULL and sets the error flag of \\\\c stream, which can be tested using ferror().  \nOtherwise, a pointer to the string will be returned."},"sortText":"4068a03ffgets","filterText":"fgets","insertText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})"}},{"label":" fileno(FILE *)","kind":3,"detail":"int","sortText":"4068a03ffileno","filterText":"fileno","insertText":"fileno(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fileno(${1:FILE *})"}},{"label":"•fill_2dnoise16(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint32_t x, int xscale, uint32_t y, int yscale, uint32_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend, uint16_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise16","filterText":"fill_2dnoise16","insertText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_2dnoise8(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint16_t x, int xscale, uint16_t y, int yscale, uint16_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise8","filterText":"fill_2dnoise8","insertText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_gradient(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nConvenience functions to fill an array of colors with a two-color, three-color, or four-color gradient"},"sortText":"4068a03ffill_gradient","filterText":"fill_gradient","insertText":"fill_gradient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient($0)"}},{"label":"•fill_gradient_RGB(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_gradient_RGB - fill a range of LEDs with a smooth RGB gradient between two specified RGB colors.  \nUnlike HSV, there is no 'color wheel' in RGB space,  \nand therefore there's only one 'direction' for the gradient to go, and no 'direction code' is needed."},"sortText":"4068a03ffill_gradient_RGB","filterText":"fill_gradient_RGB","insertText":"fill_gradient_RGB($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient_RGB($0)"}},{"label":"•fill_noise16(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time, uint8_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_noise16","filterText":"fill_noise16","insertText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_noise8(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name fill functions  \n@{ fill functions to fill leds with values based on noise functions. These functions use the fill_raw\\_\\* functions as appropriate."},"sortText":"4068a03ffill_noise8","filterText":"fill_noise8","insertText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_palette(CRGB *L, uint16_t N, uint8_t startIndex, uint8_t incIndex, const PALETTE \u0026pal, uint8_t brightness, TBlendType blendType)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nFill a range of LEDs with a sequece of entryies from a palette"},"sortText":"4068a03ffill_palette","filterText":"fill_palette","insertText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})"}},{"label":"•fill_rainbow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_rainbow - fill a range of LEDs with a rainbow of colors, at full saturation and full value (brightness)"},"sortText":"4068a03ffill_rainbow","filterText":"fill_rainbow","insertText":"fill_rainbow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_rainbow($0)"}},{"label":"•fill_raw_2dnoise16(uint16_t *pData, int width, int height, uint8_t octaves, q88 freq88, fract16 amplitude, int skip, uint32_t x, int scalex, uint32_t y, int scaley, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16","filterText":"fill_raw_2dnoise16","insertText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})"}},{"label":"•fill_raw_2dnoise16into8(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16into8","filterText":"fill_raw_2dnoise16into8","insertText":"fill_raw_2dnoise16into8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16into8($0)"}},{"label":"•fill_raw_2dnoise8(uint8_t *pData, int width, int height, uint8_t octaves, uint16_t x, int scalex, uint16_t y, int scaley, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise8","filterText":"fill_raw_2dnoise8","insertText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})"}},{"label":"•fill_raw_noise16into8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint32_t x, int scalex, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_noise16into8","filterText":"fill_raw_noise16into8","insertText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})"}},{"label":"•fill_raw_noise8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint16_t x, int scalex, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw fill functions  \n@{ Raw noise fill functions - fill into a 1d or 2d array of 8-bit values using either 8-bit noise or 16-bit noise functions.  \n@param pData the array of data to write into  \n@param num_points the number of points of noise to compute  \n@param octaves the number of octaves to use for noise  \n@param x the x position in the noise field  \n@param y the y position in the noise field for 2d functions  \n@param scalex the scale (distance) between x points when filling in noise  \n@param scaley the scale (distance) between y points when filling in noise  \n@param time the time position for the noise field"},"sortText":"4068a03ffill_raw_noise8","filterText":"fill_raw_noise8","insertText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})"}},{"label":"•fill_solid(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_solid - fill a range of LEDs with a solid color Example: fill_solid( leds, NUM_LEDS, CRGB(50,0,200));"},"sortText":"4068a03ffill_solid","filterText":"fill_solid","insertText":"fill_solid($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_solid($0)"}},{"label":" floatToSfract15(float f)","kind":3,"detail":"sfract15","documentation":{"kind":"markdown","value":"conversion from IEEE754 float in the range (-1,1) to 16-bit fixed point. Note that the extremes of one and negative one are NOT representable. The representable range is basically"},"sortText":"4068a03ffloatToSfract15","filterText":"floatToSfract15","insertText":"floatToSfract15(${1:float f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floatToSfract15(${1:float f})"}},{"label":" fopen(const char *path, const char *mode)","kind":3,"detail":"FILE *","sortText":"4068a03ffopen","filterText":"fopen","insertText":"fopen(${1:const char *path}, ${2:const char *mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fopen(${1:const char *path}, ${2:const char *mode})"}},{"label":" fpos_t","kind":8,"sortText":"4068a03ffpos_t","filterText":"fpos_t","insertText":"fpos_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fpos_t"}},{"label":" fprintf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fprintf performs formatted output to \\\\c stream.  \nSee \\\\c vfprintf() for details."},"sortText":"4068a03ffprintf","filterText":"fprintf","insertText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fprintf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c fprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03ffprintf_P","filterText":"fprintf_P","insertText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fputc(int __c, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fputc sends the character \\\\c c (though given as type  \n\\\\c int) to \\\\c stream. It returns the character, or \\\\c EOF in case an error occurred."},"sortText":"4068a03ffputc","filterText":"fputc","insertText":"fputc(${1:int __c}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputc(${1:int __c}, ${2:FILE *__stream})"}},{"label":" fputs(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Write the string pointed to by \\\\c str to stream \\\\c stream.  \nReturns 0 on success and EOF on error."},"sortText":"4068a03ffputs","filterText":"fputs","insertText":"fputs(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fputs_P(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fputs() where \\\\c str resides in program memory."},"sortText":"4068a03ffputs_P","filterText":"fputs_P","insertText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fread(void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Read \\\\c nmemb objects, \\\\c size bytes each, from \\\\c stream,  \nto the buffer pointed to by \\\\c ptr.  \nReturns the number of objects successfully read, i. e.  \n\\\\c nmemb unless an input error occured or end-of-file was encountered. feof() and ferror() must be used to distinguish between these two conditions."},"sortText":"4068a03ffread","filterText":"fread","insertText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" freopen(const char *path, const char *mode, FILE *stream)","kind":3,"detail":"FILE *","sortText":"4068a03ffreopen","filterText":"freopen","insertText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})"}},{"label":" fscanf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fscanf performs formatted input, reading the input data from \\\\c stream.  \nSee vfscanf() for details."},"sortText":"4068a03ffscanf","filterText":"fscanf","insertText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fscanf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fscanf() using a \\\\c fmt string in program memory."},"sortText":"4068a03ffscanf_P","filterText":"fscanf_P","insertText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fseek(FILE *stream, long offset, int whence)","kind":3,"detail":"int","sortText":"4068a03ffseek","filterText":"fseek","insertText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})"}},{"label":" fsetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffsetpos","filterText":"fsetpos","insertText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" ftell(FILE *stream)","kind":3,"detail":"long","sortText":"4068a03fftell","filterText":"ftell","insertText":"ftell(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ftell(${1:FILE *stream})"}},{"label":" fwrite(const void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Write \\\\c nmemb objects, \\\\c size bytes each, to \\\\c stream.  \nThe first byte of the first object is referenced by \\\\c ptr.  \nReturns the number of objects successfully written, i. e.  \n\\\\c nmemb unless an output error occured."},"sortText":"4068a03ffwrite","filterText":"fwrite","insertText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" F_CPU","kind":1,"sortText":"40800000F_CPU","filterText":"F_CPU","insertText":"F_CPU","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F_CPU"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40b194b3FASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabsf"}},{"label":" fdimf","kind":1,"sortText":"40d1050afdimf","filterText":"fdimf","insertText":"fdimf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdimf"}},{"label":" floorf","kind":1,"sortText":"40d1050afloorf","filterText":"floorf","insertText":"floorf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floorf"}},{"label":" fmaf","kind":1,"sortText":"40d1050afmaf","filterText":"fmaf","insertText":"fmaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaf"}},{"label":" fmaxf","kind":1,"sortText":"40d1050afmaxf","filterText":"fmaxf","insertText":"fmaxf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaxf"}},{"label":" fminf","kind":1,"sortText":"40d1050afminf","filterText":"fminf","insertText":"fminf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fminf"}},{"label":" fmodf","kind":1,"sortText":"40d1050afmodf","filterText":"fmodf","insertText":"fmodf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmodf"}},{"label":" frexpf","kind":1,"sortText":"40d1050afrexpf","filterText":"frexpf","insertText":"frexpf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexpf"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FALLING"}},{"label":" FE0","kind":1,"sortText":"40ec52eaFE0","filterText":"FE0","insertText":"FE0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FE0"}},{"label":" FLASHEND","kind":1,"sortText":"40ec52eaFLASHEND","filterText":"FLASHEND","insertText":"FLASHEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FLASHEND"}},{"label":" FOC0A","kind":1,"sortText":"40ec52eaFOC0A","filterText":"FOC0A","insertText":"FOC0A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0A"}},{"label":" FOC0B","kind":1,"sortText":"40ec52eaFOC0B","filterText":"FOC0B","insertText":"FOC0B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0B"}},{"label":" FOC1A","kind":1,"sortText":"40ec52eaFOC1A","filterText":"FOC1A","insertText":"FOC1A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1A"}},{"label":" FOC1B","kind":1,"sortText":"40ec52eaFOC1B","filterText":"FOC1B","insertText":"FOC1B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1B"}},{"label":" FOC2A","kind":1,"sortText":"40ec52eaFOC2A","filterText":"FOC2A","insertText":"FOC2A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2A"}},{"label":" FOC2B","kind":1,"sortText":"40ec52eaFOC2B","filterText":"FOC2B","insertText":"FOC2B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2B"}},{"label":" FUSE_BODLEVEL0","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL0","filterText":"FUSE_BODLEVEL0","insertText":"FUSE_BODLEVEL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL0"}},{"label":" FUSE_BODLEVEL1","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL1","filterText":"FUSE_BODLEVEL1","insertText":"FUSE_BODLEVEL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL1"}},{"label":" FUSE_BODLEVEL2","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL2","filterText":"FUSE_BODLEVEL2","insertText":"FUSE_BODLEVEL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL2"}},{"label":" FUSE_BOOTRST","kind":1,"sortText":"40ec52eaFUSE_BOOTRST","filterText":"FUSE_BOOTRST","insertText":"FUSE_BOOTRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTRST"}},{"label":" FUSE_BOOTSZ0","kind":1,"sortText":"40ec52eaFUSE_BOOTSZ0","filterText":"FUSE_BOOTSZ0","insertText":"FUSE_BOOTSZ0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTSZ0"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":40},"contentChanges":[{"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":3}},"rangeLength":0,"text":"a"}]}}Content-Length: 232

{"jsonrpc":"2.0","id":124,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":4},"context":{"triggerKind":3}}}Content-Length: 171

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 13806

{"id":124,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastLED"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"false"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" CFastLED","kind":7,"sortText":"3fd1c28eCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3fe19999CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"CFastLED()"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fabs(${1:double __x})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40580000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INTERNAL"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" FastSPI_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED","filterText":"FastSPI_LED","insertText":"FastSPI_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastSPI_LED"}},{"label":" FastSPI_LED2","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED2","filterText":"FastSPI_LED2","insertText":"FastSPI_LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastSPI_LED2"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40be2cd4FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40cb621cFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fabsf"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d6327bFASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d6327bFASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40df0d07FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40df0d07FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40fec88dFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FALLING"}}]},"jsonrpc":"2.0"}Content-Length: 1070

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Fa'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":125,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":126,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":41},"contentChanges":[{"range":{"start":{"line":94,"character":4},"end":{"line":94,"character":4}},"rangeLength":0,"text":"s"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1071

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Fas'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":127,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":42},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":5}},"rangeLength":0,"text":"t"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Fast'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":128,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":129,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":43},"contentChanges":[{"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":6}},"rangeLength":0,"text":"L"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1073

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'FastL'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":130,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":44},"contentChanges":[{"range":{"start":{"line":94,"character":7},"end":{"line":94,"character":7}},"rangeLength":0,"text":"E"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":132,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1245

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'FastLE'; did you mean 'FastLED'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\FastLED.h:581:17:\nnote: 'FastLED' declared here"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":132,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":133,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":45},"contentChanges":[{"range":{"start":{"line":94,"character":8},"end":{"line":94,"character":8}},"rangeLength":0,"text":"D"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 895

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":134,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":9},"end":{"line":94,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":135,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":136,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":45}}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":46},"contentChanges":[{"range":{"start":{"line":94,"character":9},"end":{"line":94,"character":9}},"rangeLength":0,"text":"."}]}}Content-Length: 256

{"jsonrpc":"2.0","id":137,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":10},"context":{"triggerKind":2,"triggerCharacter":"."}}}Content-Length: 171

{"jsonrpc":"2.0","id":138,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 6007

{"id":137,"result":{"isIncomplete":false,"items":[{"label":" addLeds(…)","kind":2,"detail":"[12 overloads]","sortText":"3e7dffd9addLeds","filterText":"addLeds","insertText":"addLeds($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"addLeds($0)"}},{"label":" setBrightness(uint8_t scale)","kind":2,"detail":"void","sortText":"3e7dffd9setBrightness","filterText":"setBrightness","insertText":"setBrightness(${1:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setBrightness(${1:uint8_t scale})"}},{"label":" getBrightness()","kind":2,"detail":"uint8_t","sortText":"3e97ae13getBrightness","filterText":"getBrightness","insertText":"getBrightness()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"getBrightness()"}},{"label":" leds()","kind":2,"detail":"CRGB *","sortText":"3e97ae13leds","filterText":"leds","insertText":"leds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"leds()"}},{"label":" show(…)","kind":2,"detail":"[2 overloads]","sortText":"3eacc437show","filterText":"show","insertText":"show($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"show($0)"}},{"label":" clear(bool writeData = false)","kind":2,"detail":"void","sortText":"3ee51eb8clear","filterText":"clear","insertText":"clear()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"clear()"}},{"label":" clearData()","kind":2,"detail":"void","sortText":"3ee51eb8clearData","filterText":"clearData","insertText":"clearData()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"clearData()"}},{"label":" count()","kind":2,"detail":"int","sortText":"3ee51eb8count","filterText":"count","insertText":"count()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"count()"}},{"label":" countFPS(int nFrames = 25)","kind":2,"detail":"void","sortText":"3ee51eb8countFPS","filterText":"countFPS","insertText":"countFPS()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"countFPS()"}},{"label":" delay(unsigned long ms)","kind":2,"detail":"void","sortText":"3ee51eb8delay","filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"delay(${1:unsigned long ms})"}},{"label":" getFPS()","kind":2,"detail":"uint16_t","sortText":"3ee51eb8getFPS","filterText":"getFPS","insertText":"getFPS()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"getFPS()"}},{"label":" setCorrection(const struct CRGB \u0026correction)","kind":2,"detail":"void","sortText":"3ee51eb8setCorrection","filterText":"setCorrection","insertText":"setCorrection(${1:const struct CRGB \u0026correction})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setCorrection(${1:const struct CRGB \u0026correction})"}},{"label":" setDither(uint8_t ditherMode)","kind":2,"detail":"void","sortText":"3ee51eb8setDither","filterText":"setDither","insertText":"setDither()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setDither()"}},{"label":" setMaxPowerInMilliWatts(uint32_t milliwatts)","kind":2,"detail":"void","sortText":"3ee51eb8setMaxPowerInMilliWatts","filterText":"setMaxPowerInMilliWatts","insertText":"setMaxPowerInMilliWatts(${1:uint32_t milliwatts})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setMaxPowerInMilliWatts(${1:uint32_t milliwatts})"}},{"label":" setMaxPowerInVoltsAndMilliamps(uint8_t volts, uint32_t milliamps)","kind":2,"detail":"void","sortText":"3ee51eb8setMaxPowerInVoltsAndMilliamps","filterText":"setMaxPowerInVoltsAndMilliamps","insertText":"setMaxPowerInVoltsAndMilliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setMaxPowerInVoltsAndMilliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})"}},{"label":" setMaxRefreshRate(uint16_t refresh, bool constrain = false)","kind":2,"detail":"void","sortText":"3ee51eb8setMaxRefreshRate","filterText":"setMaxRefreshRate","insertText":"setMaxRefreshRate(${1:uint16_t refresh})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setMaxRefreshRate(${1:uint16_t refresh})"}},{"label":" setTemperature(const struct CRGB \u0026temp)","kind":2,"detail":"void","sortText":"3ee51eb8setTemperature","filterText":"setTemperature","insertText":"setTemperature(${1:const struct CRGB \u0026temp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"setTemperature(${1:const struct CRGB \u0026temp})"}},{"label":" showColor(…)","kind":2,"detail":"[2 overloads]","sortText":"3ee51eb8showColor","filterText":"showColor","insertText":"showColor($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"showColor($0)"}},{"label":" size()","kind":2,"detail":"int","sortText":"3ee51eb8size","filterText":"size","insertText":"size()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"newText":"size()"}}]},"jsonrpc":"2.0"}Content-Length: 873

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'Serial' in 'CFastLED'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":138,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":139,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":140,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":46}}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":47},"contentChanges":[{"range":{"start":{"line":94,"character":9},"end":{"line":94,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":141,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":9},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":142,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 8032

{"id":141,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e05f92bFastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FastLED"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"3f30634dCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3f5283a8CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"CFastLED()"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"405b6db6FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_INTERNAL"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40c22174FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cf11bdFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40cf11bdFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cf11bdFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cf11bdFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cf11bdFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cf11bdFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cf11bdFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cf11bdFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d9a99cFASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d9a99cFASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e255e6FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e255e6FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40e255e6FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40e255e6FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e255e6FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e255e6FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":9}},"newText":"FASTLED_USE_PROGMEM"}}]},"jsonrpc":"2.0"}Content-Length: 895

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":142,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":48},"contentChanges":[{"range":{"start":{"line":94,"character":8},"end":{"line":94,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":143,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":8},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":144,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 8032

{"id":143,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e85f92bFastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FastLED"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"3f37e8f9CFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3f58ccccCFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"CFastLED()"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40600000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_INTERNAL"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40c767a4FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40d3fbeaFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d3fbeaFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d3fbeaFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d3fbeaFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40de4874FASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40de4874FASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40e6b712FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40e6b712FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"newText":"FASTLED_USE_PROGMEM"}}]},"jsonrpc":"2.0"}Content-Length: 1245

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'FastLE'; did you mean 'FastLED'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\FastLED.h:581:17:\nnote: 'FastLED' declared here"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":144,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":49},"contentChanges":[{"range":{"start":{"line":94,"character":7},"end":{"line":94,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":145,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":7},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":146,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 8032

{"id":145,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e85f92bFastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FastLED"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"3f4270ecCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3f619999CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"CFastLED()"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40666666FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_INTERNAL"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40cec9e5FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40dadd5cFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40dadd5cFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40dadd5cFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40dadd5cFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40dadd5cFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40dadd5cFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40dadd5cFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40dadd5cFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40e4c070FASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40e4c070FASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ecd8b5FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ecd8b5FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40ecd8b5FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40ecd8b5FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ecd8b5FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ecd8b5FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"newText":"FASTLED_USE_PROGMEM"}}]},"jsonrpc":"2.0"}Content-Length: 1073

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'FastL'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":146,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":146}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":50},"contentChanges":[{"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":147,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":6},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":148,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 12611

{"id":147,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FastLED"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"3f523cd8CFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3f6eccccCFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"CFastLED()"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"40587adcint_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"40587adcint_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"40587adcint_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"40587adcint_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"int_fast8_t"}},{"label":" uint_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 16 bits."},"sortText":"40587adcuint_fast16_t","filterText":"uint_fast16_t","insertText":"uint_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"uint_fast16_t"}},{"label":" uint_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 32 bits."},"sortText":"40587adcuint_fast32_t","filterText":"uint_fast32_t","insertText":"uint_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"uint_fast32_t"}},{"label":" uint_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"40587adcuint_fast64_t","filterText":"uint_fast64_t","insertText":"uint_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"uint_fast64_t"}},{"label":" uint_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 8 bits."},"sortText":"40587adcuint_fast8_t","filterText":"uint_fast8_t","insertText":"uint_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"uint_fast8_t"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40640000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_INTERNAL"}},{"label":" FastSPI_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED","filterText":"FastSPI_LED","insertText":"FastSPI_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FastSPI_LED"}},{"label":" FastSPI_LED2","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED2","filterText":"FastSPI_LED2","insertText":"FastSPI_LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FastSPI_LED2"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40cc050dFASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d848d1FASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40d848d1FASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d848d1FASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d848d1FASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d848d1FASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d848d1FASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d848d1FASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d848d1FASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40e25372FASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40e25372FASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ea8c18FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ea8c18FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40ea8c18FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40ea8c18FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ea8c18FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40ea8c18FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"FASTLED_USE_PROGMEM"}}]},"jsonrpc":"2.0"}Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Fast'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":148,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":148}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":51},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":149,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":5},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 12611

{"id":149,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FastLED"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"3f6c90b7CFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3f899998CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"CFastLED()"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40600000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_INTERNAL"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"4071dc9aint_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"4071dc9aint_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"4071dc9aint_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"4071dc9aint_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"int_fast8_t"}},{"label":" uint_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 16 bits."},"sortText":"4071dc9auint_fast16_t","filterText":"uint_fast16_t","insertText":"uint_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"uint_fast16_t"}},{"label":" uint_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 32 bits."},"sortText":"4071dc9auint_fast32_t","filterText":"uint_fast32_t","insertText":"uint_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"uint_fast32_t"}},{"label":" uint_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"4071dc9auint_fast64_t","filterText":"uint_fast64_t","insertText":"uint_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"uint_fast64_t"}},{"label":" uint_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest unsigned int with at least 8 bits."},"sortText":"4071dc9auint_fast8_t","filterText":"uint_fast8_t","insertText":"uint_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"uint_fast8_t"}},{"label":" FastSPI_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED","filterText":"FastSPI_LED","insertText":"FastSPI_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FastSPI_LED"}},{"label":" FastSPI_LED2","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED2","filterText":"FastSPI_LED2","insertText":"FastSPI_LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FastSPI_LED2"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40c767a4FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40d3fbeaFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d3fbeaFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d3fbeaFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40d3fbeaFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40d3fbeaFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40de4874FASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40de4874FASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40e6b712FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40e6b712FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40e6b712FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"FASTLED_USE_PROGMEM"}}]},"jsonrpc":"2.0"}Content-Length: 1071

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Fas'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":150,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":150}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":52},"contentChanges":[{"range":{"start":{"line":94,"character":4},"end":{"line":94,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":151,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":4},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":152,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 13806

{"id":151,"result":{"isIncomplete":false,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastLED"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"false"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" CFastLED","kind":7,"sortText":"3fd1c28eCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"3fe19999CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"CFastLED()"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fabs(${1:double __x})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40580000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INTERNAL"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" FastSPI_LED","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED","filterText":"FastSPI_LED","insertText":"FastSPI_LED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastSPI_LED"}},{"label":" FastSPI_LED2","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fFastSPI_LED2","filterText":"FastSPI_LED2","insertText":"FastSPI_LED2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FastSPI_LED2"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40be2cd4FASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_VERSION"}},{"label":"•FASTLED_BLEND_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_BLEND_FIXED","filterText":"FASTLED_BLEND_FIXED","insertText":"FASTLED_BLEND_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_BLEND_FIXED"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40cb621cFASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_INTERRUPT_RETRY_COUNT","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_INTERRUPT_RETRY_COUNT","filterText":"FASTLED_INTERRUPT_RETRY_COUNT","insertText":"FASTLED_INTERRUPT_RETRY_COUNT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_INTERRUPT_RETRY_COUNT"}},{"label":"•FASTLED_NAMESPACE_BEGIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_NAMESPACE_BEGIN","filterText":"FASTLED_NAMESPACE_BEGIN","insertText":"FASTLED_NAMESPACE_BEGIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NAMESPACE_BEGIN"}},{"label":"•FASTLED_NAMESPACE_END","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_NAMESPACE_END","filterText":"FASTLED_NAMESPACE_END","insertText":"FASTLED_NAMESPACE_END","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NAMESPACE_END"}},{"label":"•FASTLED_NOISE_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_NOISE_FIXED","filterText":"FASTLED_NOISE_FIXED","insertText":"FASTLED_NOISE_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_NOISE_FIXED"}},{"label":"•FASTLED_SCALE8_FIXED","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_config.h\"`"},"sortText":"40cb621cFASTLED_SCALE8_FIXED","filterText":"FASTLED_SCALE8_FIXED","insertText":"FASTLED_SCALE8_FIXED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SCALE8_FIXED"}},{"label":"•FASTLED_USING_NAMESPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"led_sysdefs.h\"`"},"sortText":"40cb621cFASTLED_USING_NAMESPACE","filterText":"FASTLED_USING_NAMESPACE","insertText":"FASTLED_USING_NAMESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_USING_NAMESPACE"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"fabsf"}},{"label":"•FASTLED_RAND16_13849","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d6327bFASTLED_RAND16_13849","filterText":"FASTLED_RAND16_13849","insertText":"FASTLED_RAND16_13849","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_RAND16_13849"}},{"label":"•FASTLED_RAND16_2053","kind":1,"documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`"},"sortText":"40d6327bFASTLED_RAND16_2053","filterText":"FASTLED_RAND16_2053","insertText":"FASTLED_RAND16_2053","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_RAND16_2053"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_HAS_CLOCKLESS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40df0d07FASTLED_HAS_CLOCKLESS","filterText":"FASTLED_HAS_CLOCKLESS","insertText":"FASTLED_HAS_CLOCKLESS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_HAS_CLOCKLESS"}},{"label":"•FASTLED_SLOW_CLOCK_ADJUST","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"40df0d07FASTLED_SLOW_CLOCK_ADJUST","filterText":"FASTLED_SLOW_CLOCK_ADJUST","insertText":"FASTLED_SLOW_CLOCK_ADJUST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SLOW_CLOCK_ADJUST"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40df0d07FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40fec88dFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"newText":"FALLING"}}]},"jsonrpc":"2.0"}Content-Length: 1070

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'Fa'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":152,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":153,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":152}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":53},"contentChanges":[{"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":153}}Content-Length: 232

{"jsonrpc":"2.0","id":154,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":3},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":155,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 47712

{"id":154,"result":{"isIncomplete":true,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3e8ea8f8FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastLED"}},{"label":" fract8","kind":8,"documentation":{"kind":"markdown","value":"ANSI unsigned short \\_Fract. range is 0 to 0.99609375 in steps of 0.00390625"},"sortText":"3eff2eb1fract8","filterText":"fract8","insertText":"fract8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract8"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"false"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"float"}},{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" FILE","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\c FILE is the opaque structure that is passed around between the various standard IO functions."},"sortText":"3f17ae13FILE","filterText":"FILE","insertText":"FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FILE"}},{"label":" fract16","kind":8,"documentation":{"kind":"markdown","value":"ANSI: unsigned \\_Fract. range is 0 to 0.99998474121 in steps of 0.00001525878"},"sortText":"3f17ae13fract16","filterText":"fract16","insertText":"fract16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fract16"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"401cf05eFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabs(${1:double __x})"}},{"label":" fdim(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fdim() function returns \\\u003cem\u003emax(\\_\\_x - \\_\\_y, 0)\\\u003c/em\u003e. If \\\\a \\_\\_x or  \n\\\\a \\_\\_y or both are NaN, NaN is returned."},"sortText":"403f858bfdim","filterText":"fdim","insertText":"fdim(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdim(${1:double __x}, ${2:double __y})"}},{"label":" ffs(int __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffs(int val);  \n\\\\brief This function finds the first (least significant) bit set in the input value.  \n\\\\returns The ffs() function returns the position of the first (least significant) bit set in the word val, or 0 if no bits are set.  \nThe least significant bit is position 1.  \n\\\\note For expressions that are constant at compile time, consider using the \\\\ref \\_FFS macro instead."},"sortText":"403f858bffs","filterText":"ffs","insertText":"ffs(${1:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffs(${1:int __val})"}},{"label":" ffsl(long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsl(long val);  \n\\\\brief Same as ffs(), for an argument of type long."},"sortText":"403f858bffsl","filterText":"ffsl","insertText":"ffsl(${1:long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsl(${1:long __val})"}},{"label":" ffsll(long long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsll(long long val);  \n\\\\brief Same as ffs(), for an argument of type long long."},"sortText":"403f858bffsll","filterText":"ffsll","insertText":"ffsll(${1:long long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ffsll(${1:long long __val})"}},{"label":" floor(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The floor() function returns the largest integral value less than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"403f858bfloor","filterText":"floor","insertText":"floor(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floor(${1:double __x})"}},{"label":" fma(double __x, double __y, double __z)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fma() function performs floating-point multiply-add. This is the operation \\\u003cem\u003e(\\_\\_x * \\_\\_y) + \\_\\_z\\\u003c/em\u003e, but the intermediate result is not rounded to the destination type. This can sometimes improve the precision of a calculation."},"sortText":"403f858bfma","filterText":"fma","insertText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})"}},{"label":" fmax(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmax() function returns the greater of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmax","filterText":"fmax","insertText":"fmax(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmax(${1:double __x}, ${2:double __y})"}},{"label":" fmin(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmin() function returns the lesser of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmin","filterText":"fmin","insertText":"fmin(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmin(${1:double __x}, ${2:double __y})"}},{"label":" fmod(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function fmod() returns the floating-point remainder of \\\u003cem\u003e\\_\\_x / \\_\\_y\\\u003c/em\u003e."},"sortText":"403f858bfmod","filterText":"fmod","insertText":"fmod(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmod(${1:double __x}, ${2:double __y})"}},{"label":" free(void *__ptr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The free() function causes the allocated memory referenced by \\\\c ptr to be made available for future allocations. If \\\\c ptr is NULL, no action occurs."},"sortText":"403f858bfree","filterText":"free","insertText":"free(${1:void *__ptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"free(${1:void *__ptr})"}},{"label":" frexp(double __x, int *__pexp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The frexp() function breaks a floating-point number into a normalized fraction and an integral power of 2. It stores the integer in the \\\\c int object pointed to by \\\\a \\_\\_pexp.  \nIf \\\\a \\_\\_x is a normal float point number, the frexp() function returns the value \\\\c v, such that \\\\c v has a magnitude in the interval [1/2, 1) or zero, and \\\\a \\_\\_x equals \\\\c v times 2 raised to the power \\\\a \\_\\_pexp. If \\\\a \\_\\_x is zero, both parts of the result are zero. If \\\\a \\_\\_x is not a finite number, the frexp() returns \\\\a \\_\\_x as is and stores 0 by \\\\a \\_\\_pexp.  \n\\\\note This implementation permits a zero pointer as a directive to skip a storing the exponent."},"sortText":"403f858bfrexp","filterText":"frexp","insertText":"frexp(${1:double __x}, ${2:int *__pexp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexp(${1:double __x}, ${2:int *__pexp})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40400000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INTERNAL"}},{"label":"•F(string_literal)","kind":1,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`"},"sortText":"4051050aF","filterText":"F","insertText":"F(${1:string_literal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F(${1:string_literal})"}},{"label":"•FORWARD_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fFORWARD_HUES","filterText":"FORWARD_HUES","insertText":"FORWARD_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FORWARD_HUES"}},{"label":" ForestColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Forest colors, greens"},"sortText":"4068a03fForestColors_p","filterText":"ForestColors_p","insertText":"ForestColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ForestColors_p"}},{"label":"•FullSpectrumFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 244, 242"},"sortText":"4068a03fFullSpectrumFluorescent","filterText":"FullSpectrumFluorescent","insertText":"FullSpectrumFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FullSpectrumFluorescent"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" fclose(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"This function closes \\\\c stream, and disallows and further IO to and from it.  \nWhen using fdevopen() to setup the stream, a call to fclose() is needed in order to free the internal resources allocated.  \nIf the stream has been set up using fdev_setup_stream() or FDEV_SETUP_STREAM(), use fdev_close() instead.  \nIt currently always returns 0 (for success)."},"sortText":"4068a03ffclose","filterText":"fclose","insertText":"fclose(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fclose(${1:FILE *__stream})"}},{"label":" fdevopen(int (*__put)(char, FILE *), int (*__get)(FILE *))","kind":3,"detail":"FILE *","documentation":{"kind":"markdown","value":"New prototype for avr-libc 1.4 and above."},"sortText":"4068a03ffdevopen","filterText":"fdevopen","insertText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})"}},{"label":" fdopen(int, const char *)","kind":3,"detail":"FILE *","sortText":"4068a03ffdopen","filterText":"fdopen","insertText":"fdopen(${1:int}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdopen(${1:int}, ${2:const char *})"}},{"label":" feof(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the end-of-file flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03ffeof","filterText":"feof","insertText":"feof(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"feof(${1:FILE *__stream})"}},{"label":" ferror(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the error flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03fferror","filterText":"ferror","insertText":"ferror(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ferror(${1:FILE *__stream})"}},{"label":" fflush(FILE *stream)","kind":3,"detail":"int","sortText":"4068a03ffflush","filterText":"fflush","insertText":"fflush(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fflush(${1:FILE *stream})"}},{"label":" fgetc(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fgetc reads a character from \\\\c stream. It returns the character, or \\\\c EOF in case end-of-file was encountered or an error occurred. The routines feof() or ferror() must be used to distinguish between both situations."},"sortText":"4068a03ffgetc","filterText":"fgetc","insertText":"fgetc(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetc(${1:FILE *__stream})"}},{"label":" fgetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffgetpos","filterText":"fgetpos","insertText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" fgets(char *__str, int __size, FILE *__stream)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"Read at most \\\u003ctt\u003esize - 1\\\u003c/tt\u003e bytes from \\\\c stream, until a newline character was encountered, and store the characters in the buffer pointed to by \\\\c str. Unless an error was encountered while reading, the string will then be terminated with a \\\\c NUL character.  \nIf an error was encountered, the function returns NULL and sets the error flag of \\\\c stream, which can be tested using ferror().  \nOtherwise, a pointer to the string will be returned."},"sortText":"4068a03ffgets","filterText":"fgets","insertText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})"}},{"label":" fileno(FILE *)","kind":3,"detail":"int","sortText":"4068a03ffileno","filterText":"fileno","insertText":"fileno(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fileno(${1:FILE *})"}},{"label":"•fill_2dnoise16(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint32_t x, int xscale, uint32_t y, int yscale, uint32_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend, uint16_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise16","filterText":"fill_2dnoise16","insertText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_2dnoise8(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint16_t x, int xscale, uint16_t y, int yscale, uint16_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise8","filterText":"fill_2dnoise8","insertText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_gradient(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nConvenience functions to fill an array of colors with a two-color, three-color, or four-color gradient"},"sortText":"4068a03ffill_gradient","filterText":"fill_gradient","insertText":"fill_gradient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient($0)"}},{"label":"•fill_gradient_RGB(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_gradient_RGB - fill a range of LEDs with a smooth RGB gradient between two specified RGB colors.  \nUnlike HSV, there is no 'color wheel' in RGB space,  \nand therefore there's only one 'direction' for the gradient to go, and no 'direction code' is needed."},"sortText":"4068a03ffill_gradient_RGB","filterText":"fill_gradient_RGB","insertText":"fill_gradient_RGB($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_gradient_RGB($0)"}},{"label":"•fill_noise16(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time, uint8_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_noise16","filterText":"fill_noise16","insertText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_noise8(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name fill functions  \n@{ fill functions to fill leds with values based on noise functions. These functions use the fill_raw\\_\\* functions as appropriate."},"sortText":"4068a03ffill_noise8","filterText":"fill_noise8","insertText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_palette(CRGB *L, uint16_t N, uint8_t startIndex, uint8_t incIndex, const PALETTE \u0026pal, uint8_t brightness, TBlendType blendType)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nFill a range of LEDs with a sequece of entryies from a palette"},"sortText":"4068a03ffill_palette","filterText":"fill_palette","insertText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})"}},{"label":"•fill_rainbow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_rainbow - fill a range of LEDs with a rainbow of colors, at full saturation and full value (brightness)"},"sortText":"4068a03ffill_rainbow","filterText":"fill_rainbow","insertText":"fill_rainbow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_rainbow($0)"}},{"label":"•fill_raw_2dnoise16(uint16_t *pData, int width, int height, uint8_t octaves, q88 freq88, fract16 amplitude, int skip, uint32_t x, int scalex, uint32_t y, int scaley, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16","filterText":"fill_raw_2dnoise16","insertText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})"}},{"label":"•fill_raw_2dnoise16into8(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16into8","filterText":"fill_raw_2dnoise16into8","insertText":"fill_raw_2dnoise16into8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise16into8($0)"}},{"label":"•fill_raw_2dnoise8(uint8_t *pData, int width, int height, uint8_t octaves, uint16_t x, int scalex, uint16_t y, int scaley, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise8","filterText":"fill_raw_2dnoise8","insertText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})"}},{"label":"•fill_raw_noise16into8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint32_t x, int scalex, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_noise16into8","filterText":"fill_raw_noise16into8","insertText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})"}},{"label":"•fill_raw_noise8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint16_t x, int scalex, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw fill functions  \n@{ Raw noise fill functions - fill into a 1d or 2d array of 8-bit values using either 8-bit noise or 16-bit noise functions.  \n@param pData the array of data to write into  \n@param num_points the number of points of noise to compute  \n@param octaves the number of octaves to use for noise  \n@param x the x position in the noise field  \n@param y the y position in the noise field for 2d functions  \n@param scalex the scale (distance) between x points when filling in noise  \n@param scaley the scale (distance) between y points when filling in noise  \n@param time the time position for the noise field"},"sortText":"4068a03ffill_raw_noise8","filterText":"fill_raw_noise8","insertText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})"}},{"label":"•fill_solid(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_solid - fill a range of LEDs with a solid color Example: fill_solid( leds, NUM_LEDS, CRGB(50,0,200));"},"sortText":"4068a03ffill_solid","filterText":"fill_solid","insertText":"fill_solid($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fill_solid($0)"}},{"label":" floatToSfract15(float f)","kind":3,"detail":"sfract15","documentation":{"kind":"markdown","value":"conversion from IEEE754 float in the range (-1,1) to 16-bit fixed point. Note that the extremes of one and negative one are NOT representable. The representable range is basically"},"sortText":"4068a03ffloatToSfract15","filterText":"floatToSfract15","insertText":"floatToSfract15(${1:float f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floatToSfract15(${1:float f})"}},{"label":" fopen(const char *path, const char *mode)","kind":3,"detail":"FILE *","sortText":"4068a03ffopen","filterText":"fopen","insertText":"fopen(${1:const char *path}, ${2:const char *mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fopen(${1:const char *path}, ${2:const char *mode})"}},{"label":" fpos_t","kind":8,"sortText":"4068a03ffpos_t","filterText":"fpos_t","insertText":"fpos_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fpos_t"}},{"label":" fprintf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fprintf performs formatted output to \\\\c stream.  \nSee \\\\c vfprintf() for details."},"sortText":"4068a03ffprintf","filterText":"fprintf","insertText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fprintf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c fprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03ffprintf_P","filterText":"fprintf_P","insertText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fputc(int __c, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fputc sends the character \\\\c c (though given as type  \n\\\\c int) to \\\\c stream. It returns the character, or \\\\c EOF in case an error occurred."},"sortText":"4068a03ffputc","filterText":"fputc","insertText":"fputc(${1:int __c}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputc(${1:int __c}, ${2:FILE *__stream})"}},{"label":" fputs(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Write the string pointed to by \\\\c str to stream \\\\c stream.  \nReturns 0 on success and EOF on error."},"sortText":"4068a03ffputs","filterText":"fputs","insertText":"fputs(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fputs_P(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fputs() where \\\\c str resides in program memory."},"sortText":"4068a03ffputs_P","filterText":"fputs_P","insertText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fread(void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Read \\\\c nmemb objects, \\\\c size bytes each, from \\\\c stream,  \nto the buffer pointed to by \\\\c ptr.  \nReturns the number of objects successfully read, i. e.  \n\\\\c nmemb unless an input error occured or end-of-file was encountered. feof() and ferror() must be used to distinguish between these two conditions."},"sortText":"4068a03ffread","filterText":"fread","insertText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" freopen(const char *path, const char *mode, FILE *stream)","kind":3,"detail":"FILE *","sortText":"4068a03ffreopen","filterText":"freopen","insertText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})"}},{"label":" fscanf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fscanf performs formatted input, reading the input data from \\\\c stream.  \nSee vfscanf() for details."},"sortText":"4068a03ffscanf","filterText":"fscanf","insertText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fscanf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fscanf() using a \\\\c fmt string in program memory."},"sortText":"4068a03ffscanf_P","filterText":"fscanf_P","insertText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fseek(FILE *stream, long offset, int whence)","kind":3,"detail":"int","sortText":"4068a03ffseek","filterText":"fseek","insertText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})"}},{"label":" fsetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffsetpos","filterText":"fsetpos","insertText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" ftell(FILE *stream)","kind":3,"detail":"long","sortText":"4068a03fftell","filterText":"ftell","insertText":"ftell(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"ftell(${1:FILE *stream})"}},{"label":" fwrite(const void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Write \\\\c nmemb objects, \\\\c size bytes each, to \\\\c stream.  \nThe first byte of the first object is referenced by \\\\c ptr.  \nReturns the number of objects successfully written, i. e.  \n\\\\c nmemb unless an output error occured."},"sortText":"4068a03ffwrite","filterText":"fwrite","insertText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" F_CPU","kind":1,"sortText":"40800000F_CPU","filterText":"F_CPU","insertText":"F_CPU","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"F_CPU"}},{"label":"•FASTLED_INCLUDE_PGMSPACE","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_progmem.h\"`"},"sortText":"40b194b3FASTLED_INCLUDE_PGMSPACE","filterText":"FASTLED_INCLUDE_PGMSPACE","insertText":"FASTLED_INCLUDE_PGMSPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_INCLUDE_PGMSPACE"}},{"label":"•FASTLED_ALLOW_INTERRUPTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_ALLOW_INTERRUPTS","filterText":"FASTLED_ALLOW_INTERRUPTS","insertText":"FASTLED_ALLOW_INTERRUPTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_ALLOW_INTERRUPTS"}},{"label":"•FASTLED_AVR","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_AVR","filterText":"FASTLED_AVR","insertText":"FASTLED_AVR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_AVR"}},{"label":"•FASTLED_SPI_BYTE_ONLY","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_SPI_BYTE_ONLY","filterText":"FASTLED_SPI_BYTE_ONLY","insertText":"FASTLED_SPI_BYTE_ONLY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_SPI_BYTE_ONLY"}},{"label":"•FASTLED_USE_PROGMEM","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"40c80ee4FASTLED_USE_PROGMEM","filterText":"FASTLED_USE_PROGMEM","insertText":"FASTLED_USE_PROGMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FASTLED_USE_PROGMEM"}},{"label":" fabsf","kind":1,"sortText":"40d1050afabsf","filterText":"fabsf","insertText":"fabsf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fabsf"}},{"label":" fdimf","kind":1,"sortText":"40d1050afdimf","filterText":"fdimf","insertText":"fdimf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fdimf"}},{"label":" floorf","kind":1,"sortText":"40d1050afloorf","filterText":"floorf","insertText":"floorf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"floorf"}},{"label":" fmaf","kind":1,"sortText":"40d1050afmaf","filterText":"fmaf","insertText":"fmaf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaf"}},{"label":" fmaxf","kind":1,"sortText":"40d1050afmaxf","filterText":"fmaxf","insertText":"fmaxf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmaxf"}},{"label":" fminf","kind":1,"sortText":"40d1050afminf","filterText":"fminf","insertText":"fminf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fminf"}},{"label":" fmodf","kind":1,"sortText":"40d1050afmodf","filterText":"fmodf","insertText":"fmodf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"fmodf"}},{"label":" frexpf","kind":1,"sortText":"40d1050afrexpf","filterText":"frexpf","insertText":"frexpf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"frexpf"}},{"label":" FALLING","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaFALLING","filterText":"FALLING","insertText":"FALLING","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FALLING"}},{"label":" FE0","kind":1,"sortText":"40ec52eaFE0","filterText":"FE0","insertText":"FE0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FE0"}},{"label":" FLASHEND","kind":1,"sortText":"40ec52eaFLASHEND","filterText":"FLASHEND","insertText":"FLASHEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FLASHEND"}},{"label":" FOC0A","kind":1,"sortText":"40ec52eaFOC0A","filterText":"FOC0A","insertText":"FOC0A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0A"}},{"label":" FOC0B","kind":1,"sortText":"40ec52eaFOC0B","filterText":"FOC0B","insertText":"FOC0B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC0B"}},{"label":" FOC1A","kind":1,"sortText":"40ec52eaFOC1A","filterText":"FOC1A","insertText":"FOC1A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1A"}},{"label":" FOC1B","kind":1,"sortText":"40ec52eaFOC1B","filterText":"FOC1B","insertText":"FOC1B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC1B"}},{"label":" FOC2A","kind":1,"sortText":"40ec52eaFOC2A","filterText":"FOC2A","insertText":"FOC2A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2A"}},{"label":" FOC2B","kind":1,"sortText":"40ec52eaFOC2B","filterText":"FOC2B","insertText":"FOC2B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FOC2B"}},{"label":" FUSE_BODLEVEL0","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL0","filterText":"FUSE_BODLEVEL0","insertText":"FUSE_BODLEVEL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL0"}},{"label":" FUSE_BODLEVEL1","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL1","filterText":"FUSE_BODLEVEL1","insertText":"FUSE_BODLEVEL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL1"}},{"label":" FUSE_BODLEVEL2","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL2","filterText":"FUSE_BODLEVEL2","insertText":"FUSE_BODLEVEL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BODLEVEL2"}},{"label":" FUSE_BOOTRST","kind":1,"sortText":"40ec52eaFUSE_BOOTRST","filterText":"FUSE_BOOTRST","insertText":"FUSE_BOOTRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTRST"}},{"label":" FUSE_BOOTSZ0","kind":1,"sortText":"40ec52eaFUSE_BOOTSZ0","filterText":"FUSE_BOOTSZ0","insertText":"FUSE_BOOTSZ0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"FUSE_BOOTSZ0"}}]},"jsonrpc":"2.0"}Content-Length: 1085

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'F' (fix available)"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":155,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":54},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":156,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 695

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":156,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":55},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"rangeLength":0,"text":"s"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":157,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1069

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 's'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":157,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":158,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 63994

{"id":158,"result":{"isIncomplete":true,"items":[{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3e7ba499setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3ea7f738setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3ea7f738setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"setLedsOff()"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3eceb9fasetLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":"•Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"3ee11c8dSerial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"Serial"}},{"label":" sensorReading","kind":6,"detail":"int","documentation":{"kind":"markdown","value":"switch and shut off timer"},"sortText":"3eeffa26sensorReading","filterText":"sensorReading","insertText":"sensorReading","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sensorReading"}},{"label":"•scale8(uint8_t i, fract8 scale)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale one byte by a second one, which is treated as the numerator of a fraction whose denominator is 256 In other words, it computes i * (scale / 256) 4 clocks AVR with MUL, 2 clocks ARM"},"sortText":"3ef3eb01scale8","filterText":"scale8","insertText":"scale8(${1:uint8_t i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"scale8(${1:uint8_t i}, ${2:fract8 scale})"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" serialEvent()","kind":3,"detail":"void","sortText":"3f13a2a3serialEvent","filterText":"serialEvent","insertText":"serialEvent()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"serialEvent()"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"setup()"}},{"label":"•String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"3ff42869String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"String"}},{"label":"•StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"400a5edbStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"StringSumHelper"}},{"label":"•show_at_max_brightness_for_power()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSimilar to FastLED.show, but pre-adjusts brightness to keep below the power threshold.  \n@deprecated this has now been moved to FastLED.show();"},"sortText":"401cf05eshow_at_max_brightness_for_power","filterText":"show_at_max_brightness_for_power","insertText":"show_at_max_brightness_for_power()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"show_at_max_brightness_for_power()"}},{"label":" size_t","kind":8,"sortText":"402a8429size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"size_t"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"sortText":"403331fdstrlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlen(${1:const char *})"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"403f858bserialEventRun","filterText":"serialEventRun","insertText":"serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"serialEventRun()"}},{"label":" signbit(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x \u003c 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 \u003c 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"sortText":"403f858bsignbit","filterText":"signbit","insertText":"signbit(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"signbit(${1:double __x})"}},{"label":" sin(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"sortText":"403f858bsin","filterText":"sin","insertText":"sin(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sin(${1:double __x})"}},{"label":" sinh(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"sortText":"403f858bsinh","filterText":"sinh","insertText":"sinh(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sinh(${1:double __x})"}},{"label":" sqrt(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"403f858bsqrt","filterText":"sqrt","insertText":"sqrt(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sqrt(${1:double __x})"}},{"label":" sqrtf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"sortText":"403f858bsqrtf","filterText":"sqrtf","insertText":"sqrtf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"sqrtf(${1:float})"}},{"label":" square(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\\u003cem\u003e\\_\\_x * \\_\\_x\\\u003c/em\u003e.  \n\\\\note This function does not belong to the C standard definition."},"sortText":"403f858bsquare","filterText":"square","insertText":"square(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"square(${1:double __x})"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Pseudo-random number generator seeding; see rand()."},"sortText":"403f858bsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" srandom(unsigned long __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib Pseudo-random number generator seeding; see random()."},"sortText":"403f858bsrandom","filterText":"srandom","insertText":"srandom(${1:unsigned long __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"srandom(${1:unsigned long __seed})"}},{"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcasecmp_PF","filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrcasestr","filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcasestr(${1:const char *}, ${2:const char *})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strcat_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"sortText":"403f858bstrcat_P","filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcat_P(${1:char *}, ${2:const char *})"}},{"label":" strchr_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr_P","filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strchr_P(${1:const char *}, ${2:int __val})"}},{"label":" strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul","filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strchrnul(${1:const char *}, ${2:int})"}},{"label":" strchrnul_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul_P","filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strchrnul_P(${1:const char *}, ${2:int __val})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp_P","filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcmp_PF","filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcpy_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrcpy_P","filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcpy_P(${1:char *}, ${2:const char *})"}},{"label":" strcpy_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrcpy_PF","filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strcspn(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strcspn_P(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn_P","filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strdup(const char *s1)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strdup(${1:const char *s1})"}},{"label":" strlcat_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat_P","filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n \u003c= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval \u003e= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrlcat_PF","filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred."},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcpy_P","filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlcpy_PF","filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlen_P(const char *s)","kind":3,"detail":"size_t","sortText":"403f858bstrlen_P","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlen_P(${1:const char *s})"}},{"label":" strlen_PF(uint_farptr_t src)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlen_PF","filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlen_PF(${1:uint_farptr_t src})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strlwr(${1:char *})"}},{"label":" strncat_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrncat_P","filterText":"strncat_P","insertText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy_P","filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncpy_PF","filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strnlen_P(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"sortText":"403f858bstrnlen_P","filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strnlen_P(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_PF(uint_farptr_t src, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrnlen_PF","filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})"}},{"label":" strpbrk_P(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"sortText":"403f858bstrpbrk_P","filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strsep_P(char **__sp, const char *__delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"sortText":"403f858bstrsep_P","filterText":"strsep_P","insertText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})"}},{"label":" strspn_P(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn_P","filterText":"strspn_P","insertText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtod(const char *__nptr, char **__endptr)","kind":3,"detail":"double","sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})"}},{"label":" strtol(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strtoul(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *dest, const char *src, size_t n)","kind":3,"detail":"size_t","sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})"}},{"label":" system(const char *)","kind":3,"detail":"int","sortText":"403f858bsystem","filterText":"system","insertText":"system(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"system(${1:const char *})"}},{"label":"•scale8_LEAVING_R1_DIRTY(uint8_t i, fract8 scale)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nThis version of scale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"40456beescale8_LEAVING_R1_DIRTY","filterText":"scale8_LEAVING_R1_DIRTY","insertText":"scale8_LEAVING_R1_DIRTY(${1:uint8_t i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"scale8_LEAVING_R1_DIRTY(${1:uint8_t i}, ${2:fract8 scale})"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"404f4645Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"Stream"}},{"label":" SK6812\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK6812","filterText":"SK6812","insertText":"SK6812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SK6812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SK6822\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK6822","filterText":"SK6822","insertText":"SK6822\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SK6822\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SK9822","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK9822","filterText":"SK9822","insertText":"SK9822","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SK9822"}},{"label":"•SKIP_ALL","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nAll invalid characters are ignored."},"sortText":"405d8e68SKIP_ALL","filterText":"SKIP_ALL","insertText":"SKIP_ALL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SKIP_ALL"}},{"label":"•SKIP_NONE","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nNothing is skipped, and the stream is not touched unless the first waiting character is valid."},"sortText":"405d8e68SKIP_NONE","filterText":"SKIP_NONE","insertText":"SKIP_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SKIP_NONE"}},{"label":"•SKIP_WHITESPACE","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nOnly tabs, spaces, line feeds \u0026 carriage returns are skipped."},"sortText":"405d8e68SKIP_WHITESPACE","filterText":"SKIP_WHITESPACE","insertText":"SKIP_WHITESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SKIP_WHITESPACE"}},{"label":" SM16703\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SM16703","filterText":"SM16703","insertText":"SM16703\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SM16703\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SM16716","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SM16716","filterText":"SM16716","insertText":"SM16716","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SM16716"}},{"label":" SMART_MATRIX","kind":20,"detail":"ESM","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SMART_MATRIX","filterText":"SMART_MATRIX","insertText":"SMART_MATRIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SMART_MATRIX"}},{"label":" shiftIn(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68shiftIn","filterText":"shiftIn","insertText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"shiftIn(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder})"}},{"label":" shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68shiftOut","filterText":"shiftOut","insertText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"shiftOut(${1:uint8_t dataPin}, ${2:uint8_t clockPin}, ${3:uint8_t bitOrder}, ${4:uint8_t val})"}},{"label":"•SHORTEST_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fSHORTEST_HUES","filterText":"SHORTEST_HUES","insertText":"SHORTEST_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SHORTEST_HUES"}},{"label":"•SK6812Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fSK6812Controller","filterText":"SK6812Controller","insertText":"SK6812Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SK6812Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•SK6822Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fSK6822Controller","filterText":"SK6822Controller","insertText":"SK6822Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SK6822Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•SK9822Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nSK9822 controller class.  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(24)"},"sortText":"4068a03fSK9822Controller","filterText":"SK9822Controller","insertText":"SK9822Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SK9822Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•SPIOutput\u003cuint8_t _DATA_PIN, uint8_t _CLOCK_PIN, uint32_t _SPI_CLOCK_DIVIDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastspi.h\"`"},"sortText":"4068a03fSPIOutput","filterText":"SPIOutput","insertText":"SPIOutput\u003c${1:uint8_t _DATA_PIN}, ${2:uint8_t _CLOCK_PIN}, ${3:uint32_t _SPI_CLOCK_DIVIDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SPIOutput\u003c${1:uint8_t _DATA_PIN}, ${2:uint8_t _CLOCK_PIN}, ${3:uint32_t _SPI_CLOCK_DIVIDER}\u003e"}},{"label":"•Selectable","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  \nPin access class - needs to tune for various platforms (naive fallback solution?)  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////"},"sortText":"4068a03fSelectable","filterText":"Selectable","insertText":"Selectable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"Selectable"}},{"label":"•SodiumVapor","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 209, 178"},"sortText":"4068a03fSodiumVapor","filterText":"SodiumVapor","insertText":"SodiumVapor","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"SodiumVapor"}},{"label":"•StandardFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 244, 255, 250"},"sortText":"4068a03fStandardFluorescent","filterText":"StandardFluorescent","insertText":"StandardFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"StandardFluorescent"}},{"label":" saccum114","kind":8,"sortText":"4068a03fsaccum114","filterText":"saccum114","insertText":"saccum114","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"saccum114"}},{"label":" scanf(const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c scanf performs formatted input from stream \\\\c stdin.  \nSee vfscanf() for details."},"sortText":"4068a03fscanf","filterText":"scanf","insertText":"scanf(${1:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"scanf(${1:const char *__fmt, ...})"}},{"label":" scanf_P(const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of scanf() where \\\\c fmt resides in program memory."},"sortText":"4068a03fscanf_P","filterText":"scanf_P","insertText":"scanf_P(${1:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"scanf_P(${1:const char *__fmt, ...})"}},{"label":" seconds16()","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"Return the current seconds since boot in a 16-bit value. Used as part of the \"every N time-periods\" mechanism"},"sortText":"4068a03fseconds16","filterText":"seconds16","insertText":"seconds16()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"seconds16()"}},{"label":"•set_max_power_in_milliwatts(uint32_t powerInmW)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSet the maximum power used in watts  \n@deprecated - use FastLED.setMaxPowerInMilliWatts"},"sortText":"4068a03fset_max_power_in_milliwatts","filterText":"set_max_power_in_milliwatts","insertText":"set_max_power_in_milliwatts(${1:uint32_t powerInmW})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"set_max_power_in_milliwatts(${1:uint32_t powerInmW})"}},{"label":"•set_max_power_in_volts_and_milliamps(uint8_t volts, uint32_t milliamps)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSet the maximum power used in milliamps for a given voltage  \n@deprecated - use FastLED.setMaxPowerInVoltsAndMilliamps()"},"sortText":"4068a03fset_max_power_in_volts_and_milliamps","filterText":"set_max_power_in_volts_and_milliamps","insertText":"set_max_power_in_volts_and_milliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":3}},"newText":"set_max_power_in_volts_and_milliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":56},"contentChanges":[{"range":{"start":{"line":94,"character":3},"end":{"line":94,"character":3}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1070

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":4}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'se'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":159,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":57},"contentChanges":[{"range":{"start":{"line":94,"character":4},"end":{"line":94,"character":4}},"rangeLength":0,"text":"t"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":160,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1071

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'set'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":160,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":161,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":5},"context":{"triggerKind":3}}}
>>>
Content-Length: 5337

{"id":161,"result":{"isIncomplete":false,"items":[{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3e7ba499setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3ea7f738setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3ea7f738setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setLedsOff()"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3eceb9fasetLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setup()"}},{"label":"•set_max_power_in_milliwatts(uint32_t powerInmW)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSet the maximum power used in watts  \n@deprecated - use FastLED.setMaxPowerInMilliWatts"},"sortText":"4068a03fset_max_power_in_milliwatts","filterText":"set_max_power_in_milliwatts","insertText":"set_max_power_in_milliwatts(${1:uint32_t powerInmW})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"set_max_power_in_milliwatts(${1:uint32_t powerInmW})"}},{"label":"•set_max_power_in_volts_and_milliamps(uint8_t volts, uint32_t milliamps)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSet the maximum power used in milliamps for a given voltage  \n@deprecated - use FastLED.setMaxPowerInVoltsAndMilliamps()"},"sortText":"4068a03fset_max_power_in_volts_and_milliamps","filterText":"set_max_power_in_volts_and_milliamps","insertText":"set_max_power_in_volts_and_milliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"set_max_power_in_volts_and_milliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})"}},{"label":"•set_max_power_indicator_LED(uint8_t pinNumber)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSelect a pin with an led that will be flashed to indicate that power management is pulling down the brightness"},"sortText":"4068a03fset_max_power_indicator_LED","filterText":"set_max_power_indicator_LED","insertText":"set_max_power_indicator_LED(${1:uint8_t pinNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"set_max_power_indicator_LED(${1:uint8_t pinNumber})"}},{"label":" setbuf(FILE *stream, char *buf)","kind":3,"detail":"void","sortText":"4068a03fsetbuf","filterText":"setbuf","insertText":"setbuf(${1:FILE *stream}, ${2:char *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setbuf(${1:FILE *stream}, ${2:char *buf})"}},{"label":" setvbuf(FILE *stream, char *buf, int mode, size_t size)","kind":3,"detail":"int","sortText":"4068a03fsetvbuf","filterText":"setvbuf","insertText":"setvbuf(${1:FILE *stream}, ${2:char *buf}, ${3:int mode}, ${4:size_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"setvbuf(${1:FILE *stream}, ${2:char *buf}, ${3:int mode}, ${4:size_t size})"}},{"label":"•CRGBSet","kind":8,"documentation":{"kind":"markdown","value":"From `\"pixelset.h\"`"},"sortText":"40cf659eCRGBSet","filterText":"CRGBSet","insertText":"CRGBSet","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"CRGBSet"}},{"label":"•random16_set_seed(uint16_t seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`  \nSet the 16-bit seed used for the random number generator"},"sortText":"40d9f877random16_set_seed","filterText":"random16_set_seed","insertText":"random16_set_seed(${1:uint16_t seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"newText":"random16_set_seed(${1:uint16_t seed})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":58},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":5}},"rangeLength":0,"text":"A"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'setA'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":162,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 442

{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"message":"Unknown type name 'setA'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":163,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":164,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":58}}}Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":59},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":165,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1071

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'set'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":165,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":60},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":5}},"rangeLength":0,"text":"K"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":167,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'setK'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":166,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":167,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 442

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"message":"Unknown type name 'setK'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":169,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":61},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1071

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'set'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":170,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":62},"contentChanges":[{"range":{"start":{"line":94,"character":5},"end":{"line":94,"character":5}},"rangeLength":0,"text":"L"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1072

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'setL'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":171,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":172,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":6},"context":{"triggerKind":1}}}Content-Length: 274

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 1545

{"id":172,"result":{"isIncomplete":false,"items":[{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3e7ba499setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3ea7f738setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"setLedsOff()"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3eceb9fasetLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3ed078desetAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":6}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":173,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":63},"contentChanges":[{"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":174,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1073

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'setLe'"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":9}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":174,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":175,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 443

{"jsonrpc":"2.0","id":176,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":7},"end":{"line":94,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":7}},"message":"Unknown type name 'setLe'","severity":1,"code":"unknown_typename","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":176,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":64},"contentChanges":[{"range":{"start":{"line":94,"character":7},"end":{"line":94,"character":7}},"rangeLength":0,"text":"d"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1409

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'setLed'; did you mean 'setLeds'? (fix available)\n\nproject.ino.cpp:50:6: note: 'setLeds' declared here"},{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}},"severity":3,"message":"'setLeds' declared here\n\nproject.ino.cpp:114:3: error: use of undeclared identifier 'setLed'; did you mean 'setLeds'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":177,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":178,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":65},"contentChanges":[{"range":{"start":{"line":94,"character":8},"end":{"line":94,"character":8}},"rangeLength":0,"text":"s"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 895

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":179,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":9},"end":{"line":94,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":180,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":181,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":65}}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":66},"contentChanges":[{"range":{"start":{"line":94,"character":9},"end":{"line":94,"character":9}},"rangeLength":0,"text":"F"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1414

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":10}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'setLedsF'; did you mean 'setLeds'? (fix available)\n\nproject.ino.cpp:50:6: note: 'setLeds' declared here"},{"range":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}},"severity":3,"message":"'setLeds' declared here\n\nproject.ino.cpp:114:3: error: use of undeclared identifier 'setLedsF'; did you mean 'setLeds'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":182,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":183,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 566

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":10},"end":{"line":94,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":10}},"message":"Use of undeclared identifier 'setLedsF'; did you mean 'setLeds'? (fix available)\n\nproject.ino.cpp:50:6: note: 'setLeds' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":183,"result":[],"jsonrpc":"2.0"}Content-Length: 190

{"id":184,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":66}}}Content-Length: 332

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":67},"contentChanges":[{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":10}},"rangeLength":8,"text":"setLedsFront(const struct CRGB &color)"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":185,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 866

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":20}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":185,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":187,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":39}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":20}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":186,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":187,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":67}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":68},"contentChanges":[{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":39}},"rangeLength":24,"text":"C"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1078

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":16}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'C'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":188,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":69},"contentChanges":[{"range":{"start":{"line":94,"character":16},"end":{"line":94,"character":16}},"rangeLength":0,"text":"R"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":189,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1079

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":17}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'CR'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":189,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 457

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":17},"end":{"line":94,"character":17}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":17}},"message":"Use of undeclared identifier 'CR'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":190,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":191,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":70},"contentChanges":[{"range":{"start":{"line":94,"character":17},"end":{"line":94,"character":17}},"rangeLength":0,"text":"G"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3337

{"id":192,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 1238

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":18}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'CRG'; did you mean 'BRG'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:849:2:\nnote: 'BRG' declared here"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 616

{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":18},"end":{"line":94,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":18}},"message":"Use of undeclared identifier 'CRG'; did you mean 'BRG'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:849:2:\nnote: 'BRG' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":193,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":70}}}Content-Length: 274

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 616

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":18},"end":{"line":94,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":18}},"message":"Use of undeclared identifier 'CRG'; did you mean 'BRG'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:849:2:\nnote: 'BRG' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":194,"result":[],"jsonrpc":"2.0"}Content-Length: 190

{"id":195,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":71},"contentChanges":[{"range":{"start":{"line":94,"character":18},"end":{"line":94,"character":18}},"rangeLength":0,"text":"B"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":196,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 979

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":19}},"severity":1,"code":"ref_non_value","source":"clang","message":"'CRGB' does not refer to a value\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:89:8:\nnote: declared here"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":196,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":72},"contentChanges":[{"range":{"start":{"line":94,"character":19},"end":{"line":94,"character":19}},"rangeLength":0,"text":"()"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 895

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":197,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":198,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":199,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":20},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":199,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":20},"end":{"line":94,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":200,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":201,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":72}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":73},"contentChanges":[{"range":{"start":{"line":94,"character":19},"end":{"line":94,"character":21}},"rangeLength":2,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":202,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 979

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":15},"end":{"line":94,"character":19}},"severity":1,"code":"ref_non_value","source":"clang","message":"'CRGB' does not refer to a value\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:89:8:\nnote: declared here"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":202,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":74},"contentChanges":[{"range":{"start":{"line":94,"character":19},"end":{"line":94,"character":19}},"rangeLength":0,"text":":"}]}}Content-Length: 256

{"jsonrpc":"2.0","id":203,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":20},"context":{"triggerKind":2,"triggerCharacter":":"}}}Content-Length: 171

{"jsonrpc":"2.0","id":204,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 69

{"id":203,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 911

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":19},"end":{"line":94,"character":20}},"severity":1,"code":"expected_lparen_after_type","source":"clang","message":"Expected '(' for function-style cast or type construction"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":204,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":205,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 489

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":20},"end":{"line":94,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":19},"end":{"line":94,"character":20}},"message":"Expected '(' for function-style cast or type construction","severity":1,"code":"expected_lparen_after_type","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":206,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":74}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":75},"contentChanges":[{"range":{"start":{"line":94,"character":20},"end":{"line":94,"character":20}},"rangeLength":0,"text":":"}]}}Content-Length: 256

{"jsonrpc":"2.0","id":208,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":21},"context":{"triggerKind":2,"triggerCharacter":":"}}}Content-Length: 171

{"jsonrpc":"2.0","id":209,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 29309

{"id":208,"result":{"isIncomplete":true,"items":[{"label":" addToRGB(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666addToRGB","filterText":"addToRGB","insertText":"addToRGB(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"addToRGB(${1:uint8_t d})"}},{"label":" fadeLightBy(uint8_t fadefactor)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:uint8_t fadefactor})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"fadeLightBy(${1:uint8_t fadefactor})"}},{"label":" fadeToBlackBy(uint8_t fadefactor)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:uint8_t fadefactor})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"fadeToBlackBy(${1:uint8_t fadefactor})"}},{"label":" lerp16(const CRGB \u0026other, fract16 frac) const","kind":2,"detail":"CRGB","sortText":"3e3e6666lerp16","filterText":"lerp16","insertText":"lerp16(${1:const CRGB \u0026other}, ${2:fract16 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"lerp16(${1:const CRGB \u0026other}, ${2:fract16 frac})"}},{"label":" lerp8(const CRGB \u0026other, fract8 frac) const","kind":2,"detail":"CRGB","sortText":"3e3e6666lerp8","filterText":"lerp8","insertText":"lerp8(${1:const CRGB \u0026other}, ${2:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"lerp8(${1:const CRGB \u0026other}, ${2:fract8 frac})"}},{"label":" nscale8(…)","kind":2,"detail":"[2 overloads]","sortText":"3e3e6666nscale8","filterText":"nscale8","insertText":"nscale8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"nscale8($0)"}},{"label":" nscale8_video(uint8_t scaledown)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666nscale8_video","filterText":"nscale8_video","insertText":"nscale8_video(${1:uint8_t scaledown})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"nscale8_video(${1:uint8_t scaledown})"}},{"label":" scale8(const CRGB \u0026scaledown) const","kind":2,"detail":"CRGB","sortText":"3e3e6666scale8","filterText":"scale8","insertText":"scale8(${1:const CRGB \u0026scaledown})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"scale8(${1:const CRGB \u0026scaledown})"}},{"label":" setColorCode(uint32_t colorcode)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666setColorCode","filterText":"setColorCode","insertText":"setColorCode(${1:uint32_t colorcode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"setColorCode(${1:uint32_t colorcode})"}},{"label":" setHSV(uint8_t hue, uint8_t sat, uint8_t val)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666setHSV","filterText":"setHSV","insertText":"setHSV(${1:uint8_t hue}, ${2:uint8_t sat}, ${3:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"setHSV(${1:uint8_t hue}, ${2:uint8_t sat}, ${3:uint8_t val})"}},{"label":" setHue(uint8_t hue)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666setHue","filterText":"setHue","insertText":"setHue(${1:uint8_t hue})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"setHue(${1:uint8_t hue})"}},{"label":" setRGB(uint8_t nr, uint8_t ng, uint8_t nb)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666setRGB","filterText":"setRGB","insertText":"setRGB(${1:uint8_t nr}, ${2:uint8_t ng}, ${3:uint8_t nb})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"setRGB(${1:uint8_t nr}, ${2:uint8_t ng}, ${3:uint8_t nb})"}},{"label":" subtractFromRGB(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3e3e6666subtractFromRGB","filterText":"subtractFromRGB","insertText":"subtractFromRGB(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"subtractFromRGB(${1:uint8_t d})"}},{"label":" operator=(…)","kind":2,"detail":"[3 overloads]","sortText":"3ebb0788operator=","filterText":"operator=","insertText":"operator=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator=($0)"}},{"label":" operator%=(uint8_t scaledown)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator%=","filterText":"operator%=","insertText":"operator%=(${1:uint8_t scaledown})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator%=(${1:uint8_t scaledown})"}},{"label":" operator\u0026=(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator\u0026=","filterText":"operator\u0026=","insertText":"operator\u0026=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator\u0026=($0)"}},{"label":" operator*=(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator*=","filterText":"operator*=","insertText":"operator*=(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator*=(${1:uint8_t d})"}},{"label":" operator++(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator++","filterText":"operator++","insertText":"operator++($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator++($0)"}},{"label":" operator+=(const CRGB \u0026rhs)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator+=","filterText":"operator+=","insertText":"operator+=(${1:const CRGB \u0026rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator+=(${1:const CRGB \u0026rhs})"}},{"label":" operator-()","kind":2,"detail":"CRGB","sortText":"3ed00000operator-","filterText":"operator-","insertText":"operator-()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator-()"}},{"label":" operator--(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator--","filterText":"operator--","insertText":"operator--($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator--($0)"}},{"label":" operator-=(const CRGB \u0026rhs)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator-=","filterText":"operator-=","insertText":"operator-=(${1:const CRGB \u0026rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator-=(${1:const CRGB \u0026rhs})"}},{"label":" operator/=(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator/=","filterText":"operator/=","insertText":"operator/=(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator/=(${1:uint8_t d})"}},{"label":" operator\u003e\u003e=(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator\u003e\u003e=","filterText":"operator\u003e\u003e=","insertText":"operator\u003e\u003e=(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator\u003e\u003e=(${1:uint8_t d})"}},{"label":" operator|=(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator|=","filterText":"operator|=","insertText":"operator|=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"operator|=($0)"}},{"label":" maximizeBrightness(uint8_t limit = 255)","kind":2,"detail":"void","sortText":"3f17ae13maximizeBrightness","filterText":"maximizeBrightness","insertText":"maximizeBrightness()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"maximizeBrightness()"}},{"label":" AliceBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8AliceBlue","filterText":"AliceBlue","insertText":"AliceBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"AliceBlue"}},{"label":" Amethyst","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Amethyst","filterText":"Amethyst","insertText":"Amethyst","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Amethyst"}},{"label":" AntiqueWhite","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8AntiqueWhite","filterText":"AntiqueWhite","insertText":"AntiqueWhite","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"AntiqueWhite"}},{"label":" Aqua","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Aqua","filterText":"Aqua","insertText":"Aqua","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Aqua"}},{"label":" Aquamarine","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Aquamarine","filterText":"Aquamarine","insertText":"Aquamarine","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Aquamarine"}},{"label":" Azure","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Azure","filterText":"Azure","insertText":"Azure","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Azure"}},{"label":" Beige","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Beige","filterText":"Beige","insertText":"Beige","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Beige"}},{"label":" Bisque","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Bisque","filterText":"Bisque","insertText":"Bisque","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Bisque"}},{"label":" Black","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Black","filterText":"Black","insertText":"Black","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Black"}},{"label":" BlanchedAlmond","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8BlanchedAlmond","filterText":"BlanchedAlmond","insertText":"BlanchedAlmond","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"BlanchedAlmond"}},{"label":" Blue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Blue","filterText":"Blue","insertText":"Blue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Blue"}},{"label":" BlueViolet","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8BlueViolet","filterText":"BlueViolet","insertText":"BlueViolet","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"BlueViolet"}},{"label":" Brown","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Brown","filterText":"Brown","insertText":"Brown","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Brown"}},{"label":" BurlyWood","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8BurlyWood","filterText":"BurlyWood","insertText":"BurlyWood","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"BurlyWood"}},{"label":" CadetBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8CadetBlue","filterText":"CadetBlue","insertText":"CadetBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"CadetBlue"}},{"label":" Chartreuse","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Chartreuse","filterText":"Chartreuse","insertText":"Chartreuse","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Chartreuse"}},{"label":" Chocolate","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Chocolate","filterText":"Chocolate","insertText":"Chocolate","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Chocolate"}},{"label":" Coral","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Coral","filterText":"Coral","insertText":"Coral","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Coral"}},{"label":" CornflowerBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8CornflowerBlue","filterText":"CornflowerBlue","insertText":"CornflowerBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"CornflowerBlue"}},{"label":" Cornsilk","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Cornsilk","filterText":"Cornsilk","insertText":"Cornsilk","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Cornsilk"}},{"label":" Crimson","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Crimson","filterText":"Crimson","insertText":"Crimson","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Crimson"}},{"label":" Cyan","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Cyan","filterText":"Cyan","insertText":"Cyan","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Cyan"}},{"label":" DarkBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkBlue","filterText":"DarkBlue","insertText":"DarkBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkBlue"}},{"label":" DarkCyan","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkCyan","filterText":"DarkCyan","insertText":"DarkCyan","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkCyan"}},{"label":" DarkGoldenrod","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkGoldenrod","filterText":"DarkGoldenrod","insertText":"DarkGoldenrod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkGoldenrod"}},{"label":" DarkGray","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkGray","filterText":"DarkGray","insertText":"DarkGray","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkGray"}},{"label":" DarkGreen","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkGreen","filterText":"DarkGreen","insertText":"DarkGreen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkGreen"}},{"label":" DarkGrey","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkGrey","filterText":"DarkGrey","insertText":"DarkGrey","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkGrey"}},{"label":" DarkKhaki","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkKhaki","filterText":"DarkKhaki","insertText":"DarkKhaki","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkKhaki"}},{"label":" DarkMagenta","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkMagenta","filterText":"DarkMagenta","insertText":"DarkMagenta","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkMagenta"}},{"label":" DarkOliveGreen","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkOliveGreen","filterText":"DarkOliveGreen","insertText":"DarkOliveGreen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkOliveGreen"}},{"label":" DarkOrange","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkOrange","filterText":"DarkOrange","insertText":"DarkOrange","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkOrange"}},{"label":" DarkOrchid","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkOrchid","filterText":"DarkOrchid","insertText":"DarkOrchid","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkOrchid"}},{"label":" DarkRed","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkRed","filterText":"DarkRed","insertText":"DarkRed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkRed"}},{"label":" DarkSalmon","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkSalmon","filterText":"DarkSalmon","insertText":"DarkSalmon","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkSalmon"}},{"label":" DarkSeaGreen","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkSeaGreen","filterText":"DarkSeaGreen","insertText":"DarkSeaGreen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkSeaGreen"}},{"label":" DarkSlateBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkSlateBlue","filterText":"DarkSlateBlue","insertText":"DarkSlateBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkSlateBlue"}},{"label":" DarkSlateGray","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkSlateGray","filterText":"DarkSlateGray","insertText":"DarkSlateGray","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkSlateGray"}},{"label":" DarkSlateGrey","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkSlateGrey","filterText":"DarkSlateGrey","insertText":"DarkSlateGrey","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkSlateGrey"}},{"label":" DarkTurquoise","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkTurquoise","filterText":"DarkTurquoise","insertText":"DarkTurquoise","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkTurquoise"}},{"label":" DarkViolet","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DarkViolet","filterText":"DarkViolet","insertText":"DarkViolet","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DarkViolet"}},{"label":" DeepPink","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DeepPink","filterText":"DeepPink","insertText":"DeepPink","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DeepPink"}},{"label":" DeepSkyBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DeepSkyBlue","filterText":"DeepSkyBlue","insertText":"DeepSkyBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DeepSkyBlue"}},{"label":" DimGray","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DimGray","filterText":"DimGray","insertText":"DimGray","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DimGray"}},{"label":" DimGrey","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DimGrey","filterText":"DimGrey","insertText":"DimGrey","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DimGrey"}},{"label":" DodgerBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8DodgerBlue","filterText":"DodgerBlue","insertText":"DodgerBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"DodgerBlue"}},{"label":" FairyLight","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8FairyLight","filterText":"FairyLight","insertText":"FairyLight","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"FairyLight"}},{"label":" FairyLightNCC","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8FairyLightNCC","filterText":"FairyLightNCC","insertText":"FairyLightNCC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"FairyLightNCC"}},{"label":" FireBrick","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8FireBrick","filterText":"FireBrick","insertText":"FireBrick","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"FireBrick"}},{"label":" FloralWhite","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8FloralWhite","filterText":"FloralWhite","insertText":"FloralWhite","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"FloralWhite"}},{"label":" ForestGreen","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8ForestGreen","filterText":"ForestGreen","insertText":"ForestGreen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"ForestGreen"}},{"label":" Fuchsia","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Fuchsia","filterText":"Fuchsia","insertText":"Fuchsia","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Fuchsia"}},{"label":" Gainsboro","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Gainsboro","filterText":"Gainsboro","insertText":"Gainsboro","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Gainsboro"}},{"label":" GhostWhite","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8GhostWhite","filterText":"GhostWhite","insertText":"GhostWhite","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"GhostWhite"}},{"label":" Gold","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Gold","filterText":"Gold","insertText":"Gold","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Gold"}},{"label":" Goldenrod","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Goldenrod","filterText":"Goldenrod","insertText":"Goldenrod","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Goldenrod"}},{"label":" Gray","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Gray","filterText":"Gray","insertText":"Gray","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Gray"}},{"label":" Green","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Green","filterText":"Green","insertText":"Green","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Green"}},{"label":" GreenYellow","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8GreenYellow","filterText":"GreenYellow","insertText":"GreenYellow","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"GreenYellow"}},{"label":" Grey","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Grey","filterText":"Grey","insertText":"Grey","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Grey"}},{"label":" HTMLColorCode","kind":8,"sortText":"3f651eb8HTMLColorCode","filterText":"HTMLColorCode","insertText":"HTMLColorCode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"HTMLColorCode"}},{"label":" Honeydew","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Honeydew","filterText":"Honeydew","insertText":"Honeydew","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Honeydew"}},{"label":" HotPink","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8HotPink","filterText":"HotPink","insertText":"HotPink","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"HotPink"}},{"label":" IndianRed","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8IndianRed","filterText":"IndianRed","insertText":"IndianRed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"IndianRed"}},{"label":" Indigo","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Indigo","filterText":"Indigo","insertText":"Indigo","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Indigo"}},{"label":" Ivory","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Ivory","filterText":"Ivory","insertText":"Ivory","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Ivory"}},{"label":" Khaki","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Khaki","filterText":"Khaki","insertText":"Khaki","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Khaki"}},{"label":" Lavender","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Lavender","filterText":"Lavender","insertText":"Lavender","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"Lavender"}},{"label":" LavenderBlush","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8LavenderBlush","filterText":"LavenderBlush","insertText":"LavenderBlush","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"LavenderBlush"}},{"label":" LawnGreen","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8LawnGreen","filterText":"LawnGreen","insertText":"LawnGreen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"LawnGreen"}},{"label":" LemonChiffon","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8LemonChiffon","filterText":"LemonChiffon","insertText":"LemonChiffon","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"LemonChiffon"}},{"label":" LightBlue","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8LightBlue","filterText":"LightBlue","insertText":"LightBlue","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"LightBlue"}},{"label":" LightCoral","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8LightCoral","filterText":"LightCoral","insertText":"LightCoral","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"LightCoral"}},{"label":" LightCyan","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8LightCyan","filterText":"LightCyan","insertText":"LightCyan","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"newText":"LightCyan"}}]},"jsonrpc":"2.0"}Content-Length: 874

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":209,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 452

{"jsonrpc":"2.0","id":211,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"message":"Expected unqualified-id","severity":1,"code":"expected_unqualified_id","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":210,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":211,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":75}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":76},"contentChanges":[{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":21}},"rangeLength":0,"text":"O"}]}}Content-Length: 233

{"jsonrpc":"2.0","id":212,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":22},"context":{"triggerKind":3}}}Content-Length: 171

{"jsonrpc":"2.0","id":213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 7233

{"id":212,"result":{"isIncomplete":false,"items":[{"label":" operator=(…)","kind":2,"detail":"[3 overloads]","sortText":"3ebb0788operator=","filterText":"operator=","insertText":"operator=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator=($0)"}},{"label":" operator%=(uint8_t scaledown)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator%=","filterText":"operator%=","insertText":"operator%=(${1:uint8_t scaledown})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator%=(${1:uint8_t scaledown})"}},{"label":" operator\u0026=(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator\u0026=","filterText":"operator\u0026=","insertText":"operator\u0026=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator\u0026=($0)"}},{"label":" operator*=(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator*=","filterText":"operator*=","insertText":"operator*=(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator*=(${1:uint8_t d})"}},{"label":" operator++(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator++","filterText":"operator++","insertText":"operator++($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator++($0)"}},{"label":" operator+=(const CRGB \u0026rhs)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator+=","filterText":"operator+=","insertText":"operator+=(${1:const CRGB \u0026rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator+=(${1:const CRGB \u0026rhs})"}},{"label":" operator-()","kind":2,"detail":"CRGB","sortText":"3ed00000operator-","filterText":"operator-","insertText":"operator-()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator-()"}},{"label":" operator--(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator--","filterText":"operator--","insertText":"operator--($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator--($0)"}},{"label":" operator-=(const CRGB \u0026rhs)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator-=","filterText":"operator-=","insertText":"operator-=(${1:const CRGB \u0026rhs})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator-=(${1:const CRGB \u0026rhs})"}},{"label":" operator/=(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator/=","filterText":"operator/=","insertText":"operator/=(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator/=(${1:uint8_t d})"}},{"label":" operator\u003e\u003e=(uint8_t d)","kind":2,"detail":"CRGB \u0026","sortText":"3ed00000operator\u003e\u003e=","filterText":"operator\u003e\u003e=","insertText":"operator\u003e\u003e=(${1:uint8_t d})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator\u003e\u003e=(${1:uint8_t d})"}},{"label":" operator|=(…)","kind":2,"detail":"[2 overloads]","sortText":"3ed00000operator|=","filterText":"operator|=","insertText":"operator|=($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator|=($0)"}},{"label":" OldLace","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8OldLace","filterText":"OldLace","insertText":"OldLace","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"OldLace"}},{"label":" Olive","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Olive","filterText":"Olive","insertText":"Olive","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"Olive"}},{"label":" OliveDrab","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8OliveDrab","filterText":"OliveDrab","insertText":"OliveDrab","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"OliveDrab"}},{"label":" Orange","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Orange","filterText":"Orange","insertText":"Orange","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"Orange"}},{"label":" OrangeRed","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8OrangeRed","filterText":"OrangeRed","insertText":"OrangeRed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"OrangeRed"}},{"label":" Orchid","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"3f651eb8Orchid","filterText":"Orchid","insertText":"Orchid","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"Orchid"}},{"label":" operator bool() const","kind":3,"sortText":"3f651eb8operator bool","filterText":"operator bool","insertText":"operator bool()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator bool()"}},{"label":" operator[](…)","kind":2,"detail":"[2 overloads]","sortText":"3ff33333operator[]","filterText":"operator[]","insertText":"operator[](${1:uint8_t x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"operator[](${1:uint8_t x})"}},{"label":" DarkOliveGreen","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"80000000DarkOliveGreen","filterText":"DarkOliveGreen","insertText":"DarkOliveGreen","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"DarkOliveGreen"}},{"label":" DarkOrange","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"80000000DarkOrange","filterText":"DarkOrange","insertText":"DarkOrange","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"DarkOrange"}},{"label":" DarkOrchid","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"80000000DarkOrchid","filterText":"DarkOrchid","insertText":"DarkOrchid","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"DarkOrchid"}},{"label":" MediumOrchid","kind":20,"detail":"CRGB::HTMLColorCode","sortText":"80000000MediumOrchid","filterText":"MediumOrchid","insertText":"MediumOrchid","insertTextFormat":2,"textEdit":{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"newText":"MediumOrchid"}}]},"jsonrpc":"2.0"}Content-Length: 1066

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'O' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":213,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":77},"contentChanges":[{"range":{"start":{"line":94,"character":22},"end":{"line":94,"character":22}},"rangeLength":0,"text":"R"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":214,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1067

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":23}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'OR' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":214,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":78},"contentChanges":[{"range":{"start":{"line":94,"character":23},"end":{"line":94,"character":23}},"rangeLength":0,"text":"A"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":215,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1068

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORA' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":215,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":79},"contentChanges":[{"range":{"start":{"line":94,"character":24},"end":{"line":94,"character":24}},"rangeLength":0,"text":"N"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1069

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":25}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORAN' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":216,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":80},"contentChanges":[{"range":{"start":{"line":94,"character":25},"end":{"line":94,"character":25}},"rangeLength":0,"text":"G"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":217,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1070

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":26}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORANG' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":217,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":218,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":81},"contentChanges":[{"range":{"start":{"line":94,"character":26},"end":{"line":94,"character":26}},"rangeLength":0,"text":"E"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1071

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":27}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORANGE' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":219,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":82},"contentChanges":[{"range":{"start":{"line":94,"character":26},"end":{"line":94,"character":27}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":220,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1070

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":26}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORANG' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":220,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":83},"contentChanges":[{"range":{"start":{"line":94,"character":25},"end":{"line":94,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":221,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1069

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":25}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORAN' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":221,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":222,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":222,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":84},"contentChanges":[{"range":{"start":{"line":94,"character":24},"end":{"line":94,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":223,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1068

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'ORA' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":223,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":85},"contentChanges":[{"range":{"start":{"line":94,"character":23},"end":{"line":94,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":224,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1067

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":23}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'OR' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":224,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":225,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":86},"contentChanges":[{"range":{"start":{"line":94,"character":22},"end":{"line":94,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1066

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":22}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'O' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":226,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":87},"contentChanges":[{"range":{"start":{"line":94,"character":22},"end":{"line":94,"character":22}},"rangeLength":0,"text":"r"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":227,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1067

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":23}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'Or' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":227,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":88},"contentChanges":[{"range":{"start":{"line":94,"character":23},"end":{"line":94,"character":23}},"rangeLength":0,"text":"a"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":228,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1068

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":24}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'Ora' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":228,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":229,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":229,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":89},"contentChanges":[{"range":{"start":{"line":94,"character":24},"end":{"line":94,"character":24}},"rangeLength":0,"text":"n"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1069

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":25}},"severity":1,"code":"no_member","source":"clang","message":"No member named 'Oran' in 'CRGB'"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":230,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":230}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":90},"contentChanges":[{"range":{"start":{"line":94,"character":25},"end":{"line":94,"character":25}},"rangeLength":0,"text":"g"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1234

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":26}},"severity":1,"code":"no_member_suggest","source":"clang","message":"No member named 'Orang' in 'CRGB'; did you mean 'Orange'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:685:9:\nnote: 'Orange' declared here"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":231,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":91},"contentChanges":[{"range":{"start":{"line":94,"character":26},"end":{"line":94,"character":26}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":232,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 895

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_front'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":232,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":233,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":233,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":27},"end":{"line":94,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":234,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":235,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":92,"character":46}}}
>>>
Content-Length: 305

{"id":236,"result":{"contents":{"kind":"markdown","value":"### variable `ledsFront`  \n\n---\nType: `CRGB [4]`  \nValue = `{{{}}, {{}}, {{}}, {{}}}`  \nPassed as data  \n\n---\n```cpp\nCRGB ledsFront[4]\n```"},"range":{"start":{"line":92,"character":43},"end":{"line":92,"character":52}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":237,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":92,"character":46}}}Content-Length: 171

{"jsonrpc":"2.0","id":238,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 302

{"id":237,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"kind":1},{"range":{"start":{"line":92,"character":43},"end":{"line":92,"character":52}},"kind":1}],"jsonrpc":"2.0"}Content-Length: 3337

{"id":238,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":239,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":92,"character":46},"end":{"line":92,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":239,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":240,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":91}}}Content-Length: 274

{"jsonrpc":"2.0","id":241,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":92,"character":46},"end":{"line":92,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":241,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":242,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":243,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":11}}}
>>>
Content-Length: 286

{"id":243,"result":{"contents":{"kind":"markdown","value":"### variable `ledsFront`  \n\n---\nType: `CRGB [4]`  \nValue = `{{{}}, {{}}, {{}}, {{}}}`  \n\n---\n```cpp\nCRGB ledsFront[4]\n```"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"jsonrpc":"2.0","id":244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 190

{"id":244,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":26},"end":{"line":39,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":245,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":246,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":13}}}
>>>
Content-Length: 286

{"id":246,"result":{"contents":{"kind":"markdown","value":"### variable `ledsFront`  \n\n---\nType: `CRGB [4]`  \nValue = `{{{}}, {{}}, {{}}, {{}}}`  \n\n---\n```cpp\nCRGB ledsFront[4]\n```"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":40,"character":3},"end":{"line":40,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":247,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":248,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":9}}}
>>>
Content-Length: 286

{"id":248,"result":{"contents":{"kind":"markdown","value":"### variable `ledsFront`  \n\n---\nType: `CRGB [4]`  \nValue = `{{{}}, {{}}, {{}}, {{}}}`  \n\n---\n```cpp\nCRGB ledsFront[4]\n```"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 591

{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 190

{"id":249,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":250,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":39,"character":10}}}
>>>
Content-Length: 302

{"id":250,"result":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"kind":1},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"kind":1},{"range":{"start":{"line":92,"character":43},"end":{"line":92,"character":52}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 572

{"jsonrpc":"2.0","id":251,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":10},"end":{"line":39,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":14}},"message":"Use of undeclared identifier 'leds_front'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":251,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":92},"contentChanges":[{"range":{"start":{"line":39,"character":9},"end":{"line":39,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":252,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 893

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'leds_ront'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'leds_ront'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":252,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 293

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":93},"contentChanges":[{"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":253,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 891

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":12}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ledsront'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here"},{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}},"severity":3,"message":"'ledsFront' declared here\n\nproject.ino.cpp:59:5: error: use of undeclared identifier 'ledsront'; did you mean 'ledsFront'?"},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":253,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":93}}}Content-Length: 274

{"jsonrpc":"2.0","id":254,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 568

{"jsonrpc":"2.0","id":255,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":12}},"message":"Use of undeclared identifier 'ledsront'; did you mean 'ledsFront'? (fix available)\n\nproject.ino.cpp:21:6: note: 'ledsFront' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":254,"result":[],"jsonrpc":"2.0"}Content-Length: 190

{"id":255,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":94},"contentChanges":[{"range":{"start":{"line":39,"character":8},"end":{"line":39,"character":8}},"rangeLength":0,"text":"F"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":256,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":257,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":39,"character":9},"end":{"line":39,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":257,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":258,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":94}}}Content-Length: 200

{"jsonrpc":"2.0","id":259,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":45,"character":36}}}
>>>
Content-Length: 247

{"id":259,"result":{"contents":{"kind":"markdown","value":"### param `green`  \n\n---\nType: `int`  \n\n---\n```cpp\n// In setAllLeds\nint green\n```"},"range":{"start":{"line":45,"character":32},"end":{"line":45,"character":37}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":260,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":24}}}
>>>
Content-Length: 365

{"id":260,"result":{"contents":{"kind":"markdown","value":"### enumerator `Orange`  \n\n---\nType: `enum CRGB::HTMLColorCode`  \nValue = `16753920`  \nPassed as color (converted to const struct CRGB \u0026)  \n\n---\n```cpp\n// In CRGB\npublic: Orange = 0xFFA500\n```"},"range":{"start":{"line":94,"character":21},"end":{"line":94,"character":27}}},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":28},"end":{"line":94,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":261,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":95},"contentChanges":[{"range":{"start":{"line":94,"character":28},"end":{"line":94,"character":28}},"rangeLength":0,"text":";"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":262,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":262,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":29},"end":{"line":94,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":263,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":95}}}Content-Length: 200

{"jsonrpc":"2.0","id":265,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":121,"character":9}}}
>>>
Content-Length: 245

{"id":265,"result":{"contents":{"kind":"markdown","value":"### function `setLedsOff`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid setLedsOff()\n```"},"range":{"start":{"line":121,"character":4},"end":{"line":121,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":266,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":118,"character":4}}}
>>>
Content-Length: 666

{"id":266,"result":[{"range":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}},"kind":1},{"range":{"start":{"line":84,"character":15},"end":{"line":84,"character":22}},"kind":2},{"range":{"start":{"line":103,"character":4},"end":{"line":103,"character":11}},"kind":3},{"range":{"start":{"line":112,"character":5},"end":{"line":112,"character":12}},"kind":2},{"range":{"start":{"line":113,"character":21},"end":{"line":113,"character":28}},"kind":2},{"range":{"start":{"line":114,"character":33},"end":{"line":114,"character":40}},"kind":2},{"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":11}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":267,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":268,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":116,"character":48}}}
>>>
Content-Length: 282

{"id":268,"result":{"contents":{"kind":"markdown","value":"### variable `activityLow`  \n\n---\nType: `int`  \nValue = `2`  \nPassed as red  \n\n---\n```cpp\nint activityLow = 2\n```"},"range":{"start":{"line":116,"character":42},"end":{"line":116,"character":53}}},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":96},"contentChanges":[{"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":4}},"rangeLength":0,"text":"/"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":269,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":269,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":97},"contentChanges":[{"range":{"start":{"line":118,"character":5},"end":{"line":118,"character":5}},"rangeLength":0,"text":"/"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":270,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":272,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":118,"character":6},"end":{"line":118,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":271,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":272,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":97}}}Content-Length: 200

{"jsonrpc":"2.0","id":273,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":103,"character":9}}}
>>>
Content-Length: 262

{"id":273,"result":{"contents":{"kind":"markdown","value":"### variable `timerOn`  \n\n---\nType: `int`  \nValue = `8000`  \n\n---\n```cpp\nint timerOn = 8000\n```"},"range":{"start":{"line":103,"character":4},"end":{"line":103,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":274,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":121,"character":6}}}
>>>
Content-Length: 245

{"id":274,"result":{"contents":{"kind":"markdown","value":"### function `setLedsOff`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid setLedsOff()\n```"},"range":{"start":{"line":121,"character":4},"end":{"line":121,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":275,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":103,"character":6}}}
>>>
Content-Length: 262

{"id":275,"result":{"contents":{"kind":"markdown","value":"### variable `timerOn`  \n\n---\nType: `int`  \nValue = `8000`  \n\n---\n```cpp\nint timerOn = 8000\n```"},"range":{"start":{"line":103,"character":4},"end":{"line":103,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":276,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":4}}}
>>>
Content-Length: 270

{"id":276,"result":{"contents":{"kind":"markdown","value":"### variable `Serial`  \n\n---\nType: `class HardwareSerial`  \n\n---\n```cpp\nextern HardwareSerial Serial\n```"},"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":10}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":277,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":4}}}
>>>
Content-Length: 827

{"id":277,"result":[{"range":{"start":{"line":57,"character":9},"end":{"line":57,"character":15}},"kind":1},{"range":{"start":{"line":58,"character":24},"end":{"line":58,"character":30}},"kind":1},{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":10}},"kind":1},{"range":{"start":{"line":83,"character":2},"end":{"line":83,"character":8}},"kind":1},{"range":{"start":{"line":84,"character":2},"end":{"line":84,"character":8}},"kind":1},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":8}},"kind":1},{"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":8}},"kind":1},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":8}},"kind":1},{"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":10}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":278,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":278,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":98},"contentChanges":[{"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":4}},"rangeLength":0,"text":"/"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":279,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":279,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":99},"contentChanges":[{"range":{"start":{"line":104,"character":5},"end":{"line":104,"character":5}},"rangeLength":0,"text":"/"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":280,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":280,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":281,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":6},"end":{"line":104,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":281,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":282,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 168

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":99}}}Content-Length: 200

{"jsonrpc":"2.0","id":283,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":108,"character":8}}}
>>>
Content-Length: 40

{"id":283,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":284,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":8,"character":18}}}
>>>
Content-Length: 238

{"id":284,"result":{"contents":{"kind":"markdown","value":"### macro `MAX_LED_BRIGHTNESS`  \n\n---\n```cpp\n#define MAX_LED_BRIGHTNESS 255\n```"},"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":26}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":285,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":10,"character":15}}}
>>>
Content-Length: 221

{"id":285,"result":{"contents":{"kind":"markdown","value":"### macro `PIEZO_PIN`  \n\n---\n```cpp\n#define PIEZO_PIN A0\n```"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":286,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":10,"character":15}}}
>>>
Content-Length: 38

{"id":286,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":287,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":287,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":288,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":118,"character":6}}}
>>>
Content-Length: 38

{"id":288,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":289,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":118,"character":6},"end":{"line":118,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":289,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":100},"contentChanges":[{"range":{"start":{"line":118,"character":5},"end":{"line":118,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":290,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":290,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":101},"contentChanges":[{"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":291,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":291,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":293,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":118,"character":4},"end":{"line":118,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":292,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":293,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":101}}}Content-Length: 200

{"jsonrpc":"2.0","id":294,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":6}}}
>>>
Content-Length: 40

{"id":294,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":295,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":5}}}
>>>
Content-Length: 40

{"id":295,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":296,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":6}}}
>>>
Content-Length: 38

{"id":296,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":6},"end":{"line":104,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":297,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":102},"contentChanges":[{"range":{"start":{"line":104,"character":5},"end":{"line":104,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":298,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3337

{"id":298,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":103},"contentChanges":[{"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":299,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3337

{"id":299,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":300,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":301,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":300,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":301,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":103}}}Content-Length: 274

{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":303,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":4},"end":{"line":104,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":302,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":303,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 201

{"jsonrpc":"2.0","id":304,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":102,"character":30}}}
>>>
Content-Length: 237

{"id":304,"result":{"contents":{"kind":"markdown","value":"### macro `PIEZO_THRESHOLD`  \n\n---\n```cpp\n#define PIEZO_THRESHOLD 130\n```"},"range":{"start":{"line":102,"character":23},"end":{"line":102,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":305,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":13,"character":18}}}
>>>
Content-Length: 38

{"id":305,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":306,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":306,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":307,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":307,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":104},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":308,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3337

{"id":308,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":309,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":309,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":104}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":105},"contentChanges":[{"range":{"start":{"line":13,"character":16},"end":{"line":13,"character":16}},"rangeLength":0,"text":"6"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":310,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3337

{"id":310,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":20}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":37}},"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":54}},"selectionRange":{"start":{"line":21,"character":39},"end":{"line":21,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":38}},"selectionRange":{"start":{"line":22,"character":4},"end":{"line":22,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":21}},"selectionRange":{"start":{"line":26,"character":4},"end":{"line":26,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":26}},"selectionRange":{"start":{"line":27,"character":14},"end":{"line":27,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":35,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":42,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":44,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":44,"character":5},"end":{"line":44,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":311,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":311,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":105}}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":106},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":20,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":312,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 115

{"id":312,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2992,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3384

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":106,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define NUM_LEDS_FRONT 4\r\n#define LED_PIN_FRONT 5\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nCRGB ledsFront[NUM_LEDS_FRONT];\r\n\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setLedsFront(const struct CRGB &color) {\r\n  for (int i = 0; i < NUM_LEDS_FRONT; i++) {\r\n    ledsFront[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nvoid printDebugInfo() {\r\n  Serial.print(\"\\tTimer: \");\r\n  Serial.print(timerOn);\r\n  Serial.print(\"\\tLED brightness: \");\r\n  Serial.println(ledBrightness);\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN_FRONT>(ledsFront, NUM_LEDS);\r\n  FastLED.setBrightness(ledBrightness);\r\n  setLedsFront(CRGB::Orange);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":106}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 3335

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/37","percentage":10.81081081081081,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/37","percentage":13.513513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/37","percentage":16.216216216216218,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/37","percentage":18.91891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/37","percentage":21.62162162162162,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/37","percentage":24.324324324324323,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/37","percentage":27.027027027027028,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/37","percentage":29.72972972972973,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/37","percentage":32.432432432432435,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/37","percentage":35.13513513513514,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/37","percentage":37.83783783783784,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/37","percentage":40.54054054054054,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/37","percentage":43.24324324324324,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/37","percentage":45.945945945945944,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/37","percentage":48.648648648648646,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/37","percentage":51.351351351351354,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/37","percentage":54.054054054054056,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/37","percentage":56.75675675675676,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/37","percentage":59.45945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/37","percentage":62.16216216216216,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/37","percentage":64.86486486486487,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/37","percentage":67.56756756756756,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/37","percentage":70.27027027027027,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/37","percentage":72.97297297297297,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/37","percentage":75.67567567567568,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/37","percentage":78.37837837837837,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/37","percentage":81.08108108108108,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/37","percentage":83.78378378378379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/37","percentage":83.78378378378379,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/37","percentage":86.48648648648648,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/37","percentage":89.1891891891892,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/37","percentage":91.89189189189189,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/37","percentage":94.5945945945946,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/37","percentage":97.29729729729729,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":24,"character":18}}}
>>>
Content-Length: 294

{"id":3,"result":{"contents":{"kind":"markdown","value":"### variable `sensorReading`  \n\n---\nType: `int`  \nValue = `0`  \nswitch and shut off timer  \n\n---\n```cpp\nint sensorReading = 0\n```"},"range":{"start":{"line":24,"character":18},"end":{"line":24,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 197

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":29,"character":8}}}
>>>
Content-Length: 363

{"id":4,"result":{"contents":{"kind":"markdown","value":"### function `setLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int start`\n- `int end`\n- `const struct CRGB \u0026 color`\n\n---\n```cpp\nvoid setLeds(int start, int end, const struct CRGB \u0026color)\n```"},"range":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":19,"character":0},"end":{"line":20,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":5,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":6,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":20,"character":42}}}
>>>
Content-Length: 261

{"id":7,"result":{"contents":{"kind":"markdown","value":"### variable `activityLow`  \n\n---\nType: `int`  \nValue = `2`  \n\n---\n```cpp\nint activityLow = 2\n```"},"range":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":8,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":20,"character":43}}}
>>>
Content-Length: 261

{"id":8,"result":{"contents":{"kind":"markdown","value":"### variable `activityLow`  \n\n---\nType: `int`  \nValue = `2`  \n\n---\n```cpp\nint activityLow = 2\n```"},"range":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":113,"character":56}}}
>>>
Content-Length: 323

{"id":9,"result":{"contents":{"kind":"markdown","value":"### function `map`  \n\n---\n→ `long`  \nParameters:  \n- `long`\n- `long`\n- `long`\n- `long`\n- `long`\n\n---\n```cpp\nlong map(long, long, long, long, long)\n```"},"range":{"start":{"line":113,"character":56},"end":{"line":113,"character":57}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":82,"character":24}}}
>>>
Content-Length: 39

{"id":10,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":103,"character":24}}}
>>>
Content-Length: 39

{"id":11,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":81,"character":0},"end":{"line":86,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":12,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":107},"contentChanges":[{"range":{"start":{"line":81,"character":0},"end":{"line":86,"character":1}},"rangeLength":155,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 114

{"id":13,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2992,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3213

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":107,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define NUM_LEDS_FRONT 4\r\n#define LED_PIN_FRONT 5\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nCRGB ledsFront[NUM_LEDS_FRONT];\r\n\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setLedsFront(const struct CRGB &color) {\r\n  for (int i = 0; i < NUM_LEDS_FRONT; i++) {\r\n    ledsFront[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN_FRONT>(ledsFront, NUM_LEDS);\r\n  FastLED.setBrightness(ledBrightness);\r\n  setLedsFront(CRGB::Orange);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":108},"contentChanges":[{"range":{"start":{"line":80,"character":0},"end":{"line":81,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":109},"contentChanges":[{"range":{"start":{"line":79,"character":1},"end":{"line":80,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 169

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 270

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":79,"character":1},"end":{"line":79,"character":1}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 169

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":109}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 197

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":70,"character":8}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 3335

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":16}}},{"name":"printDebugInfo","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":19}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 113

{"id":3,"error":{"code":-32602,"message":"trying to get AST for non-added document","data":null},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2992,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3205

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":109,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define NUM_LEDS_FRONT 4\r\n#define LED_PIN_FRONT 5\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nCRGB ledsFront[NUM_LEDS_FRONT];\r\n\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setLedsFront(const struct CRGB &color) {\r\n  for (int i = 0; i < NUM_LEDS_FRONT; i++) {\r\n    ledsFront[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);  // GRB ordering is assumed\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN_FRONT>(ledsFront, NUM_LEDS);\r\n  FastLED.setBrightness(ledBrightness);\r\n  setLedsFront(CRGB::Orange);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    timerOn = TIME_ON;\r\n    Serial.println(\"timerOn reset\");\r\n  }\r\n\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  unsigned long dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  if(timerOn >= 0) {\r\n    ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n        MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n    FastLED.setBrightness(ledBrightness);\r\n    setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n    timerOn -= (int) dt;\r\n  \r\n  } else {\r\n    setLedsOff();\r\n  }\r\n\r\n  //printDebugInfo();\r\n  delay(50);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 197

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":68,"character":8}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 197

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":84,"character":8}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 36

{"id":1,"result":[],"jsonrpc":"2.0"}Content-Length: 3137

{"id":2,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":82,"character":0},"end":{"line":89,"character":1}},"selectionRange":{"start":{"line":82,"character":5},"end":{"line":82,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":118,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":3,"result":null,"jsonrpc":"2.0"}Content-Length: 255

{"id":4,"result":{"contents":{"kind":"markdown","value":"### variable `FastLED`  \n\n---\nType: `class CFastLED`  \n\n---\n```cpp\nextern CFastLED FastLED\n```"},"range":{"start":{"line":84,"character":2},"end":{"line":84,"character":9}}},"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/36","percentage":8.333333333333334,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/36","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/36","percentage":11.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/36","percentage":13.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/36","percentage":13.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/36","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/36","percentage":16.666666666666668,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/36","percentage":19.444444444444443,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/36","percentage":19.444444444444443,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/36","percentage":22.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/36","percentage":25,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/36","percentage":25,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/36","percentage":27.77777777777778,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/36","percentage":27.77777777777778,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/36","percentage":30.555555555555557,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/36","percentage":30.555555555555557,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/36","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/36","percentage":33.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/36","percentage":36.111111111111114,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/36","percentage":36.111111111111114,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/36","percentage":38.888888888888886,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/36","percentage":38.888888888888886,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/36","percentage":41.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/36","percentage":41.666666666666664,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/36","percentage":44.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/36","percentage":47.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/36","percentage":47.22222222222222,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/36","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/36","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/36","percentage":52.77777777777778,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/36","percentage":52.77777777777778,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/36","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/36","percentage":55.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/36","percentage":58.333333333333336,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/36","percentage":61.111111111111114,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/36","percentage":61.111111111111114,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/36","percentage":63.888888888888886,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/36","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/36","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/36","percentage":69.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/36","percentage":72.22222222222223,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/36","percentage":72.22222222222223,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/36","percentage":75,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/36","percentage":75,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/36","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/36","percentage":77.77777777777777,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/36","percentage":80.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/36","percentage":80.55555555555556,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/36","percentage":83.33333333333333,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/36","percentage":86.11111111111111,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/36","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/36","percentage":88.88888888888889,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/36","percentage":91.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/36","percentage":94.44444444444444,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/36","percentage":97.22222222222223,"kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":99,"character":31}}}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 197

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":92,"character":1}}}
>>>
Content-Length: 38

{"id":6,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 209

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":93,"character":2}}}
>>>
Content-Length: 299

{"id":7,"result":[{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}},"kind":1},{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":15}},"kind":3},{"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":92,"character":38},"end":{"line":93,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":8,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"id":9,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":5}}}
>>>
Content-Length: 39

{"id":10,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":6}}}
>>>
Content-Length: 300

{"id":11,"result":[{"range":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}},"kind":1},{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":15}},"kind":3},{"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":19}},"kind":2}],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 388

{"id":12,"result":[{"title":"Extract subexpression to variable","kind":"refactor","command":{"title":"Extract subexpression to variable","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractVariable","file":"file:///C:/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","selection":{"start":{"line":94,"character":6},"end":{"line":94,"character":37}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":38}}}
>>>
Content-Length: 234

{"id":13,"result":{"contents":{"kind":"markdown","value":"### macro `PIEZO_THRESHOLD`  \n\n---\n```cpp\n#define PIEZO_THRESHOLD 130\n```"},"range":{"start":{"line":94,"character":23},"end":{"line":94,"character":38}}},"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":95,"character":2}}}
>>>
Content-Length: 39

{"id":14,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":95,"character":4}}}
>>>
Content-Length: 574

{"id":15,"result":[{"range":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}},"kind":1},{"range":{"start":{"line":95,"character":4},"end":{"line":95,"character":11}},"kind":3},{"range":{"start":{"line":104,"character":5},"end":{"line":104,"character":12}},"kind":2},{"range":{"start":{"line":105,"character":21},"end":{"line":105,"character":28}},"kind":2},{"range":{"start":{"line":106,"character":33},"end":{"line":106,"character":40}},"kind":2},{"range":{"start":{"line":110,"character":4},"end":{"line":110,"character":11}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":95,"character":4},"end":{"line":95,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":16,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":95,"character":22}}}
>>>
Content-Length: 39

{"id":17,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":95,"character":17}}}
>>>
Content-Length: 219

{"id":18,"result":{"contents":{"kind":"markdown","value":"### macro `TIME_ON`  \n\n---\n```cpp\n#define TIME_ON 6000\n```"},"range":{"start":{"line":95,"character":14},"end":{"line":95,"character":21}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":13,"character":15}}}
>>>
Content-Length: 218

{"id":19,"result":{"contents":{"kind":"markdown","value":"### macro `TIME_ON`  \n\n---\n```cpp\n#define TIME_ON 6000\n```"},"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":15}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":13}}}
>>>
Content-Length: 294

{"id":20,"result":{"contents":{"kind":"markdown","value":"### variable `sensorReading`  \n\n---\nType: `int`  \nValue = `0`  \nswitch and shut off timer  \n\n---\n```cpp\nint sensorReading = 0\n```"},"range":{"start":{"line":94,"character":6},"end":{"line":94,"character":19}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":96,"character":21}}}
>>>
Content-Length: 39

{"id":21,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":95,"character":22},"end":{"line":95,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":22,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":95,"character":4}}}
>>>
Content-Length: 259

{"id":23,"result":{"contents":{"kind":"markdown","value":"### variable `timerOn`  \n\n---\nType: `int`  \nValue = `6000`  \n\n---\n```cpp\nint timerOn = 6000\n```"},"range":{"start":{"line":95,"character":4},"end":{"line":95,"character":11}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":110,"character":15}}}
>>>
Content-Length: 39

{"id":24,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":2}}}
>>>
Content-Length: 39

{"id":25,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":1}}}
>>>
Content-Length: 39

{"id":26,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":1}}}
>>>
Content-Length: 39

{"id":27,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":104,"character":2}}}
>>>
Content-Length: 37

{"id":28,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":2},"end":{"line":107,"character":41}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":29,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":104,"character":2},"end":{"line":108,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":30,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":108,"character":55},"end":{"line":108,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":31,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":3}}}
>>>
Content-Length: 39

{"id":32,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":2}}}
>>>
Content-Length: 39

{"id":33,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 210

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":94,"character":2}}}
>>>
Content-Length: 37

{"id":34,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":35,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":94,"character":2},"end":{"line":96,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 391

{"id":35,"result":[{"title":"Extract to function","kind":"refactor","command":{"title":"Extract to function","command":"clangd.applyTweak","arguments":[{"tweakID":"ExtractFunction","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server588172071/sketch/project.ino.cpp","selection":{"start":{"line":111,"character":2},"end":{"line":113,"character":6}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":97,"character":3},"end":{"line":97,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":36,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":108,"character":4}}}
>>>
Content-Length: 333

{"id":37,"result":{"contents":{"kind":"markdown","value":"### function `setAllLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int green`\n- `int yellow`\n- `int red`\n\n---\n```cpp\nvoid setAllLeds(int green, int yellow, int red)\n```"},"range":{"start":{"line":108,"character":4},"end":{"line":108,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":108,"character":3}}}
>>>
Content-Length: 39

{"id":38,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":39,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":108,"character":4}}}
>>>
Content-Length: 333

{"id":39,"result":{"contents":{"kind":"markdown","value":"### function `setAllLeds`  \n\n---\n→ `void`  \nParameters:  \n- `int green`\n- `int yellow`\n- `int red`\n\n---\n```cpp\nvoid setAllLeds(int green, int yellow, int red)\n```"},"range":{"start":{"line":108,"character":4},"end":{"line":108,"character":14}}},"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":108,"character":4}}}
>>>
Content-Length: 302

{"id":40,"result":[{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"kind":1},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"kind":1},{"range":{"start":{"line":108,"character":4},"end":{"line":108,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":108,"character":4},"end":{"line":108,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":41,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 275

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":108,"character":55},"end":{"line":108,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":42,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":89,"character":1},"end":{"line":89,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":43,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":69,"character":13}}}
>>>
Content-Length: 39

{"id":44,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 271

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":53,"character":1},"end":{"line":53,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":45,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":110},"contentChanges":[{"range":{"start":{"line":53,"character":1},"end":{"line":53,"character":1}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3138

{"id":46,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":80,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":83,"character":0},"end":{"line":90,"character":1}},"selectionRange":{"start":{"line":83,"character":5},"end":{"line":83,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":92,"character":0},"end":{"line":119,"character":1}},"selectionRange":{"start":{"line":92,"character":5},"end":{"line":92,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":111},"contentChanges":[{"range":{"start":{"line":54,"character":0},"end":{"line":54,"character":0}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3138

{"id":47,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":111}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":1,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":112},"contentChanges":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":0}},"rangeLength":0,"text":"v"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 333

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'v'"}]},"jsonrpc":"2.0"}Content-Length: 3138

{"id":48,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"jsonrpc":"2.0","id":49,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":55,"character":1},"context":{"triggerKind":1}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":113},"contentChanges":[{"range":{"start":{"line":55,"character":1},"end":{"line":55,"character":1}},"rangeLength":0,"text":"o"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":114},"contentChanges":[{"range":{"start":{"line":55,"character":2},"end":{"line":55,"character":2}},"rangeLength":0,"text":"i"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":115},"contentChanges":[{"range":{"start":{"line":55,"character":3},"end":{"line":55,"character":3}},"rangeLength":0,"text":"d"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":116},"contentChanges":[{"range":{"start":{"line":55,"character":4},"end":{"line":55,"character":4}},"rangeLength":0,"text":" "}]}}Content-Length: 170

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":117},"contentChanges":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":5}},"rangeLength":0,"text":"p"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":118},"contentChanges":[{"range":{"start":{"line":55,"character":6},"end":{"line":55,"character":6}},"rangeLength":0,"text":"u"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","ve
>>>
Content-Length: 16361

{"id":49,"result":{"isIncomplete":true,"items":[{"label":" void","kind":14,"sortText":"3f000000void","filterText":"void","insertText":"void","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"void"}},{"label":" volatile","kind":14,"sortText":"3f000000volatile","filterText":"volatile","insertText":"volatile","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"volatile"}},{"label":" va_list","kind":8,"sortText":"4068a03fva_list","filterText":"va_list","insertText":"va_list","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"va_list"}},{"label":" vfprintf(FILE *__stream, const char *__fmt, va_list __ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\c vfprintf is the central facility of the \\\\c printf family of functions. It outputs values to \\\\c stream under control of a format string passed in \\\\c fmt. The actual values to print are passed as a variable argument list \\\\c ap.  \n\\\\c vfprintf returns the number of characters written to \\\\c stream,  \nor \\\\c EOF in case of an error. Currently, this will only happen if \\\\c stream has not been opened with write intent.  \nThe format string is composed of zero or more directives: ordinary characters (not \\\\c %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the \\\\c % character. The arguments must properly correspond (after type promotion) with the conversion specifier. After the \\\\c %, the following appear in sequence:  \n\\- Zero or more of the following flags:  \n\\\u003cul\u003e \\\u003cli\u003e \\\\c # The value should be converted to an \"alternate form\". For c, d, i, s, and u conversions, this option has no effect.  \nFor o conversions, the precision of the number is increased to force the first character of the output string to a zero (except if a zero value is printed with an explicit precision of zero). For x and X conversions,  \na non-zero result has the string \\`0x' (or \\`0X' for X conversions) prepended to it.\\\u003c/li\u003e \\\u003cli\u003e \\\\c 0 (zero) Zero padding. For all conversions, the converted value is padded on the left with zeros rather than blanks.  \nIf a precision is given with a numeric conversion (d, i,  \no, u, i, x, and X), the 0 flag is ignored.\\\u003c/li\u003e \\\u003cli\u003e \\\\c - A negative field width flag; the converted value is to be left adjusted on the field boundary. The converted value is padded on the right with blanks, rather than on the left with blanks or zeros. A - overrides a 0 if both are given.\\\u003c/li\u003e \\\u003cli\u003e ' ' (space) A blank should be left before a positive number produced by a signed conversion (d, or i).\\\u003c/li\u003e \\\u003cli\u003e \\\\c + A sign must always be placed before a number produced by a signed conversion. A + overrides a space if both are used.\\\u003c/li\u003e \\\u003c/ul\u003e  \n\\- An optional decimal digit string specifying a minimum field width.  \nIf the converted value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the left-adjustment flag has been given) to fill out the field width.  \n\\- An optional precision, in the form of a period . followed by an optional digit string. If the digit string is omitted, the precision is taken as zero. This gives the minimum number of digits to appear for d, i, o, u, x, and X conversions, or the maximum number of characters to be printed from a string for \\\\c s conversions.  \n\\- An optional \\\\c l or \\\\c h length modifier, that specifies that the argument for the d, i, o, u, x, or X conversion is a \\\\c \"long int\" rather than \\\\c int. The \\\\c h is ignored, as \\\\c \"short int\" is equivalent to \\\\c int.  \n\\- A character that specifies the type of conversion to be applied.  \nThe conversion specifiers and their meanings are:  \n\\- \\\\c diouxX The int (or appropriate variant) argument is converted to signed decimal (d and i), unsigned octal (o), unsigned decimal (u), or unsigned hexadecimal (x and X) notation.  \nThe letters \"abcdef\" are used for x conversions; the letters \"ABCDEF\" are used for X conversions. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits,  \nit is padded on the left with zeros.  \n\\- \\\\c p The \\\u003ctt\u003evoid \\*\\\u003c/tt\u003e argument is taken as an unsigned integer,  \nand converted similarly as a \\\u003ctt\u003e%\\\\#x\\\u003c/tt\u003e command would do.  \n\\- \\\\c c The \\\\c int argument is converted to an \\\\c \"unsigned char\", and the resulting character is written.  \n\\- \\\\c s The \\\\c \"char \\*\" argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating NUL character; if a precision is specified, no more than the number specified are written. If a precision is given, no null character need be present; if the precision is not specified, or is greater than the size of the array, the array must contain a terminating NUL character.  \n\\- \\\\c % A \\\\c % is written. No argument is converted. The complete conversion specification is \"%%\".  \n\\- \\\\c eE The double argument is rounded and converted in the format  \n\\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision; if the precision is missing, it is taken as 6; if the precision is zero, no decimal-point character appears. An \\\\e E conversion uses the letter \\\\c 'E' (rather than \\\\c 'e') to introduce the exponent. The exponent always contains two digits; if the value is zero,  \nthe exponent is 00.  \n\\- \\\\c fF The double argument is rounded and converted to decimal notation in the format \\\\c \"[-]ddd.ddd\", where the number of digits after the decimal-point character is equal to the precision specification.  \nIf the precision is missing, it is taken as 6; if the precision is explicitly zero, no decimal-point character appears. If a decimal point appears, at least one digit appears before it.  \n\\- \\\\c gG The double argument is converted in style \\\\c f or \\\\c e (or  \n\\\\c F or \\\\c E for \\\\c G conversions). The precision specifies the number of significant digits. If the precision is missing, 6 digits are given; if the precision is zero, it is treated as 1. Style \\\\c e is used if the exponent from its conversion is less than -4 or greater than or equal to the precision. Trailing zeros are removed from the fractional part of the result; a decimal point appears only if it is followed by at least one digit.  \n\\- \\\\c S Similar to the \\\\c s format, except the pointer is expected to point to a program-memory (ROM) string instead of a RAM string.  \nIn no case does a non-existent or small field width cause truncation of a numeric field; if the result of a conversion is wider than the field width, the field is expanded to contain the conversion result.  \nSince the full implementation of all the mentioned features becomes fairly large, three different flavours of vfprintf() can be selected using linker options. The default vfprintf() implements all the mentioned functionality except floating point conversions.  \nA minimized version of vfprintf() is available that only implements the very basic integer and string conversion facilities, but only the \\\\c # additional option can be specified using conversion flags (these flags are parsed correctly from the format specification, but then simply ignored). This version can be requested using the following \\\\ref gcc_minusW \"compiler options\":  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_min  \n\\\\endcode  \nIf the full functionality including the floating point conversions is required, the following options should be used:  \n\\\\code  \n-Wl,-u,vfprintf -lprintf_flt -lm  \n\\\\endcode  \n\\\\par Limitations:  \n\\- The specified width and precision can be at most 255.  \n\\\\par Notes:  \n\\- For floating-point conversions, if you link default or minimized version of vfprintf(), the symbol \\\\c ? will be output and double argument will be skiped. So you output below will not be crashed.  \nFor default version the width field and the \"pad to left\" ( symbol minus ) option will work in this case.  \n\\- The \\\\c hh length modifier is ignored (\\\\c char argument is promouted to \\\\c int). More exactly, this realization does not check the number of \\\\c h symbols.  \n\\- But the \\\\c ll length modifier will to abort the output, as this realization does not operate \\\\c long \\\\c long arguments.  \n\\- The variable width or precision field (an asterisk \\\\c * symbol) is not realized and will to abort the output."},"sortText":"4068a03fvfprintf","filterText":"vfprintf","insertText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vfprintf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})"}},{"label":" vfprintf_P(FILE *__stream, const char *__fmt, va_list __ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vfprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03fvfprintf_P","filterText":"vfprintf_P","insertText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vfprintf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})"}},{"label":" vfscanf(FILE *__stream, const char *__fmt, va_list __ap)","kind":3,"detail":"int","sortText":"4068a03fvfscanf","filterText":"vfscanf","insertText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vfscanf(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})"}},{"label":" vfscanf_P(FILE *__stream, const char *__fmt, va_list __ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of vfscanf() using a \\\\c fmt string in program memory."},"sortText":"4068a03fvfscanf_P","filterText":"vfscanf_P","insertText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vfscanf_P(${1:FILE *__stream}, ${2:const char *__fmt}, ${3:va_list __ap})"}},{"label":"•voidFuncPtr","kind":8,"documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"4068a03fvoidFuncPtr","filterText":"voidFuncPtr","insertText":"voidFuncPtr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"voidFuncPtr"}},{"label":" vprintf(const char *__fmt, va_list __ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vprintf performs formatted output to stream  \n\\\\c stdout, taking a variable argument list as in vfprintf().  \nSee vfprintf() for details."},"sortText":"4068a03fvprintf","filterText":"vprintf","insertText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vprintf(${1:const char *__fmt}, ${2:va_list __ap})"}},{"label":" vscanf(const char *__fmt, va_list __ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c vscanf performs formatted input from stream  \n\\\\c stdin, taking a variable argument list as in vfscanf().  \nSee vfscanf() for details."},"sortText":"4068a03fvscanf","filterText":"vscanf","insertText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vscanf(${1:const char *__fmt}, ${2:va_list __ap})"}},{"label":" vsnprintf(char *__s, size_t __n, const char *__fmt, va_list ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c vsprintf(), but instead of assuming \\\\c s to be of infinite size, no more than \\\\c n characters (including the trailing NUL character) will be converted to \\\\c s.  \nReturns the number of characters that would have been written to  \n\\\\c s if there were enough space."},"sortText":"4068a03fvsnprintf","filterText":"vsnprintf","insertText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vsnprintf(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})"}},{"label":" vsnprintf_P(char *__s, size_t __n, const char *__fmt, va_list ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsnprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03fvsnprintf_P","filterText":"vsnprintf_P","insertText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vsnprintf_P(${1:char *__s}, ${2:size_t __n}, ${3:const char *__fmt}, ${4:va_list ap})"}},{"label":" vsprintf(char *__s, const char *__fmt, va_list ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Like \\\\c sprintf() but takes a variable argument list for the arguments."},"sortText":"4068a03fvsprintf","filterText":"vsprintf","insertText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vsprintf(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})"}},{"label":" vsprintf_P(char *__s, const char *__fmt, va_list ap)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c vsprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03fvsprintf_P","filterText":"vsprintf_P","insertText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"vsprintf_P(${1:char *__s}, ${2:const char *__fmt}, ${3:va_list ap})"}},{"label":"•VIRTUAL_BITS","kind":1,"documentation":{"kind":"markdown","value":"From `\"controller.h\"`"},"sortText":"40f66322VIRTUAL_BITS","filterText":"VIRTUAL_BITS","insertText":"VIRTUAL_BITS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"VIRTUAL_BITS"}},{"label":" va_arg(v, l)","kind":1,"sortText":"40f66322va_arg","filterText":"va_arg","insertText":"va_arg(${1:v}, ${2:l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"va_arg(${1:v}, ${2:l})"}},{"label":" va_copy(d, s)","kind":1,"sortText":"40f66322va_copy","filterText":"va_copy","insertText":"va_copy(${1:d}, ${2:s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"va_copy(${1:d}, ${2:s})"}},{"label":" va_end(v)","kind":1,"sortText":"40f66322va_end","filterText":"va_end","insertText":"va_end(${1:v})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"va_end(${1:v})"}},{"label":" va_start(v, l)","kind":1,"sortText":"40f66322va_start","filterText":"va_start","insertText":"va_start(${1:v}, ${2:l})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":1}},"newText":"va_start(${1:v}, ${2:l})"}}]},"jsonrpc":"2.0"}Content-Length: 334

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":2}},"severity":1,"code":"unknown_typename","source":"clang","message":"Unknown type name 'vo'"}]},"jsonrpc":"2.0"}Content-Length: 3138

{"id":50,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 598

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":3}},"severity":1,"code":"unknown_typename_suggest","source":"clang","message":"Unknown type name 'voi'; did you mean 'void'? (fix available)"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'void' declaration specifier"}]},"jsonrpc":"2.0"}Content-Length: 3138

{"id":51,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'void' declaration specifier"}]},"jsonrpc":"2.0"}Content-Length: 3138

{"id":52,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 382

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_decl_spec_combination","source":"clang","message":"Cannot combine with previous 'void' declaration specifier"}]},"jsonrpc":"2.0"}Content-Length: 3138

{"id":53,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 586

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":6}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3322

{"id":54,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"p","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":6}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":6}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 586

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":7}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3323

{"id":55,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pu","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":7}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":7}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
rsion":119},"contentChanges":[{"range":{"start":{"line":55,"character":7},"end":{"line":55,"character":7}},"rangeLength":0,"text":"l"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":120},"contentChanges":[{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":8}},"rangeLength":0,"text":"s"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 273

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":57}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":121},"contentChanges":[{"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":9}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 170

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 232

{"jsonrpc":"2.0","id":60,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":55,"character":10},"context":{"triggerKind":1}}}
>>>
Content-Length: 586

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":8}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3324

{"id":56,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pul","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":8}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":8}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 586

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3325

{"id":57,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"puls","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":9}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 37

{"id":58,"result":[],"jsonrpc":"2.0"}Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3328

{"id":59,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulse","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":10}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 2444

{"id":60,"result":{"isIncomplete":false,"items":[{"label":" pulseIn(uint8_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nMeasures the length (in microseconds) of a pulse on the pin; state is HIGH or LOW, the type of pulse to measure. Works on pulses from 2-3 microseconds to 3 minutes in length, but must be called at least a few dozen microseconds before the start of the pulse.  \nThis function performs better with short pulses in noInterrupt() context"},"sortText":"405d8e68pulseIn","filterText":"pulseIn","insertText":"pulseIn(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}},"newText":"pulseIn(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":" pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nMeasures the length (in microseconds) of a pulse on the pin; state is HIGH or LOW, the type of pulse to measure. Works on pulses from 2-3 microseconds to 3 minutes in length, but must be called at least a few dozen microseconds before the start of the pulse.  \nATTENTION:  \nthis function relies on micros() so cannot be used in noInterrupt() context"},"sortText":"405d8e68pulseInLong","filterText":"pulseInLong","insertText":"pulseInLong(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}},"newText":"pulseInLong(${1:uint8_t pin}, ${2:uint8_t state}, ${3:unsigned long timeout})"}},{"label":"•countPulseASM(volatile uint8_t *port, uint8_t bit, uint8_t stateMask, unsigned long maxloops)","kind":3,"detail":"uint32_t","documentation":{"kind":"markdown","value":"From `\"wiring_private.h\"`"},"sortText":"409cf05ecountPulseASM","filterText":"countPulseASM","insertText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}},"newText":"countPulseASM(${1:volatile uint8_t *port}, ${2:uint8_t bit}, ${3:uint8_t stateMask}, ${4:unsigned long maxloops})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":122},"contentChanges":[{"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":10}},"rangeLength":0,"text":"L"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":11}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3329

{"id":61,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseL","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":11}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":11}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":62,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":123},"contentChanges":[{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":11}},"rangeLength":0,"text":"e"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":2,"jsonrpc":"2.0"}Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":12}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3330

{"id":63,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLe","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":12}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":12}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 157

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/3","percentage":66.66666666666667,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":124},"contentChanges":[{"range":{"start":{"line":55,"character":12},"end":{"line":55,"character":12}},"rangeLength":0,"text":"d"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":13}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3331

{"id":64,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLed","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":13}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":13}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":125},"contentChanges":[{"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":13}},"rangeLength":0,"text":"d"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":65,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLedd","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":14}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":126},"contentChanges":[{"range":{"start":{"line":55,"character":14},"end":{"line":55,"character":14}},"rangeLength":0,"text":"s"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":15}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3333

{"id":66,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLedds","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":15}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":15}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":127},"contentChanges":[{"range":{"start":{"line":55,"character":14},"end":{"line":55,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":67,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLedd","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":14}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":128},"contentChanges":[{"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 170

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":13}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3331

{"id":68,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLed","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":13}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":13}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":68}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":129},"contentChanges":[{"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":13}},"rangeLength":0,"text":"s"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 587

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}},"severity":1,"code":"typecheck_decl_incomplete_type","source":"clang","message":"Variable has incomplete type 'void'"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":69,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":13,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":14}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 469

{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":55,"character":14},"end":{"line":55,"character":14}},"context":{"diagnostics":[{"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}},"message":"Variable has incomplete type 'void'","severity":1,"code":"typecheck_decl_incomplete_type","source":"clang"}]}}}
>>>
Content-Length: 37

{"id":70,"result":[],"jsonrpc":"2.0"}Content-Length: 37

{"id":71,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":130},"contentChanges":[{"range":{"start":{"line":55,"character":14},"end":{"line":55,"character":14}},"rangeLength":0,"text":"()"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 390

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":72,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":16}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":73,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":74,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":55,"character":15},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 92

{"id":74,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":131},"contentChanges":[{"range":{"start":{"line":55,"character":15},"end":{"line":55,"character":16}},"rangeLength":1,"text":")"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":75,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":16}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":76,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":76,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"jsonrpc":"2.0","id":77,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":55,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":77,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":132},"contentChanges":[{"range":{"start":{"line":55,"character":16},"end":{"line":55,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 170

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 390

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"severity":1,"code":"invalid_token_after_toplevel_declarator","source":"clang","message":"Expected ';' after top level declarator (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":78,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":16}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"jsonrpc":"2.0","id":79,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":55,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":79,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":80,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":81,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":81,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":133},"contentChanges":[{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":17}},"rangeLength":0,"text":"{}"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":82,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":19}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":91,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":120,"character":1}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"jsonrpc":"2.0","id":83,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":55,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":83,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":84,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":85,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":134},"contentChanges":[{"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"rangeLength":0,"text":"\r\n  \r\n"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3905

{"id":86,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":18}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":84,"character":12}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":93,"character":11}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 253

{"jsonrpc":"2.0","id":87,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":2},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":87,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":88,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":89,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":89,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":135},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"w"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'w'"}]},"jsonrpc":"2.0"}Content-Length: 3905

{"id":90,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":18}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":84,"character":12}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":93,"character":11}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 231

{"jsonrpc":"2.0","id":91,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 15531

{"id":91,"result":{"isIncomplete":false,"items":[{"label":" wchar_t","kind":14,"sortText":"3f000000wchar_t","filterText":"wchar_t","insertText":"wchar_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"wchar_t"}},{"label":" while (condition) {statements}","kind":15,"sortText":"3f000000while","filterText":"while","insertText":"while (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"while (${1:condition}) {\n${0:statements}\n}"}},{"label":" WS2801","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2801","filterText":"WS2801","insertText":"WS2801","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2801"}},{"label":" WS2803","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2803","filterText":"WS2803","insertText":"WS2803","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2803"}},{"label":" WS2811\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2811","filterText":"WS2811","insertText":"WS2811\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2811\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" WS2811_400\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2811_400","filterText":"WS2811_400","insertText":"WS2811_400\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2811_400\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" WS2812\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2812","filterText":"WS2812","insertText":"WS2812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" WS2812B\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2812B","filterText":"WS2812B","insertText":"WS2812B\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2812B\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" WS2812SERIAL","kind":20,"detail":"SWS2812","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2812SERIAL","filterText":"WS2812SERIAL","insertText":"WS2812SERIAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2812SERIAL"}},{"label":" WS2813\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2813","filterText":"WS2813","insertText":"WS2813\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2813\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" WS2852\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68WS2852","filterText":"WS2852","insertText":"WS2852\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2852\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" word","kind":8,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68word","filterText":"word","insertText":"word","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"word"}},{"label":"•WS2801Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nWS2801 controller class.  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(1)"},"sortText":"4068a03fWS2801Controller","filterText":"WS2801Controller","insertText":"WS2801Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2801Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•WS2803Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fWS2803Controller","filterText":"WS2803Controller","insertText":"WS2803Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2803Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•WS2811Controller400Khz\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fWS2811Controller400Khz","filterText":"WS2811Controller400Khz","insertText":"WS2811Controller400Khz\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2811Controller400Khz\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•WS2811Controller800Khz\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fWS2811Controller800Khz","filterText":"WS2811Controller800Khz","insertText":"WS2811Controller800Khz\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2811Controller800Khz\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•WS2812Controller800Khz\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nWS2811@800khz 2 clocks, 5 clocks, 3 clocks"},"sortText":"4068a03fWS2812Controller800Khz","filterText":"WS2812Controller800Khz","insertText":"WS2812Controller800Khz\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2812Controller800Khz\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•WS2813Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fWS2813Controller","filterText":"WS2813Controller","insertText":"WS2813Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WS2813Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•WarmFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 244, 229"},"sortText":"4068a03fWarmFluorescent","filterText":"WarmFluorescent","insertText":"WarmFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WarmFluorescent"}},{"label":" wdt_disable()","kind":3,"detail":"void","sortText":"4068a03fwdt_disable","filterText":"wdt_disable","insertText":"wdt_disable()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"wdt_disable()"}},{"label":" wdt_enable(const uint8_t value)","kind":3,"detail":"void","sortText":"4068a03fwdt_enable","filterText":"wdt_enable","insertText":"wdt_enable(${1:const uint8_t value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"wdt_enable(${1:const uint8_t value})"}},{"label":" WCHAR_MAX","kind":1,"sortText":"40ec52eaWCHAR_MAX","filterText":"WCHAR_MAX","insertText":"WCHAR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WCHAR_MAX"}},{"label":" WCHAR_MIN","kind":1,"sortText":"40ec52eaWCHAR_MIN","filterText":"WCHAR_MIN","insertText":"WCHAR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WCHAR_MIN"}},{"label":" WCOL","kind":1,"sortText":"40ec52eaWCOL","filterText":"WCOL","insertText":"WCOL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WCOL"}},{"label":" WDCE","kind":1,"sortText":"40ec52eaWDCE","filterText":"WDCE","insertText":"WDCE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDCE"}},{"label":" WDE","kind":1,"sortText":"40ec52eaWDE","filterText":"WDE","insertText":"WDE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDE"}},{"label":" WDIE","kind":1,"sortText":"40ec52eaWDIE","filterText":"WDIE","insertText":"WDIE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDIE"}},{"label":" WDIF","kind":1,"sortText":"40ec52eaWDIF","filterText":"WDIF","insertText":"WDIF","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDIF"}},{"label":" WDP0","kind":1,"sortText":"40ec52eaWDP0","filterText":"WDP0","insertText":"WDP0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDP0"}},{"label":" WDP1","kind":1,"sortText":"40ec52eaWDP1","filterText":"WDP1","insertText":"WDP1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDP1"}},{"label":" WDP2","kind":1,"sortText":"40ec52eaWDP2","filterText":"WDP2","insertText":"WDP2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDP2"}},{"label":" WDP3","kind":1,"sortText":"40ec52eaWDP3","filterText":"WDP3","insertText":"WDP3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDP3"}},{"label":" WDRF","kind":1,"sortText":"40ec52eaWDRF","filterText":"WDRF","insertText":"WDRF","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDRF"}},{"label":" WDTCSR","kind":1,"sortText":"40ec52eaWDTCSR","filterText":"WDTCSR","insertText":"WDTCSR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDTCSR"}},{"label":" WDT_vect","kind":1,"sortText":"40ec52eaWDT_vect","filterText":"WDT_vect","insertText":"WDT_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDT_vect"}},{"label":" WDT_vect_num","kind":1,"sortText":"40ec52eaWDT_vect_num","filterText":"WDT_vect_num","insertText":"WDT_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WDT_vect_num"}},{"label":" WGM00","kind":1,"sortText":"40ec52eaWGM00","filterText":"WGM00","insertText":"WGM00","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM00"}},{"label":" WGM01","kind":1,"sortText":"40ec52eaWGM01","filterText":"WGM01","insertText":"WGM01","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM01"}},{"label":" WGM02","kind":1,"sortText":"40ec52eaWGM02","filterText":"WGM02","insertText":"WGM02","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM02"}},{"label":" WGM10","kind":1,"sortText":"40ec52eaWGM10","filterText":"WGM10","insertText":"WGM10","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM10"}},{"label":" WGM11","kind":1,"sortText":"40ec52eaWGM11","filterText":"WGM11","insertText":"WGM11","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM11"}},{"label":" WGM12","kind":1,"sortText":"40ec52eaWGM12","filterText":"WGM12","insertText":"WGM12","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM12"}},{"label":" WGM13","kind":1,"sortText":"40ec52eaWGM13","filterText":"WGM13","insertText":"WGM13","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM13"}},{"label":" WGM20","kind":1,"sortText":"40ec52eaWGM20","filterText":"WGM20","insertText":"WGM20","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM20"}},{"label":" WGM21","kind":1,"sortText":"40ec52eaWGM21","filterText":"WGM21","insertText":"WGM21","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM21"}},{"label":" WGM22","kind":1,"sortText":"40ec52eaWGM22","filterText":"WGM22","insertText":"WGM22","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WGM22"}},{"label":" WINT_MAX","kind":1,"sortText":"40ec52eaWINT_MAX","filterText":"WINT_MAX","insertText":"WINT_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WINT_MAX"}},{"label":" WINT_MIN","kind":1,"sortText":"40ec52eaWINT_MIN","filterText":"WINT_MIN","insertText":"WINT_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"WINT_MIN"}},{"label":" word(...)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaword","filterText":"word","insertText":"word(${1:...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"word(${1:...})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 253

{"jsonrpc":"2.0","id":92,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":3},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 92

{"id":92,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":136},"contentChanges":[{"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":3}},"rangeLength":0,"text":"h"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'wh'"}]},"jsonrpc":"2.0"}Content-Length: 3905

{"id":93,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":18}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":84,"character":12}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":93,"character":11}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":93}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":137},"contentChanges":[{"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whi'"}]},"jsonrpc":"2.0"}Content-Length: 3905

{"id":94,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":18}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":84,"character":12}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":93,"character":11}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":94}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":138},"contentChanges":[{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"rangeLength":0,"text":"l"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":95}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":139},"contentChanges":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":6}},"rangeLength":0,"text":"e"}]}}Content-Length: 170

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whil'"}]},"jsonrpc":"2.0"}Content-Length: 3905

{"id":95,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":18}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":84,"character":12}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":93,"character":11}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 512

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'while'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:142:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 3334

{"id":96,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":18}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":84,"character":12}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":93,"character":0},"end":{"line":93,"character":11}},"selectionRange":{"start":{"line":93,"character":5},"end":{"line":93,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":123,"character":0}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 253

{"jsonrpc":"2.0","id":98,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":7},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 37

{"id":97,"result":[],"jsonrpc":"2.0"}Content-Length: 92

{"id":98,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":100,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"id":99,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":100,"result":[],"jsonrpc":"2.0"}Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":3,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":140},"contentChanges":[{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"rangeLength":0,"text":"()"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 501

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":9}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":101,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 277

{"jsonrpc":"2.0","id":102,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":8},"context":{"isRetrigger":true,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 274

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":8}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":140}}}
>>>
Content-Length: 93

{"id":102,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":103,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":104,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 440

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":9}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":105,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":106,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":107,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":107,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 440

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":9}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":108,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 440

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":9}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":109,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":141},"contentChanges":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":4,"jsonrpc":"2.0"}Content-Length: 706

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nproject.ino.cpp:75:18: note: to match this '{'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:144:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 2761

{"id":110,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":123,"character":0}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":142},"contentChanges":[{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 715

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'while'"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nproject.ino.cpp:75:18: note: to match this '{'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:144:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 2761

{"id":111,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":123,"character":0}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":143},"contentChanges":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whil'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":112,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":144},"contentChanges":[{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'whi'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":113,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":145},"contentChanges":[{"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'wh'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":114,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":146},"contentChanges":[{"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'w'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":115,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":147},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":116,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":116,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":117,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":118,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":148},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"f"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'f'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":119,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":120,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 47336

{"id":120,"result":{"isIncomplete":true,"items":[{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3edf1b51FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FastLED"}},{"label":" fract8","kind":8,"documentation":{"kind":"markdown","value":"ANSI unsigned short \\_Fract. range is 0 to 0.99609375 in steps of 0.00390625"},"sortText":"3eff2eb1fract8","filterText":"fract8","insertText":"fract8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fract8"}},{"label":" false","kind":15,"detail":"bool","sortText":"3f000000false","filterText":"false","insertText":"false","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"false"}},{"label":" float","kind":14,"sortText":"3f000000float","filterText":"float","insertText":"float","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"float"}},{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3f000000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" FILE","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\c FILE is the opaque structure that is passed around between the various standard IO functions."},"sortText":"3f17ae13FILE","filterText":"FILE","insertText":"FILE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FILE"}},{"label":" fract16","kind":8,"documentation":{"kind":"markdown","value":"ANSI: unsigned \\_Fract. range is 0 to 0.99998474121 in steps of 0.00001525878"},"sortText":"3f17ae13fract16","filterText":"fract16","insertText":"fract16","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fract16"}},{"label":"•fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeLightBy and fade_video - reduce the brightness of an array of pixels all at once. Guaranteed to never fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fadeToBlackBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeToBlackBy and fade_raw - reduce the brightness of an array of pixels all at once. These functions will eventually fade all the way to black.  \n(The two names are synonyms.)"},"sortText":"3f651eb8fadeToBlackBy","filterText":"fadeToBlackBy","insertText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fadeToBlackBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" fabs(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fabs() function computes the absolute value of a floating-point number \\\\a \\_\\_x."},"sortText":"403f858bfabs","filterText":"fabs","insertText":"fabs(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fabs(${1:double __x})"}},{"label":" fdim(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fdim() function returns \\\u003cem\u003emax(\\_\\_x - \\_\\_y, 0)\\\u003c/em\u003e. If \\\\a \\_\\_x or  \n\\\\a \\_\\_y or both are NaN, NaN is returned."},"sortText":"403f858bfdim","filterText":"fdim","insertText":"fdim(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fdim(${1:double __x}, ${2:double __y})"}},{"label":" ffs(int __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffs(int val);  \n\\\\brief This function finds the first (least significant) bit set in the input value.  \n\\\\returns The ffs() function returns the position of the first (least significant) bit set in the word val, or 0 if no bits are set.  \nThe least significant bit is position 1.  \n\\\\note For expressions that are constant at compile time, consider using the \\\\ref \\_FFS macro instead."},"sortText":"403f858bffs","filterText":"ffs","insertText":"ffs(${1:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ffs(${1:int __val})"}},{"label":" ffsl(long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsl(long val);  \n\\\\brief Same as ffs(), for an argument of type long."},"sortText":"403f858bffsl","filterText":"ffsl","insertText":"ffsl(${1:long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ffsl(${1:long __val})"}},{"label":" ffsll(long long __val)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int ffsll(long long val);  \n\\\\brief Same as ffs(), for an argument of type long long."},"sortText":"403f858bffsll","filterText":"ffsll","insertText":"ffsll(${1:long long __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ffsll(${1:long long __val})"}},{"label":" floor(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The floor() function returns the largest integral value less than or equal to \\\\a \\_\\_x, expressed as a floating-point number."},"sortText":"403f858bfloor","filterText":"floor","insertText":"floor(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"floor(${1:double __x})"}},{"label":" fma(double __x, double __y, double __z)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fma() function performs floating-point multiply-add. This is the operation \\\u003cem\u003e(\\_\\_x * \\_\\_y) + \\_\\_z\\\u003c/em\u003e, but the intermediate result is not rounded to the destination type. This can sometimes improve the precision of a calculation."},"sortText":"403f858bfma","filterText":"fma","insertText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fma(${1:double __x}, ${2:double __y}, ${3:double __z})"}},{"label":" fmax(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmax() function returns the greater of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmax","filterText":"fmax","insertText":"fmax(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fmax(${1:double __x}, ${2:double __y})"}},{"label":" fmin(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The fmin() function returns the lesser of the two values \\\\a \\_\\_x and  \n\\\\a \\_\\_y. If an argument is NaN, the other argument is returned. If both arguments are NaN, NaN is returned."},"sortText":"403f858bfmin","filterText":"fmin","insertText":"fmin(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fmin(${1:double __x}, ${2:double __y})"}},{"label":" fmod(double __x, double __y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function fmod() returns the floating-point remainder of \\\u003cem\u003e\\_\\_x / \\_\\_y\\\u003c/em\u003e."},"sortText":"403f858bfmod","filterText":"fmod","insertText":"fmod(${1:double __x}, ${2:double __y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fmod(${1:double __x}, ${2:double __y})"}},{"label":" free(void *__ptr)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"The free() function causes the allocated memory referenced by \\\\c ptr to be made available for future allocations. If \\\\c ptr is NULL, no action occurs."},"sortText":"403f858bfree","filterText":"free","insertText":"free(${1:void *__ptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"free(${1:void *__ptr})"}},{"label":" frexp(double __x, int *__pexp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The frexp() function breaks a floating-point number into a normalized fraction and an integral power of 2. It stores the integer in the \\\\c int object pointed to by \\\\a \\_\\_pexp.  \nIf \\\\a \\_\\_x is a normal float point number, the frexp() function returns the value \\\\c v, such that \\\\c v has a magnitude in the interval [1/2, 1) or zero, and \\\\a \\_\\_x equals \\\\c v times 2 raised to the power \\\\a \\_\\_pexp. If \\\\a \\_\\_x is zero, both parts of the result are zero. If \\\\a \\_\\_x is not a finite number, the frexp() returns \\\\a \\_\\_x as is and stores 0 by \\\\a \\_\\_pexp.  \n\\\\note This implementation permits a zero pointer as a directive to skip a storing the exponent."},"sortText":"403f858bfrexp","filterText":"frexp","insertText":"frexp(${1:double __x}, ${2:int *__pexp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"frexp(${1:double __x}, ${2:int *__pexp})"}},{"label":"•F(string_literal)","kind":1,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`"},"sortText":"4051050aF","filterText":"F","insertText":"F(${1:string_literal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"F(${1:string_literal})"}},{"label":"•FORWARD_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fFORWARD_HUES","filterText":"FORWARD_HUES","insertText":"FORWARD_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FORWARD_HUES"}},{"label":"•FastPin\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"4068a03fFastPin","filterText":"FastPin","insertText":"FastPin\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FastPin\u003c${1:uint8_t PIN}\u003e"}},{"label":"•FastPinBB\u003cuint8_t PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"4068a03fFastPinBB","filterText":"FastPinBB","insertText":"FastPinBB\u003c${1:uint8_t PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FastPinBB\u003c${1:uint8_t PIN}\u003e"}},{"label":" ForestColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Forest colors, greens"},"sortText":"4068a03fForestColors_p","filterText":"ForestColors_p","insertText":"ForestColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ForestColors_p"}},{"label":"•FullSpectrumFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 255, 244, 242"},"sortText":"4068a03fFullSpectrumFluorescent","filterText":"FullSpectrumFluorescent","insertText":"FullSpectrumFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FullSpectrumFluorescent"}},{"label":"•fadeUsingColor(CRGB *leds, uint16_t numLeds, const CRGB \u0026colormask)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfadeUsingColor - scale down the brightness of an array of pixels,  \nas though it were seen through a transparent filter with the specified color.  \nFor example, if the colormask is CRGB( 200, 100, 50) then the pixels' red will be faded to 200/256ths,  \ntheir green to 100/256ths, and their blue to 50/256ths.  \nThis particular example give a 'hot fade' look,  \nwith white fading to yellow, then red, then black.  \nYou can also use colormasks like CRGB::Blue to zero out the red and green elements, leaving blue (largely) the same."},"sortText":"4068a03ffadeUsingColor","filterText":"fadeUsingColor","insertText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fadeUsingColor(${1:CRGB *leds}, ${2:uint16_t numLeds}, ${3:const CRGB \u0026colormask})"}},{"label":"•fade_raw(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_raw","filterText":"fade_raw","insertText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fade_raw(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":"•fade_video(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03ffade_video","filterText":"fade_video","insertText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fade_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" fclose(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"This function closes \\\\c stream, and disallows and further IO to and from it.  \nWhen using fdevopen() to setup the stream, a call to fclose() is needed in order to free the internal resources allocated.  \nIf the stream has been set up using fdev_setup_stream() or FDEV_SETUP_STREAM(), use fdev_close() instead.  \nIt currently always returns 0 (for success)."},"sortText":"4068a03ffclose","filterText":"fclose","insertText":"fclose(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fclose(${1:FILE *__stream})"}},{"label":" fdevopen(int (*__put)(char, FILE *), int (*__get)(FILE *))","kind":3,"detail":"FILE *","documentation":{"kind":"markdown","value":"New prototype for avr-libc 1.4 and above."},"sortText":"4068a03ffdevopen","filterText":"fdevopen","insertText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fdevopen(${1:int (*__put)(char, FILE *)}, ${2:int (*__get)(FILE *)})"}},{"label":" fdopen(int, const char *)","kind":3,"detail":"FILE *","sortText":"4068a03ffdopen","filterText":"fdopen","insertText":"fdopen(${1:int}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fdopen(${1:int}, ${2:const char *})"}},{"label":" feof(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the end-of-file flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03ffeof","filterText":"feof","insertText":"feof(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"feof(${1:FILE *__stream})"}},{"label":" ferror(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Test the error flag of \\\\c stream. This flag can only be cleared by a call to clearerr()."},"sortText":"4068a03fferror","filterText":"ferror","insertText":"ferror(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ferror(${1:FILE *__stream})"}},{"label":" fflush(FILE *stream)","kind":3,"detail":"int","sortText":"4068a03ffflush","filterText":"fflush","insertText":"fflush(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fflush(${1:FILE *stream})"}},{"label":" fgetc(FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fgetc reads a character from \\\\c stream. It returns the character, or \\\\c EOF in case end-of-file was encountered or an error occurred. The routines feof() or ferror() must be used to distinguish between both situations."},"sortText":"4068a03ffgetc","filterText":"fgetc","insertText":"fgetc(${1:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fgetc(${1:FILE *__stream})"}},{"label":" fgetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffgetpos","filterText":"fgetpos","insertText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fgetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" fgets(char *__str, int __size, FILE *__stream)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"Read at most \\\u003ctt\u003esize - 1\\\u003c/tt\u003e bytes from \\\\c stream, until a newline character was encountered, and store the characters in the buffer pointed to by \\\\c str. Unless an error was encountered while reading, the string will then be terminated with a \\\\c NUL character.  \nIf an error was encountered, the function returns NULL and sets the error flag of \\\\c stream, which can be tested using ferror().  \nOtherwise, a pointer to the string will be returned."},"sortText":"4068a03ffgets","filterText":"fgets","insertText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fgets(${1:char *__str}, ${2:int __size}, ${3:FILE *__stream})"}},{"label":" fileno(FILE *)","kind":3,"detail":"int","sortText":"4068a03ffileno","filterText":"fileno","insertText":"fileno(${1:FILE *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fileno(${1:FILE *})"}},{"label":"•fill_2dnoise16(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint32_t x, int xscale, uint32_t y, int yscale, uint32_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend, uint16_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise16","filterText":"fill_2dnoise16","insertText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_2dnoise16(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint32_t x}, ${7:int xscale}, ${8:uint32_t y}, ${9:int yscale}, ${10:uint32_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_2dnoise8(CRGB *leds, int width, int height, bool serpentine, uint8_t octaves, uint16_t x, int xscale, uint16_t y, int yscale, uint16_t time, uint8_t hue_octaves, uint16_t hue_x, int hue_xscale, uint16_t hue_y, uint16_t hue_yscale, uint16_t hue_time, bool blend)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_2dnoise8","filterText":"fill_2dnoise8","insertText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_2dnoise8(${1:CRGB *leds}, ${2:int width}, ${3:int height}, ${4:bool serpentine}, ${5:uint8_t octaves}, ${6:uint16_t x}, ${7:int xscale}, ${8:uint16_t y}, ${9:int yscale}, ${10:uint16_t time}, ${11:uint8_t hue_octaves}, ${12:uint16_t hue_x}, ${13:int hue_xscale}, ${14:uint16_t hue_y}, ${15:uint16_t hue_yscale}, ${16:uint16_t hue_time}, ${17:bool blend})"}},{"label":"•fill_gradient(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nConvenience functions to fill an array of colors with a two-color, three-color, or four-color gradient"},"sortText":"4068a03ffill_gradient","filterText":"fill_gradient","insertText":"fill_gradient($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_gradient($0)"}},{"label":"•fill_gradient_RGB(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_gradient_RGB - fill a range of LEDs with a smooth RGB gradient between two specified RGB colors.  \nUnlike HSV, there is no 'color wheel' in RGB space,  \nand therefore there's only one 'direction' for the gradient to go, and no 'direction code' is needed."},"sortText":"4068a03ffill_gradient_RGB","filterText":"fill_gradient_RGB","insertText":"fill_gradient_RGB($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_gradient_RGB($0)"}},{"label":"•fill_noise16(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time, uint8_t hue_shift = 0)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_noise16","filterText":"fill_noise16","insertText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_noise16(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_noise8(CRGB *leds, int num_leds, uint8_t octaves, uint16_t x, int scale, uint8_t hue_octaves, uint16_t hue_x, int hue_scale, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name fill functions  \n@{ fill functions to fill leds with values based on noise functions. These functions use the fill_raw\\_\\* functions as appropriate."},"sortText":"4068a03ffill_noise8","filterText":"fill_noise8","insertText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_noise8(${1:CRGB *leds}, ${2:int num_leds}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scale}, ${6:uint8_t hue_octaves}, ${7:uint16_t hue_x}, ${8:int hue_scale}, ${9:uint16_t time})"}},{"label":"•fill_palette(CRGB *L, uint16_t N, uint8_t startIndex, uint8_t incIndex, const PALETTE \u0026pal, uint8_t brightness, TBlendType blendType)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nFill a range of LEDs with a sequece of entryies from a palette"},"sortText":"4068a03ffill_palette","filterText":"fill_palette","insertText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_palette(${1:CRGB *L}, ${2:uint16_t N}, ${3:uint8_t startIndex}, ${4:uint8_t incIndex}, ${5:const PALETTE \u0026pal}, ${6:uint8_t brightness}, ${7:TBlendType blendType})"}},{"label":"•fill_rainbow(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_rainbow - fill a range of LEDs with a rainbow of colors, at full saturation and full value (brightness)"},"sortText":"4068a03ffill_rainbow","filterText":"fill_rainbow","insertText":"fill_rainbow($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_rainbow($0)"}},{"label":"•fill_raw_2dnoise16(uint16_t *pData, int width, int height, uint8_t octaves, q88 freq88, fract16 amplitude, int skip, uint32_t x, int scalex, uint32_t y, int scaley, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16","filterText":"fill_raw_2dnoise16","insertText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_raw_2dnoise16(${1:uint16_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:q88 freq88}, ${6:fract16 amplitude}, ${7:int skip}, ${8:uint32_t x}, ${9:int scalex}, ${10:uint32_t y}, ${11:int scaley}, ${12:uint32_t time})"}},{"label":"•fill_raw_2dnoise16into8(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise16into8","filterText":"fill_raw_2dnoise16into8","insertText":"fill_raw_2dnoise16into8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_raw_2dnoise16into8($0)"}},{"label":"•fill_raw_2dnoise8(uint8_t *pData, int width, int height, uint8_t octaves, uint16_t x, int scalex, uint16_t y, int scaley, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_2dnoise8","filterText":"fill_raw_2dnoise8","insertText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_raw_2dnoise8(${1:uint8_t *pData}, ${2:int width}, ${3:int height}, ${4:uint8_t octaves}, ${5:uint16_t x}, ${6:int scalex}, ${7:uint16_t y}, ${8:int scaley}, ${9:uint16_t time})"}},{"label":"•fill_raw_noise16into8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint32_t x, int scalex, uint32_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`"},"sortText":"4068a03ffill_raw_noise16into8","filterText":"fill_raw_noise16into8","insertText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_raw_noise16into8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint32_t x}, ${5:int scalex}, ${6:uint32_t time})"}},{"label":"•fill_raw_noise8(uint8_t *pData, uint8_t num_points, uint8_t octaves, uint16_t x, int scalex, uint16_t time)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw fill functions  \n@{ Raw noise fill functions - fill into a 1d or 2d array of 8-bit values using either 8-bit noise or 16-bit noise functions.  \n@param pData the array of data to write into  \n@param num_points the number of points of noise to compute  \n@param octaves the number of octaves to use for noise  \n@param x the x position in the noise field  \n@param y the y position in the noise field for 2d functions  \n@param scalex the scale (distance) between x points when filling in noise  \n@param scaley the scale (distance) between y points when filling in noise  \n@param time the time position for the noise field"},"sortText":"4068a03ffill_raw_noise8","filterText":"fill_raw_noise8","insertText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_raw_noise8(${1:uint8_t *pData}, ${2:uint8_t num_points}, ${3:uint8_t octaves}, ${4:uint16_t x}, ${5:int scalex}, ${6:uint16_t time})"}},{"label":"•fill_solid(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nfill_solid - fill a range of LEDs with a solid color Example: fill_solid( leds, NUM_LEDS, CRGB(50,0,200));"},"sortText":"4068a03ffill_solid","filterText":"fill_solid","insertText":"fill_solid($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fill_solid($0)"}},{"label":" floatToSfract15(float f)","kind":3,"detail":"sfract15","documentation":{"kind":"markdown","value":"conversion from IEEE754 float in the range (-1,1) to 16-bit fixed point. Note that the extremes of one and negative one are NOT representable. The representable range is basically"},"sortText":"4068a03ffloatToSfract15","filterText":"floatToSfract15","insertText":"floatToSfract15(${1:float f})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"floatToSfract15(${1:float f})"}},{"label":" fopen(const char *path, const char *mode)","kind":3,"detail":"FILE *","sortText":"4068a03ffopen","filterText":"fopen","insertText":"fopen(${1:const char *path}, ${2:const char *mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fopen(${1:const char *path}, ${2:const char *mode})"}},{"label":" fpos_t","kind":8,"sortText":"4068a03ffpos_t","filterText":"fpos_t","insertText":"fpos_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fpos_t"}},{"label":" fprintf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fprintf performs formatted output to \\\\c stream.  \nSee \\\\c vfprintf() for details."},"sortText":"4068a03ffprintf","filterText":"fprintf","insertText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fprintf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fprintf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of \\\\c fprintf() that uses a \\\\c fmt string that resides in program memory."},"sortText":"4068a03ffprintf_P","filterText":"fprintf_P","insertText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fprintf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fputc(int __c, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fputc sends the character \\\\c c (though given as type  \n\\\\c int) to \\\\c stream. It returns the character, or \\\\c EOF in case an error occurred."},"sortText":"4068a03ffputc","filterText":"fputc","insertText":"fputc(${1:int __c}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fputc(${1:int __c}, ${2:FILE *__stream})"}},{"label":" fputs(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Write the string pointed to by \\\\c str to stream \\\\c stream.  \nReturns 0 on success and EOF on error."},"sortText":"4068a03ffputs","filterText":"fputs","insertText":"fputs(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fputs(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fputs_P(const char *__str, FILE *__stream)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fputs() where \\\\c str resides in program memory."},"sortText":"4068a03ffputs_P","filterText":"fputs_P","insertText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fputs_P(${1:const char *__str}, ${2:FILE *__stream})"}},{"label":" fread(void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Read \\\\c nmemb objects, \\\\c size bytes each, from \\\\c stream,  \nto the buffer pointed to by \\\\c ptr.  \nReturns the number of objects successfully read, i. e.  \n\\\\c nmemb unless an input error occured or end-of-file was encountered. feof() and ferror() must be used to distinguish between these two conditions."},"sortText":"4068a03ffread","filterText":"fread","insertText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fread(${1:void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" freopen(const char *path, const char *mode, FILE *stream)","kind":3,"detail":"FILE *","sortText":"4068a03ffreopen","filterText":"freopen","insertText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"freopen(${1:const char *path}, ${2:const char *mode}, ${3:FILE *stream})"}},{"label":" fscanf(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function \\\\c fscanf performs formatted input, reading the input data from \\\\c stream.  \nSee vfscanf() for details."},"sortText":"4068a03ffscanf","filterText":"fscanf","insertText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fscanf(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fscanf_P(FILE *__stream, const char *__fmt, ...)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"Variant of fscanf() using a \\\\c fmt string in program memory."},"sortText":"4068a03ffscanf_P","filterText":"fscanf_P","insertText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fscanf_P(${1:FILE *__stream}, ${2:const char *__fmt, ...})"}},{"label":" fseek(FILE *stream, long offset, int whence)","kind":3,"detail":"int","sortText":"4068a03ffseek","filterText":"fseek","insertText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fseek(${1:FILE *stream}, ${2:long offset}, ${3:int whence})"}},{"label":" fsetpos(FILE *stream, fpos_t *pos)","kind":3,"detail":"int","sortText":"4068a03ffsetpos","filterText":"fsetpos","insertText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fsetpos(${1:FILE *stream}, ${2:fpos_t *pos})"}},{"label":" ftell(FILE *stream)","kind":3,"detail":"long","sortText":"4068a03fftell","filterText":"ftell","insertText":"ftell(${1:FILE *stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ftell(${1:FILE *stream})"}},{"label":" fwrite(const void *__ptr, size_t __size, size_t __nmemb, FILE *__stream)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"Write \\\\c nmemb objects, \\\\c size bytes each, to \\\\c stream.  \nThe first byte of the first object is referenced by \\\\c ptr.  \nReturns the number of objects successfully written, i. e.  \n\\\\c nmemb unless an output error occured."},"sortText":"4068a03ffwrite","filterText":"fwrite","insertText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"fwrite(${1:const void *__ptr}, ${2:size_t __size}, ${3:size_t __nmemb}, ${4:FILE *__stream})"}},{"label":" FASTLED_INTERNAL","kind":1,"sortText":"40800000FASTLED_INTERNAL","filterText":"FASTLED_INTERNAL","insertText":"FASTLED_INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FASTLED_INTERNAL"}},{"label":" F_CPU","kind":1,"sortText":"40800000F_CPU","filterText":"F_CPU","insertText":"F_CPU","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"F_CPU"}},{"label":" FASTLED_VERSION","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaFASTLED_VERSION","filterText":"FASTLED_VERSION","insertText":"FASTLED_VERSION","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FASTLED_VERSION"}},{"label":" FE0","kind":1,"sortText":"40ec52eaFE0","filterText":"FE0","insertText":"FE0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FE0"}},{"label":" FLASHEND","kind":1,"sortText":"40ec52eaFLASHEND","filterText":"FLASHEND","insertText":"FLASHEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FLASHEND"}},{"label":" FOC0A","kind":1,"sortText":"40ec52eaFOC0A","filterText":"FOC0A","insertText":"FOC0A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FOC0A"}},{"label":" FOC0B","kind":1,"sortText":"40ec52eaFOC0B","filterText":"FOC0B","insertText":"FOC0B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FOC0B"}},{"label":" FOC1A","kind":1,"sortText":"40ec52eaFOC1A","filterText":"FOC1A","insertText":"FOC1A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FOC1A"}},{"label":" FOC1B","kind":1,"sortText":"40ec52eaFOC1B","filterText":"FOC1B","insertText":"FOC1B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FOC1B"}},{"label":" FOC2A","kind":1,"sortText":"40ec52eaFOC2A","filterText":"FOC2A","insertText":"FOC2A","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FOC2A"}},{"label":" FOC2B","kind":1,"sortText":"40ec52eaFOC2B","filterText":"FOC2B","insertText":"FOC2B","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FOC2B"}},{"label":" FUSE_BODLEVEL0","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL0","filterText":"FUSE_BODLEVEL0","insertText":"FUSE_BODLEVEL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_BODLEVEL0"}},{"label":" FUSE_BODLEVEL1","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL1","filterText":"FUSE_BODLEVEL1","insertText":"FUSE_BODLEVEL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_BODLEVEL1"}},{"label":" FUSE_BODLEVEL2","kind":1,"sortText":"40ec52eaFUSE_BODLEVEL2","filterText":"FUSE_BODLEVEL2","insertText":"FUSE_BODLEVEL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_BODLEVEL2"}},{"label":" FUSE_BOOTRST","kind":1,"sortText":"40ec52eaFUSE_BOOTRST","filterText":"FUSE_BOOTRST","insertText":"FUSE_BOOTRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_BOOTRST"}},{"label":" FUSE_BOOTSZ0","kind":1,"sortText":"40ec52eaFUSE_BOOTSZ0","filterText":"FUSE_BOOTSZ0","insertText":"FUSE_BOOTSZ0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_BOOTSZ0"}},{"label":" FUSE_BOOTSZ1","kind":1,"sortText":"40ec52eaFUSE_BOOTSZ1","filterText":"FUSE_BOOTSZ1","insertText":"FUSE_BOOTSZ1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_BOOTSZ1"}},{"label":" FUSE_CKDIV8","kind":1,"sortText":"40ec52eaFUSE_CKDIV8","filterText":"FUSE_CKDIV8","insertText":"FUSE_CKDIV8","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_CKDIV8"}},{"label":" FUSE_CKOUT","kind":1,"sortText":"40ec52eaFUSE_CKOUT","filterText":"FUSE_CKOUT","insertText":"FUSE_CKOUT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_CKOUT"}},{"label":" FUSE_CKSEL0","kind":1,"sortText":"40ec52eaFUSE_CKSEL0","filterText":"FUSE_CKSEL0","insertText":"FUSE_CKSEL0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_CKSEL0"}},{"label":" FUSE_CKSEL1","kind":1,"sortText":"40ec52eaFUSE_CKSEL1","filterText":"FUSE_CKSEL1","insertText":"FUSE_CKSEL1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_CKSEL1"}},{"label":" FUSE_CKSEL2","kind":1,"sortText":"40ec52eaFUSE_CKSEL2","filterText":"FUSE_CKSEL2","insertText":"FUSE_CKSEL2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_CKSEL2"}},{"label":" FUSE_CKSEL3","kind":1,"sortText":"40ec52eaFUSE_CKSEL3","filterText":"FUSE_CKSEL3","insertText":"FUSE_CKSEL3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_CKSEL3"}},{"label":" FUSE_DWEN","kind":1,"sortText":"40ec52eaFUSE_DWEN","filterText":"FUSE_DWEN","insertText":"FUSE_DWEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_DWEN"}},{"label":" FUSE_EESAVE","kind":1,"sortText":"40ec52eaFUSE_EESAVE","filterText":"FUSE_EESAVE","insertText":"FUSE_EESAVE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_EESAVE"}},{"label":" FUSE_MEMORY_SIZE","kind":1,"sortText":"40ec52eaFUSE_MEMORY_SIZE","filterText":"FUSE_MEMORY_SIZE","insertText":"FUSE_MEMORY_SIZE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_MEMORY_SIZE"}},{"label":" FUSE_RSTDISBL","kind":1,"sortText":"40ec52eaFUSE_RSTDISBL","filterText":"FUSE_RSTDISBL","insertText":"FUSE_RSTDISBL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_RSTDISBL"}},{"label":" FUSE_SPIEN","kind":1,"sortText":"40ec52eaFUSE_SPIEN","filterText":"FUSE_SPIEN","insertText":"FUSE_SPIEN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_SPIEN"}},{"label":" FUSE_SUT0","kind":1,"sortText":"40ec52eaFUSE_SUT0","filterText":"FUSE_SUT0","insertText":"FUSE_SUT0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"FUSE_SUT0"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":149},"contentChanges":[{"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":3}},"rangeLength":0,"text":"o"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":121}}Content-Length: 171

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 38

{"id":121,"result":[],"jsonrpc":"2.0"}Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'fo'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":122,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":150},"contentChanges":[{"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 713

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_lparen_after","source":"clang","message":"Expected '(' after 'for'"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nproject.ino.cpp:75:18: note: to match this '{'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:144:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 2761

{"id":123,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":123,"character":0}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":124,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":125,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":5},"context":{"triggerKind":3}}}
>>>
Content-Length: 5042

{"id":125,"result":{"isIncomplete":false,"items":[{"label":" for (init-statement; condition; inc-expression) {statements}","kind":15,"sortText":"3e800000for","filterText":"for","insertText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"for (${1:init-statement}; ${2:condition}; ${3:inc-expression}) {\n${0:statements}\n}"}},{"label":" for (range-declaration : range-expression) {statements}","kind":15,"sortText":"3e800000for","filterText":"for","insertText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"for (${1:range-declaration} : ${2:range-expression}) {\n${0:statements}\n}"}},{"label":" ForestColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Forest colors, greens"},"sortText":"4068a03fForestColors_p","filterText":"ForestColors_p","insertText":"ForestColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"ForestColors_p"}},{"label":"•FORWARD_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4083b5bdFORWARD_HUES","filterText":"FORWARD_HUES","insertText":"FORWARD_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"FORWARD_HUES"}},{"label":"•calculate_max_brightness_for_power_mW(…)","kind":3,"detail":"[2 overloads]","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \ncalculate_max_brightness_for_power_mW tells you the highest brightness level you can use and still stay under the specified power budget. It takes a 'target brightness' which is the brightness you'd ideally like to use. The result from this function will be no higher than the target_brightess you supply, but may be lower."},"sortText":"4103b5bdcalculate_max_brightness_for_power_mW","filterText":"calculate_max_brightness_for_power_mW","insertText":"calculate_max_brightness_for_power_mW($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"calculate_max_brightness_for_power_mW($0)"}},{"label":"•calculate_max_brightness_for_power_vmA(const CRGB *ledbuffer, uint16_t numLeds, uint8_t target_brightness, uint32_t max_power_V, uint32_t max_power_mA)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \ncalculate_max_brightness_for_power_mW tells you the highest brightness level you can use and still stay under the specified power budget for a given set of leds. It takes a pointer to an array of CRGB objects, a count, a 'target brightness' which is the brightness you'd ideally like to use, and the max power in volts and milliamps. The result from this function will be no higher than the target_brightess you supply, but may be lower."},"sortText":"4103b5bdcalculate_max_brightness_for_power_vmA","filterText":"calculate_max_brightness_for_power_vmA","insertText":"calculate_max_brightness_for_power_vmA(${1:const CRGB *ledbuffer}, ${2:uint16_t numLeds}, ${3:uint8_t target_brightness}, ${4:uint32_t max_power_V}, ${5:uint32_t max_power_mA})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"calculate_max_brightness_for_power_vmA(${1:const CRGB *ledbuffer}, ${2:uint16_t numLeds}, ${3:uint8_t target_brightness}, ${4:uint32_t max_power_V}, ${5:uint32_t max_power_mA})"}},{"label":"•delay_at_max_brightness_for_power(uint16_t ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSimilar to FastLED.delay, but pre-adjusts brightness to keep below the power threshold.  \n@deprecated this has now been rolled into FastLED.delay();"},"sortText":"41362afedelay_at_max_brightness_for_power","filterText":"delay_at_max_brightness_for_power","insertText":"delay_at_max_brightness_for_power(${1:uint16_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"delay_at_max_brightness_for_power(${1:uint16_t ms})"}},{"label":"•show_at_max_brightness_for_power()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSimilar to FastLED.show, but pre-adjusts brightness to keep below the power threshold.  \n@deprecated this has now been moved to FastLED.show();"},"sortText":"41362afeshow_at_max_brightness_for_power","filterText":"show_at_max_brightness_for_power","insertText":"show_at_max_brightness_for_power()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"show_at_max_brightness_for_power()"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":126,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":126,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":127,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":151},"contentChanges":[{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"rangeLength":0,"text":"()"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 690

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":7}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":7}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":128,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 278

{"jsonrpc":"2.0","id":129,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":6},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 93

{"id":129,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":130,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 629

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":7}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"},{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":7}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"}]}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":5,"jsonrpc":"2.0"}Content-Length: 38

{"id":131,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":152},"contentChanges":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":6}},"rangeLength":0,"text":"i"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":132,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":6,"jsonrpc":"2.0"}Content-Length: 702

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"},{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":8}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":132,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 254

{"jsonrpc":"2.0","id":133,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":7},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":132}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":153},"contentChanges":[{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"rangeLength":0,"text":"n"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":134}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":154},"contentChanges":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":8}},"rangeLength":0,"text":"t"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":135}}Content-Length: 171

{"jsonrpc":"2.0","id":136,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":133}}Content-Length: 254

{"jsonrpc":"2.0","id":137,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":9},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":136}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":155},"contentChanges":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":138,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":137}}Content-Length: 255

{"jsonrpc":"2.0","id":139,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":10},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":138}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":156},"contentChanges":[{"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":10}},"rangeLength":0,"text":"i"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":140,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 233

{"jsonrpc":"2.0","id":141,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":11},"context":{"triggerKind":1}}}Content-Length: 274

{"jsonrpc":"2.0","id":142,"method":"
>>>
Content-Length: 93

{"id":133,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 703

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"},{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":9}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":134,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":135,"result":[],"jsonrpc":"2.0"}Content-Length: 1613

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":10}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nproject.ino.cpp:76:6: note: to match this '('"},{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":6}},"severity":3,"message":"To match this '('\n\nproject.ino.cpp:144:1: error: expected ')'"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nproject.ino.cpp:75:18: note: to match this '{'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:144:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 2761

{"id":136,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":123,"character":0}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":137,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 1614

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":11}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nproject.ino.cpp:76:6: note: to match this '('"},{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":6}},"severity":3,"message":"To match this '('\n\nproject.ino.cpp:144:1: error: expected ')'"},{"range":{"start":{"line":124,"character":0},"end":{"line":124,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nproject.ino.cpp:75:18: note: to match this '{'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:144:1: error: expected '}'"}]},"jsonrpc":"2.0"}Content-Length: 2761

{"id":138,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":123,"character":0}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":139,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":12}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":140,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 69

{"id":141,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}
<<<
textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":139}}Content-Length: 255

{"jsonrpc":"2.0","id":143,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":11},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 274

{"jsonrpc":"2.0","id":144,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":156}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":140}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":157},"contentChanges":[{"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":142}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":144}}Content-Length: 171

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":143}}Content-Length: 255

{"jsonrpc":"2.0","id":146,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":12},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":145}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":158},"contentChanges":[{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":12}},"rangeLength":0,"text":"="}]}}Content-Length: 171

{"jsonrpc":"2.0","id":147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":146}}Content-Length: 255

{"jsonrpc":"2.0","id":148,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":13},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":147}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":159},"contentChanges":[{"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":13}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":149}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":160},"contentChanges":[{"range"
>>>
Content-Length: 38

{"id":142,"result":[],"jsonrpc":"2.0"}Content-Length: 93

{"id":143,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":144,"result":[],"jsonrpc":"2.0"}Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":13}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":145,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":146,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 728

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":14}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":13}},"severity":1,"code":"single_decl_assign_in_for_range","source":"clang","message":"Range-based 'for' statement uses ':', not '=' (fix available)"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":147,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":148,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 728

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":14},"end":{"line":56,"character":15}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":13}},"severity":1,"code":"single_decl_assign_in_for_range","source":"clang","message":"Range-based 'for' statement uses ':', not '=' (fix available)"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":149,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
:{"start":{"line":56,"character":14},"end":{"line":56,"character":14}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":148}}Content-Length: 255

{"jsonrpc":"2.0","id":151,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 274

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":150}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":161},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"rangeLength":0,"text":","}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":152}}Content-Length: 171

{"jsonrpc":"2.0","id":153,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":151}}Content-Length: 278

{"jsonrpc":"2.0","id":154,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":16},"context":{"isRetrigger":true,"triggerCharacter":",","triggerKind":2}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":153}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":162},"contentChanges":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":155,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":154}}Content-Length: 255

{"jsonrpc":"2.0","id":156,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}Content-Length: 274

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":17}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":155}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":163},"contentChanges":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":157}}Content-Length: 171

{"jsonrpc":"2.0","id":158,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequ
>>>
Content-Length: 3332

{"id":150,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 557

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":13}},"severity":1,"code":"single_decl_assign_in_for_range","source":"clang","message":"Range-based 'for' statement uses ':', not '=' (fix available)"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 93

{"id":151,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":152,"result":[],"jsonrpc":"2.0"}Content-Length: 702

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":17}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":17}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":153,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":154,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 702

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":155,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":156,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}Content-Length: 38

{"id":157,"result":[],"jsonrpc":"2.0"}Content-Length: 702

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":17}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"},{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":17}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":158,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
est","params":{"id":158}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":164},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":156}}Content-Length: 255

{"jsonrpc":"2.0","id":161,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":15},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":159}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":165},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"rangeLength":0,"text":";"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":160}}Content-Length: 171

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":161}}Content-Length: 255

{"jsonrpc":"2.0","id":164,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":16},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 274

{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":162}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":166},"contentChanges":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":163}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":165}}Content-Length: 171

{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":164}}Content-Length: 255

{"jsonrpc":"2.0","id":167,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 274

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"
>>>
Content-Length: 557

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":13}},"severity":1,"code":"single_decl_assign_in_for_range","source":"clang","message":"Range-based 'for' statement uses ':', not '=' (fix available)"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":159,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":160,"result":[],"jsonrpc":"2.0"}Content-Length: 93

{"id":161,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":17}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":162,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":163,"result":[],"jsonrpc":"2.0"}Content-Length: 93

{"id":164,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}Content-Length: 38

{"id":165,"result":[],"jsonrpc":"2.0"}Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":166,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 93

{"id":167,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":167},"contentChanges":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":17}},"rangeLength":0,"text":"9"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":168}}Content-Length: 171

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 38

{"id":168,"result":[],"jsonrpc":"2.0"}Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":18},"end":{"line":56,"character":19}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":169,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":170,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":170,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":171,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":171,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":168},"contentChanges":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":172,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":173,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":174,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":17},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":174,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":169},"contentChanges":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":17}},"rangeLength":0,"text":"i"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":18},"end":{"line":56,"character":19}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":175,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","id":176,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":18},"context":{"triggerKind":1}}}Content-Length: 274

{"jsonrpc":"2.0","id":177,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 34070

{"id":176,"result":{"isIncomplete":true,"items":[{"label":" i","kind":6,"detail":"int","sortText":"3daccccci","filterText":"i","insertText":"i","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"i"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int"}},{"label":"•isAlpha(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an alphabetic character.  \nIt is equivalent to (isupper(c) || islower(c))."},"sortText":"3f0f66edisAlpha","filterText":"isAlpha","insertText":"isAlpha(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isAlpha(${1:int c})"}},{"label":"•isAlphaNumeric(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"3f0f66edisAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"•isAscii(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"3f0f66edisAscii","filterText":"isAscii","insertText":"isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isAscii(${1:int c})"}},{"label":"•isControl(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a control character."},"sortText":"3f0f66edisControl","filterText":"isControl","insertText":"isControl(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isControl(${1:int c})"}},{"label":"•isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"3f0f66edisDigit","filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isDigit(${1:int c})"}},{"label":"•isGraph(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character except space."},"sortText":"3f0f66edisGraph","filterText":"isGraph","insertText":"isGraph(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isGraph(${1:int c})"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"3f0f66edisHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a lower-case character."},"sortText":"3f0f66edisLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isLowerCase(${1:int c})"}},{"label":"•isPrintable(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character including space."},"sortText":"3f0f66edisPrintable","filterText":"isPrintable","insertText":"isPrintable(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isPrintable(${1:int c})"}},{"label":"•isPunct(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"3f0f66edisPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isPunct(${1:int c})"}},{"label":"•isSpace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for white-space characters. For the avr-libc library,  \nthese are: space, formfeed ('\\\\f'), newline ('\\\\n'), carriage return ('\\\\r'), horizontal tab ('\\\\t'), and vertical tab ('\\\\v')."},"sortText":"3f0f66edisSpace","filterText":"isSpace","insertText":"isSpace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isSpace(${1:int c})"}},{"label":"•isUpperCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an uppercase letter."},"sortText":"3f0f66edisUpperCase","filterText":"isUpperCase","insertText":"isUpperCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isUpperCase(${1:int c})"}},{"label":"•isWhitespace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"3f0f66edisWhitespace","filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isWhitespace(${1:int c})"}},{"label":" int8_t","kind":8,"documentation":{"kind":"markdown","value":"actual implementation goes here"},"sortText":"40301411int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int8_t"}},{"label":" int16_t","kind":8,"sortText":"4032a543int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int16_t"}},{"label":" isfinite(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The isfinite() function returns a nonzero value if \\\\a \\_\\_x is finite:  \nnot plus or minus infinity, and not NaN."},"sortText":"403f858bisfinite","filterText":"isfinite","insertText":"isfinite(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isfinite(${1:double __x})"}},{"label":" isinf(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isinf() returns 1 if the argument \\\\a \\_\\_x is positive infinity, -1 if \\\\a \\_\\_x is negative infinity, and 0 otherwise.  \n\\\\note The GCC 4.3 can replace this function with inline code that returns the 1 value for both infinities (gcc bug #35509)."},"sortText":"403f858bisinf","filterText":"isinf","insertText":"isinf(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isinf(${1:double __x})"}},{"label":" isnan(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isnan() returns 1 if the argument \\\\a \\_\\_x represents a \"not-a-number\" (NaN) object, otherwise 0."},"sortText":"403f858bisnan","filterText":"isnan","insertText":"isnan(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isnan(${1:double __x})"}},{"label":" itoa(int __val, char *__s, int __radix)","kind":3,"detail":"char *","sortText":"403f858bitoa","filterText":"itoa","insertText":"itoa(${1:int __val}, ${2:char *__s}, ${3:int __radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"itoa(${1:int __val}, ${2:char *__s}, ${3:int __radix})"}},{"label":"•IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"405d1068IPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"IPAddress"}},{"label":" init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68init","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nWeak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"405d8e68initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"initVariant()"}},{"label":" int32_t","kind":8,"sortText":"405d8e68int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int64_t"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"405d8e68int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 16 bits."},"sortText":"405d8e68int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 32 bits."},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 8 bits."},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"int_least8_t"}},{"label":" intmax_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint largest signed int available."},"sortText":"405d8e68intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint Signed pointer compatible type."},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"intptr_t"}},{"label":" isalnum(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphanumeric character. It is equivalent to \\\u003ctt\u003e(isalpha(c) || isdigit(c))\\\u003c/tt\u003e."},"sortText":"405d8e68isalnum","filterText":"isalnum","insertText":"isalnum(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isalnum(${1:int __c})"}},{"label":" isalpha(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphabetic character. It is equivalent to \\\u003ctt\u003e(isupper(c) || islower(c))\\\u003c/tt\u003e."},"sortText":"405d8e68isalpha","filterText":"isalpha","insertText":"isalpha(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isalpha(${1:int __c})"}},{"label":" isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks whether \\\\c c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"405d8e68isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isascii(${1:int __c})"}},{"label":" isblank(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a blank character, that is, a space or a tab."},"sortText":"405d8e68isblank","filterText":"isblank","insertText":"isblank(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isblank(${1:int __c})"}},{"label":" iscntrl(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a control character."},"sortText":"405d8e68iscntrl","filterText":"iscntrl","insertText":"iscntrl(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"iscntrl(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a digit (0 through 9)."},"sortText":"405d8e68isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isdigit(${1:int __c})"}},{"label":" isgraph(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character except space."},"sortText":"405d8e68isgraph","filterText":"isgraph","insertText":"isgraph(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isgraph(${1:int __c})"}},{"label":" islower(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a lower-case character."},"sortText":"405d8e68islower","filterText":"islower","insertText":"islower(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"islower(${1:int __c})"}},{"label":" isprint(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character including space."},"sortText":"405d8e68isprint","filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isprint(${1:int __c})"}},{"label":" ispunct(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"405d8e68ispunct","filterText":"ispunct","insertText":"ispunct(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ispunct(${1:int __c})"}},{"label":" isspace(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for white-space characters. For the avr-libc library, these are:  \nspace, form-feed ('\\\\\\\\f'), newline ('\\\\\\\\n'), carriage return ('\\\\\\\\r'),  \nhorizontal tab ('\\\\\\\\t'), and vertical tab ('\\\\\\\\v')."},"sortText":"405d8e68isspace","filterText":"isspace","insertText":"isspace(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isspace(${1:int __c})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an uppercase letter."},"sortText":"405d8e68isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isupper(${1:int __c})"}},{"label":" isxdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"405d8e68isxdigit","filterText":"isxdigit","insertText":"isxdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"isxdigit(${1:int __c})"}},{"label":" IEEE754binary32_t","kind":8,"documentation":{"kind":"markdown","value":"typedef for IEEE754 \"binary32\" float type internals"},"sortText":"4068a03fIEEE754binary32_t","filterText":"IEEE754binary32_t","insertText":"IEEE754binary32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"IEEE754binary32_t"}},{"label":"•INADDR_NONE","kind":6,"detail":"const IPAddress","documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`"},"sortText":"4068a03fINADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INADDR_NONE"}},{"label":"•InputPin","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"4068a03fInputPin","filterText":"InputPin","insertText":"InputPin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"InputPin"}},{"label":"•inoise16(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@defgroup Noise Noise functions Simplex noise function definitions  \n@{  \n@name scaled 16 bit noise functions  \n@{ 16 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n16.16 fixed point values, 32 bit integers with integral coordinates in the high 16 bits and fractional in the low 16 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-65535"},"sortText":"4068a03finoise16","filterText":"inoise16","insertText":"inoise16($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"inoise16($0)"}},{"label":"•inoise16_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw 16 bit noise functions  \n@{ 16 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-18k,18k)"},"sortText":"4068a03finoise16_raw","filterText":"inoise16_raw","insertText":"inoise16_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"inoise16_raw($0)"}},{"label":"•inoise8(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit scaled noise functions  \n@{ 8 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n8.8 fixed point values, 16 bit integers with integral coordinates in the high 8 bits and fractional in the low 8 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-255"},"sortText":"4068a03finoise8","filterText":"inoise8","insertText":"inoise8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"inoise8($0)"}},{"label":"•inoise8_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit raw noise functions  \n@{ 8 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-70,70)"},"sortText":"4068a03finoise8_raw","filterText":"inoise8_raw","insertText":"inoise8_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"inoise8_raw($0)"}},{"label":" ICES1","kind":1,"sortText":"40ec52eaICES1","filterText":"ICES1","insertText":"ICES1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICES1"}},{"label":" ICF1","kind":1,"sortText":"40ec52eaICF1","filterText":"ICF1","insertText":"ICF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICF1"}},{"label":" ICIE1","kind":1,"sortText":"40ec52eaICIE1","filterText":"ICIE1","insertText":"ICIE1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICIE1"}},{"label":" ICNC1","kind":1,"sortText":"40ec52eaICNC1","filterText":"ICNC1","insertText":"ICNC1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICNC1"}},{"label":" ICR1","kind":1,"sortText":"40ec52eaICR1","filterText":"ICR1","insertText":"ICR1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1"}},{"label":" ICR1H","kind":1,"sortText":"40ec52eaICR1H","filterText":"ICR1H","insertText":"ICR1H","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H"}},{"label":" ICR1H0","kind":1,"sortText":"40ec52eaICR1H0","filterText":"ICR1H0","insertText":"ICR1H0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H0"}},{"label":" ICR1H1","kind":1,"sortText":"40ec52eaICR1H1","filterText":"ICR1H1","insertText":"ICR1H1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H1"}},{"label":" ICR1H2","kind":1,"sortText":"40ec52eaICR1H2","filterText":"ICR1H2","insertText":"ICR1H2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H2"}},{"label":" ICR1H3","kind":1,"sortText":"40ec52eaICR1H3","filterText":"ICR1H3","insertText":"ICR1H3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H3"}},{"label":" ICR1H4","kind":1,"sortText":"40ec52eaICR1H4","filterText":"ICR1H4","insertText":"ICR1H4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H4"}},{"label":" ICR1H5","kind":1,"sortText":"40ec52eaICR1H5","filterText":"ICR1H5","insertText":"ICR1H5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H5"}},{"label":" ICR1H6","kind":1,"sortText":"40ec52eaICR1H6","filterText":"ICR1H6","insertText":"ICR1H6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H6"}},{"label":" ICR1H7","kind":1,"sortText":"40ec52eaICR1H7","filterText":"ICR1H7","insertText":"ICR1H7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1H7"}},{"label":" ICR1L","kind":1,"sortText":"40ec52eaICR1L","filterText":"ICR1L","insertText":"ICR1L","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L"}},{"label":" ICR1L0","kind":1,"sortText":"40ec52eaICR1L0","filterText":"ICR1L0","insertText":"ICR1L0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L0"}},{"label":" ICR1L1","kind":1,"sortText":"40ec52eaICR1L1","filterText":"ICR1L1","insertText":"ICR1L1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L1"}},{"label":" ICR1L2","kind":1,"sortText":"40ec52eaICR1L2","filterText":"ICR1L2","insertText":"ICR1L2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L2"}},{"label":" ICR1L3","kind":1,"sortText":"40ec52eaICR1L3","filterText":"ICR1L3","insertText":"ICR1L3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L3"}},{"label":" ICR1L4","kind":1,"sortText":"40ec52eaICR1L4","filterText":"ICR1L4","insertText":"ICR1L4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L4"}},{"label":" ICR1L5","kind":1,"sortText":"40ec52eaICR1L5","filterText":"ICR1L5","insertText":"ICR1L5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L5"}},{"label":" ICR1L6","kind":1,"sortText":"40ec52eaICR1L6","filterText":"ICR1L6","insertText":"ICR1L6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L6"}},{"label":" ICR1L7","kind":1,"sortText":"40ec52eaICR1L7","filterText":"ICR1L7","insertText":"ICR1L7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"ICR1L7"}},{"label":" INT0","kind":1,"sortText":"40ec52eaINT0","filterText":"INT0","insertText":"INT0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT0"}},{"label":" INT0_vect","kind":1,"sortText":"40ec52eaINT0_vect","filterText":"INT0_vect","insertText":"INT0_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT0_vect"}},{"label":" INT0_vect_num","kind":1,"sortText":"40ec52eaINT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"40ec52eaINT1","filterText":"INT1","insertText":"INT1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT1"}},{"label":" INT16_C(value)","kind":1,"sortText":"40ec52eaINT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT16_C(${1:value})"}},{"label":" INT16_MAX","kind":1,"sortText":"40ec52eaINT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT16_MAX"}},{"label":" INT1_vect","kind":1,"sortText":"40ec52eaINT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"40ec52eaINT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT1_vect_num"}},{"label":" INT32_C(value)","kind":1,"sortText":"40ec52eaINT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT32_C(${1:value})"}},{"label":" INT32_MAX","kind":1,"sortText":"40ec52eaINT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT32_MAX"}},{"label":" INT32_MIN","kind":1,"sortText":"40ec52eaINT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT32_MIN"}},{"label":" INT64_C(value)","kind":1,"sortText":"40ec52eaINT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT64_C(${1:value})"}},{"label":" INT8_C(value)","kind":1,"sortText":"40ec52eaINT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT8_C(${1:value})"}},{"label":" INT8_MIN","kind":1,"sortText":"40ec52eaINT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INT8_MIN"}},{"label":" INTF0","kind":1,"sortText":"40ec52eaINTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INTF0"}},{"label":" INTF1","kind":1,"sortText":"40ec52eaINTF1","filterText":"INTF1","insertText":"INTF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INTF1"}},{"label":" INTMAX_C(value)","kind":1,"sortText":"40ec52eaINTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INTMAX_C(${1:value})"}},{"label":" INTMAX_MIN","kind":1,"sortText":"40ec52eaINTMAX_MIN","filterText":"INTMAX_MIN","insertText":"INTMAX_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INTMAX_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"40ec52eaINTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"40ec52eaINTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":18}},"newText":"INTPTR_MIN"}}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":177,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":178,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":178,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":170},"contentChanges":[{"range":{"start":{"line":56,"character":18},"end":{"line":56,"character":18}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":20}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":179,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":180,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":19},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":180,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":181,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":19}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":20}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":182,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":171},"contentChanges":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":19}},"rangeLength":0,"text":"<"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 503

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":183,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":184,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":20},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":184,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":185,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":187,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":21}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":186,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":187,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":21}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":188,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":189,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":21}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":190,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":191,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":172},"contentChanges":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 503

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":192,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":193,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":21},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":193,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":194,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":195,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":196,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":196,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":197,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":198,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":199,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":200,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":201,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":173},"contentChanges":[{"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"rangeLength":0,"text":"2"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":202,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":202,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":174},"contentChanges":[{"range":{"start":{"line":56,"character":22},"end":{"line":56,"character":22}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":203,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":22},"end":{"line":56,"character":23}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 523

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":203,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":204,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":23},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":204,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":205,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 464

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":206,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 464

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":23}},"context":{"diagnostics":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":207,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":208,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":175},"contentChanges":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":23}},"rangeLength":0,"text":";"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":209,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 332

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":209,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":210,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":176},"contentChanges":[{"range":{"start":{"line":56,"character":24},"end":{"line":56,"character":24}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 332

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":211,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":212,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":213,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":177},"contentChanges":[{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":25}},"rangeLength":0,"text":"i"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":214,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 332

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":214,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","id":215,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":26},"context":{"triggerKind":1}}}
>>>
Content-Length: 34070

{"id":215,"result":{"isIncomplete":true,"items":[{"label":" i","kind":6,"detail":"int","sortText":"3daccccci","filterText":"i","insertText":"i","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"i"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int"}},{"label":" int8_t","kind":8,"documentation":{"kind":"markdown","value":"actual implementation goes here"},"sortText":"40301411int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int8_t"}},{"label":" int16_t","kind":8,"sortText":"4032a543int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int16_t"}},{"label":"•isAlpha(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an alphabetic character.  \nIt is equivalent to (isupper(c) || islower(c))."},"sortText":"403f858bisAlpha","filterText":"isAlpha","insertText":"isAlpha(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isAlpha(${1:int c})"}},{"label":"•isAlphaNumeric(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"403f858bisAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"•isAscii(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"403f858bisAscii","filterText":"isAscii","insertText":"isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isAscii(${1:int c})"}},{"label":"•isControl(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a control character."},"sortText":"403f858bisControl","filterText":"isControl","insertText":"isControl(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isControl(${1:int c})"}},{"label":"•isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"403f858bisDigit","filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isDigit(${1:int c})"}},{"label":"•isGraph(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character except space."},"sortText":"403f858bisGraph","filterText":"isGraph","insertText":"isGraph(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isGraph(${1:int c})"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"403f858bisHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a lower-case character."},"sortText":"403f858bisLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isLowerCase(${1:int c})"}},{"label":"•isPrintable(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character including space."},"sortText":"403f858bisPrintable","filterText":"isPrintable","insertText":"isPrintable(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isPrintable(${1:int c})"}},{"label":"•isPunct(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"403f858bisPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isPunct(${1:int c})"}},{"label":"•isSpace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for white-space characters. For the avr-libc library,  \nthese are: space, formfeed ('\\\\f'), newline ('\\\\n'), carriage return ('\\\\r'), horizontal tab ('\\\\t'), and vertical tab ('\\\\v')."},"sortText":"403f858bisSpace","filterText":"isSpace","insertText":"isSpace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isSpace(${1:int c})"}},{"label":"•isUpperCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an uppercase letter."},"sortText":"403f858bisUpperCase","filterText":"isUpperCase","insertText":"isUpperCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isUpperCase(${1:int c})"}},{"label":"•isWhitespace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"403f858bisWhitespace","filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isWhitespace(${1:int c})"}},{"label":" isfinite(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The isfinite() function returns a nonzero value if \\\\a \\_\\_x is finite:  \nnot plus or minus infinity, and not NaN."},"sortText":"403f858bisfinite","filterText":"isfinite","insertText":"isfinite(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isfinite(${1:double __x})"}},{"label":" isinf(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isinf() returns 1 if the argument \\\\a \\_\\_x is positive infinity, -1 if \\\\a \\_\\_x is negative infinity, and 0 otherwise.  \n\\\\note The GCC 4.3 can replace this function with inline code that returns the 1 value for both infinities (gcc bug #35509)."},"sortText":"403f858bisinf","filterText":"isinf","insertText":"isinf(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isinf(${1:double __x})"}},{"label":" isnan(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isnan() returns 1 if the argument \\\\a \\_\\_x represents a \"not-a-number\" (NaN) object, otherwise 0."},"sortText":"403f858bisnan","filterText":"isnan","insertText":"isnan(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isnan(${1:double __x})"}},{"label":" itoa(int __val, char *__s, int __radix)","kind":3,"detail":"char *","sortText":"403f858bitoa","filterText":"itoa","insertText":"itoa(${1:int __val}, ${2:char *__s}, ${3:int __radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"itoa(${1:int __val}, ${2:char *__s}, ${3:int __radix})"}},{"label":"•IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"405d1068IPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"IPAddress"}},{"label":" init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68init","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nWeak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"405d8e68initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"initVariant()"}},{"label":" int32_t","kind":8,"sortText":"405d8e68int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int64_t"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"405d8e68int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 16 bits."},"sortText":"405d8e68int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 32 bits."},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 8 bits."},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"int_least8_t"}},{"label":" intmax_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint largest signed int available."},"sortText":"405d8e68intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint Signed pointer compatible type."},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"intptr_t"}},{"label":" isalnum(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphanumeric character. It is equivalent to \\\u003ctt\u003e(isalpha(c) || isdigit(c))\\\u003c/tt\u003e."},"sortText":"405d8e68isalnum","filterText":"isalnum","insertText":"isalnum(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isalnum(${1:int __c})"}},{"label":" isalpha(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphabetic character. It is equivalent to \\\u003ctt\u003e(isupper(c) || islower(c))\\\u003c/tt\u003e."},"sortText":"405d8e68isalpha","filterText":"isalpha","insertText":"isalpha(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isalpha(${1:int __c})"}},{"label":" isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks whether \\\\c c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"405d8e68isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isascii(${1:int __c})"}},{"label":" isblank(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a blank character, that is, a space or a tab."},"sortText":"405d8e68isblank","filterText":"isblank","insertText":"isblank(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isblank(${1:int __c})"}},{"label":" iscntrl(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a control character."},"sortText":"405d8e68iscntrl","filterText":"iscntrl","insertText":"iscntrl(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"iscntrl(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a digit (0 through 9)."},"sortText":"405d8e68isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isdigit(${1:int __c})"}},{"label":" isgraph(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character except space."},"sortText":"405d8e68isgraph","filterText":"isgraph","insertText":"isgraph(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isgraph(${1:int __c})"}},{"label":" islower(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a lower-case character."},"sortText":"405d8e68islower","filterText":"islower","insertText":"islower(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"islower(${1:int __c})"}},{"label":" isprint(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character including space."},"sortText":"405d8e68isprint","filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isprint(${1:int __c})"}},{"label":" ispunct(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"405d8e68ispunct","filterText":"ispunct","insertText":"ispunct(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ispunct(${1:int __c})"}},{"label":" isspace(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for white-space characters. For the avr-libc library, these are:  \nspace, form-feed ('\\\\\\\\f'), newline ('\\\\\\\\n'), carriage return ('\\\\\\\\r'),  \nhorizontal tab ('\\\\\\\\t'), and vertical tab ('\\\\\\\\v')."},"sortText":"405d8e68isspace","filterText":"isspace","insertText":"isspace(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isspace(${1:int __c})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an uppercase letter."},"sortText":"405d8e68isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isupper(${1:int __c})"}},{"label":" isxdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"405d8e68isxdigit","filterText":"isxdigit","insertText":"isxdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"isxdigit(${1:int __c})"}},{"label":" IEEE754binary32_t","kind":8,"documentation":{"kind":"markdown","value":"typedef for IEEE754 \"binary32\" float type internals"},"sortText":"4068a03fIEEE754binary32_t","filterText":"IEEE754binary32_t","insertText":"IEEE754binary32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"IEEE754binary32_t"}},{"label":"•INADDR_NONE","kind":6,"detail":"const IPAddress","documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`"},"sortText":"4068a03fINADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INADDR_NONE"}},{"label":"•InputPin","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"4068a03fInputPin","filterText":"InputPin","insertText":"InputPin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"InputPin"}},{"label":"•inoise16(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@defgroup Noise Noise functions Simplex noise function definitions  \n@{  \n@name scaled 16 bit noise functions  \n@{ 16 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n16.16 fixed point values, 32 bit integers with integral coordinates in the high 16 bits and fractional in the low 16 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-65535"},"sortText":"4068a03finoise16","filterText":"inoise16","insertText":"inoise16($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"inoise16($0)"}},{"label":"•inoise16_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw 16 bit noise functions  \n@{ 16 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-18k,18k)"},"sortText":"4068a03finoise16_raw","filterText":"inoise16_raw","insertText":"inoise16_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"inoise16_raw($0)"}},{"label":"•inoise8(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit scaled noise functions  \n@{ 8 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n8.8 fixed point values, 16 bit integers with integral coordinates in the high 8 bits and fractional in the low 8 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-255"},"sortText":"4068a03finoise8","filterText":"inoise8","insertText":"inoise8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"inoise8($0)"}},{"label":"•inoise8_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit raw noise functions  \n@{ 8 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-70,70)"},"sortText":"4068a03finoise8_raw","filterText":"inoise8_raw","insertText":"inoise8_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"inoise8_raw($0)"}},{"label":" ICES1","kind":1,"sortText":"40ec52eaICES1","filterText":"ICES1","insertText":"ICES1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICES1"}},{"label":" ICF1","kind":1,"sortText":"40ec52eaICF1","filterText":"ICF1","insertText":"ICF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICF1"}},{"label":" ICIE1","kind":1,"sortText":"40ec52eaICIE1","filterText":"ICIE1","insertText":"ICIE1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICIE1"}},{"label":" ICNC1","kind":1,"sortText":"40ec52eaICNC1","filterText":"ICNC1","insertText":"ICNC1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICNC1"}},{"label":" ICR1","kind":1,"sortText":"40ec52eaICR1","filterText":"ICR1","insertText":"ICR1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1"}},{"label":" ICR1H","kind":1,"sortText":"40ec52eaICR1H","filterText":"ICR1H","insertText":"ICR1H","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H"}},{"label":" ICR1H0","kind":1,"sortText":"40ec52eaICR1H0","filterText":"ICR1H0","insertText":"ICR1H0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H0"}},{"label":" ICR1H1","kind":1,"sortText":"40ec52eaICR1H1","filterText":"ICR1H1","insertText":"ICR1H1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H1"}},{"label":" ICR1H2","kind":1,"sortText":"40ec52eaICR1H2","filterText":"ICR1H2","insertText":"ICR1H2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H2"}},{"label":" ICR1H3","kind":1,"sortText":"40ec52eaICR1H3","filterText":"ICR1H3","insertText":"ICR1H3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H3"}},{"label":" ICR1H4","kind":1,"sortText":"40ec52eaICR1H4","filterText":"ICR1H4","insertText":"ICR1H4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H4"}},{"label":" ICR1H5","kind":1,"sortText":"40ec52eaICR1H5","filterText":"ICR1H5","insertText":"ICR1H5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H5"}},{"label":" ICR1H6","kind":1,"sortText":"40ec52eaICR1H6","filterText":"ICR1H6","insertText":"ICR1H6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H6"}},{"label":" ICR1H7","kind":1,"sortText":"40ec52eaICR1H7","filterText":"ICR1H7","insertText":"ICR1H7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1H7"}},{"label":" ICR1L","kind":1,"sortText":"40ec52eaICR1L","filterText":"ICR1L","insertText":"ICR1L","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L"}},{"label":" ICR1L0","kind":1,"sortText":"40ec52eaICR1L0","filterText":"ICR1L0","insertText":"ICR1L0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L0"}},{"label":" ICR1L1","kind":1,"sortText":"40ec52eaICR1L1","filterText":"ICR1L1","insertText":"ICR1L1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L1"}},{"label":" ICR1L2","kind":1,"sortText":"40ec52eaICR1L2","filterText":"ICR1L2","insertText":"ICR1L2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L2"}},{"label":" ICR1L3","kind":1,"sortText":"40ec52eaICR1L3","filterText":"ICR1L3","insertText":"ICR1L3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L3"}},{"label":" ICR1L4","kind":1,"sortText":"40ec52eaICR1L4","filterText":"ICR1L4","insertText":"ICR1L4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L4"}},{"label":" ICR1L5","kind":1,"sortText":"40ec52eaICR1L5","filterText":"ICR1L5","insertText":"ICR1L5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L5"}},{"label":" ICR1L6","kind":1,"sortText":"40ec52eaICR1L6","filterText":"ICR1L6","insertText":"ICR1L6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L6"}},{"label":" ICR1L7","kind":1,"sortText":"40ec52eaICR1L7","filterText":"ICR1L7","insertText":"ICR1L7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"ICR1L7"}},{"label":" INT0","kind":1,"sortText":"40ec52eaINT0","filterText":"INT0","insertText":"INT0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT0"}},{"label":" INT0_vect","kind":1,"sortText":"40ec52eaINT0_vect","filterText":"INT0_vect","insertText":"INT0_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT0_vect"}},{"label":" INT0_vect_num","kind":1,"sortText":"40ec52eaINT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"40ec52eaINT1","filterText":"INT1","insertText":"INT1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT1"}},{"label":" INT16_C(value)","kind":1,"sortText":"40ec52eaINT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT16_C(${1:value})"}},{"label":" INT16_MAX","kind":1,"sortText":"40ec52eaINT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT16_MAX"}},{"label":" INT1_vect","kind":1,"sortText":"40ec52eaINT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"40ec52eaINT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT1_vect_num"}},{"label":" INT32_C(value)","kind":1,"sortText":"40ec52eaINT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT32_C(${1:value})"}},{"label":" INT32_MAX","kind":1,"sortText":"40ec52eaINT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT32_MAX"}},{"label":" INT32_MIN","kind":1,"sortText":"40ec52eaINT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT32_MIN"}},{"label":" INT64_C(value)","kind":1,"sortText":"40ec52eaINT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT64_C(${1:value})"}},{"label":" INT8_C(value)","kind":1,"sortText":"40ec52eaINT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT8_C(${1:value})"}},{"label":" INT8_MIN","kind":1,"sortText":"40ec52eaINT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INT8_MIN"}},{"label":" INTF0","kind":1,"sortText":"40ec52eaINTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INTF0"}},{"label":" INTF1","kind":1,"sortText":"40ec52eaINTF1","filterText":"INTF1","insertText":"INTF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INTF1"}},{"label":" INTMAX_C(value)","kind":1,"sortText":"40ec52eaINTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INTMAX_C(${1:value})"}},{"label":" INTMAX_MIN","kind":1,"sortText":"40ec52eaINTMAX_MIN","filterText":"INTMAX_MIN","insertText":"INTMAX_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INTMAX_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"40ec52eaINTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"40ec52eaINTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":26}},"newText":"INTPTR_MIN"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":216,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":216,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":178},"contentChanges":[{"range":{"start":{"line":56,"character":26},"end":{"line":56,"character":26}},"rangeLength":0,"text":"+"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":217,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 503

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":27},"end":{"line":56,"character":28}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":217,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":218,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":179},"contentChanges":[{"range":{"start":{"line":56,"character":27},"end":{"line":56,"character":27}},"rangeLength":0,"text":"+"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 332

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":219,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":220,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":28},"end":{"line":56,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":220,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":221,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":179}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":180},"contentChanges":[{"range":{"start":{"line":56,"character":28},"end":{"line":56,"character":29}},"rangeLength":1,"text":")"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":222,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":29},"end":{"line":56,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":223,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":180}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":181},"contentChanges":[{"range":{"start":{"line":56,"character":29},"end":{"line":56,"character":29}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":224,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 332

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":1}},"severity":1,"code":"expected_statement","source":"clang","message":"Expected statement"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":224,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":225,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":182},"contentChanges":[{"range":{"start":{"line":56,"character":30},"end":{"line":56,"character":30}},"rangeLength":0,"text":"{}"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":226,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":83,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":93,"character":1}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":122,"character":1}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":183},"contentChanges":[{"range":{"start":{"line":56,"character":31},"end":{"line":56,"character":31}},"rangeLength":0,"text":"\r\n    \r\n  "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":227,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3906

{"id":227,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":59,"character":18}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":86,"character":12}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":95,"character":11}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":59,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":85,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":88,"character":0},"end":{"line":95,"character":1}},"selectionRange":{"start":{"line":88,"character":5},"end":{"line":88,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":97,"character":0},"end":{"line":124,"character":1}},"selectionRange":{"start":{"line":97,"character":5},"end":{"line":97,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":228,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":183}}}Content-Length: 274

{"jsonrpc":"2.0","id":229,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":229,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":184},"contentChanges":[{"range":{"start":{"line":57,"character":0},"end":{"line":57,"character":4}},"rangeLength":4,"text":""},{"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":18}},"rangeLength":0,"text":"\r\n  "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3906

{"id":230,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":59,"character":18}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":86,"character":0},"end":{"line":86,"character":12}},"selectionRange":{"start":{"line":86,"character":5},"end":{"line":86,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":95,"character":0},"end":{"line":95,"character":11}},"selectionRange":{"start":{"line":95,"character":5},"end":{"line":95,"character":9}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":184}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":7,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":185},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"i"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'i'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":231,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":232,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":3},"context":{"triggerKind":1}}}
>>>
Content-Length: 33964

{"id":232,"result":{"isIncomplete":true,"items":[{"label":" if (condition) {statements}","kind":15,"sortText":"3f000000if","filterText":"if","insertText":"if (${1:condition}) {\n${0:statements}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"if (${1:condition}) {\n${0:statements}\n}"}},{"label":" int","kind":14,"sortText":"3f000000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int"}},{"label":" int8_t","kind":8,"documentation":{"kind":"markdown","value":"actual implementation goes here"},"sortText":"40301411int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int8_t"}},{"label":" int16_t","kind":8,"sortText":"4032a543int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int16_t"}},{"label":"•isAlpha(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an alphabetic character.  \nIt is equivalent to (isupper(c) || islower(c))."},"sortText":"403f858bisAlpha","filterText":"isAlpha","insertText":"isAlpha(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isAlpha(${1:int c})"}},{"label":"•isAlphaNumeric(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nWCharacter.h prototypes"},"sortText":"403f858bisAlphaNumeric","filterText":"isAlphaNumeric","insertText":"isAlphaNumeric(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isAlphaNumeric(${1:int c})"}},{"label":"•isAscii(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks whether c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"403f858bisAscii","filterText":"isAscii","insertText":"isAscii(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isAscii(${1:int c})"}},{"label":"•isControl(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a control character."},"sortText":"403f858bisControl","filterText":"isControl","insertText":"isControl(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isControl(${1:int c})"}},{"label":"•isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"403f858bisDigit","filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isDigit(${1:int c})"}},{"label":"•isGraph(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character except space."},"sortText":"403f858bisGraph","filterText":"isGraph","insertText":"isGraph(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isGraph(${1:int c})"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"403f858bisHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•isLowerCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a lower-case character."},"sortText":"403f858bisLowerCase","filterText":"isLowerCase","insertText":"isLowerCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isLowerCase(${1:int c})"}},{"label":"•isPrintable(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character including space."},"sortText":"403f858bisPrintable","filterText":"isPrintable","insertText":"isPrintable(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isPrintable(${1:int c})"}},{"label":"•isPunct(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"403f858bisPunct","filterText":"isPunct","insertText":"isPunct(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isPunct(${1:int c})"}},{"label":"•isSpace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for white-space characters. For the avr-libc library,  \nthese are: space, formfeed ('\\\\f'), newline ('\\\\n'), carriage return ('\\\\r'), horizontal tab ('\\\\t'), and vertical tab ('\\\\v')."},"sortText":"403f858bisSpace","filterText":"isSpace","insertText":"isSpace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isSpace(${1:int c})"}},{"label":"•isUpperCase(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for an uppercase letter."},"sortText":"403f858bisUpperCase","filterText":"isUpperCase","insertText":"isUpperCase(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isUpperCase(${1:int c})"}},{"label":"•isWhitespace(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a blank character, that is, a space or a tab."},"sortText":"403f858bisWhitespace","filterText":"isWhitespace","insertText":"isWhitespace(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isWhitespace(${1:int c})"}},{"label":" isfinite(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The isfinite() function returns a nonzero value if \\\\a \\_\\_x is finite:  \nnot plus or minus infinity, and not NaN."},"sortText":"403f858bisfinite","filterText":"isfinite","insertText":"isfinite(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isfinite(${1:double __x})"}},{"label":" isinf(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isinf() returns 1 if the argument \\\\a \\_\\_x is positive infinity, -1 if \\\\a \\_\\_x is negative infinity, and 0 otherwise.  \n\\\\note The GCC 4.3 can replace this function with inline code that returns the 1 value for both infinities (gcc bug #35509)."},"sortText":"403f858bisinf","filterText":"isinf","insertText":"isinf(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isinf(${1:double __x})"}},{"label":" isnan(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The function isnan() returns 1 if the argument \\\\a \\_\\_x represents a \"not-a-number\" (NaN) object, otherwise 0."},"sortText":"403f858bisnan","filterText":"isnan","insertText":"isnan(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isnan(${1:double __x})"}},{"label":" itoa(int __val, char *__s, int __radix)","kind":3,"detail":"char *","sortText":"403f858bitoa","filterText":"itoa","insertText":"itoa(${1:int __val}, ${2:char *__s}, ${3:int __radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"itoa(${1:int __val}, ${2:char *__s}, ${3:int __radix})"}},{"label":"•IPAddress","kind":7,"documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`  \nA class to make it easier to handle and pass around IP addresses"},"sortText":"405d1068IPAddress","filterText":"IPAddress","insertText":"IPAddress","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"IPAddress"}},{"label":" init()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68init","filterText":"init","insertText":"init()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"init()"}},{"label":" initVariant()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nWeak empty variant initialization function.  \nMay be redefined by variant files."},"sortText":"405d8e68initVariant","filterText":"initVariant","insertText":"initVariant()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"initVariant()"}},{"label":" int32_t","kind":8,"sortText":"405d8e68int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int64_t"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"405d8e68int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 16 bits."},"sortText":"405d8e68int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 32 bits."},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 8 bits."},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"int_least8_t"}},{"label":" intmax_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint largest signed int available."},"sortText":"405d8e68intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint Signed pointer compatible type."},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"intptr_t"}},{"label":" isalnum(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphanumeric character. It is equivalent to \\\u003ctt\u003e(isalpha(c) || isdigit(c))\\\u003c/tt\u003e."},"sortText":"405d8e68isalnum","filterText":"isalnum","insertText":"isalnum(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isalnum(${1:int __c})"}},{"label":" isalpha(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an alphabetic character. It is equivalent to \\\u003ctt\u003e(isupper(c) || islower(c))\\\u003c/tt\u003e."},"sortText":"405d8e68isalpha","filterText":"isalpha","insertText":"isalpha(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isalpha(${1:int __c})"}},{"label":" isascii(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks whether \\\\c c is a 7-bit unsigned char value that fits into the ASCII character set."},"sortText":"405d8e68isascii","filterText":"isascii","insertText":"isascii(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isascii(${1:int __c})"}},{"label":" isblank(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a blank character, that is, a space or a tab."},"sortText":"405d8e68isblank","filterText":"isblank","insertText":"isblank(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isblank(${1:int __c})"}},{"label":" iscntrl(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a control character."},"sortText":"405d8e68iscntrl","filterText":"iscntrl","insertText":"iscntrl(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"iscntrl(${1:int __c})"}},{"label":" isdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a digit (0 through 9)."},"sortText":"405d8e68isdigit","filterText":"isdigit","insertText":"isdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isdigit(${1:int __c})"}},{"label":" isgraph(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character except space."},"sortText":"405d8e68isgraph","filterText":"isgraph","insertText":"isgraph(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isgraph(${1:int __c})"}},{"label":" islower(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a lower-case character."},"sortText":"405d8e68islower","filterText":"islower","insertText":"islower(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"islower(${1:int __c})"}},{"label":" isprint(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character including space."},"sortText":"405d8e68isprint","filterText":"isprint","insertText":"isprint(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isprint(${1:int __c})"}},{"label":" ispunct(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for any printable character which is not a space or an alphanumeric character."},"sortText":"405d8e68ispunct","filterText":"ispunct","insertText":"ispunct(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ispunct(${1:int __c})"}},{"label":" isspace(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for white-space characters. For the avr-libc library, these are:  \nspace, form-feed ('\\\\\\\\f'), newline ('\\\\\\\\n'), carriage return ('\\\\\\\\r'),  \nhorizontal tab ('\\\\\\\\t'), and vertical tab ('\\\\\\\\v')."},"sortText":"405d8e68isspace","filterText":"isspace","insertText":"isspace(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isspace(${1:int __c})"}},{"label":" isupper(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for an uppercase letter."},"sortText":"405d8e68isupper","filterText":"isupper","insertText":"isupper(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isupper(${1:int __c})"}},{"label":" isxdigit(int __c)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup ctype  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"405d8e68isxdigit","filterText":"isxdigit","insertText":"isxdigit(${1:int __c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isxdigit(${1:int __c})"}},{"label":" IEEE754binary32_t","kind":8,"documentation":{"kind":"markdown","value":"typedef for IEEE754 \"binary32\" float type internals"},"sortText":"4068a03fIEEE754binary32_t","filterText":"IEEE754binary32_t","insertText":"IEEE754binary32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"IEEE754binary32_t"}},{"label":"•INADDR_NONE","kind":6,"detail":"const IPAddress","documentation":{"kind":"markdown","value":"From `\"IPAddress.h\"`"},"sortText":"4068a03fINADDR_NONE","filterText":"INADDR_NONE","insertText":"INADDR_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INADDR_NONE"}},{"label":"•InputPin","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"4068a03fInputPin","filterText":"InputPin","insertText":"InputPin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"InputPin"}},{"label":"•inoise16(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@defgroup Noise Noise functions Simplex noise function definitions  \n@{  \n@name scaled 16 bit noise functions  \n@{ 16 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n16.16 fixed point values, 32 bit integers with integral coordinates in the high 16 bits and fractional in the low 16 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-65535"},"sortText":"4068a03finoise16","filterText":"inoise16","insertText":"inoise16($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"inoise16($0)"}},{"label":"•inoise16_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name raw 16 bit noise functions  \n@{ 16 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-18k,18k)"},"sortText":"4068a03finoise16_raw","filterText":"inoise16_raw","insertText":"inoise16_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"inoise16_raw($0)"}},{"label":"•inoise8(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit scaled noise functions  \n@{ 8 bit, fixed point implementation of perlin's Simplex Noise. Coordinates are  \n8.8 fixed point values, 16 bit integers with integral coordinates in the high 8 bits and fractional in the low 8 bits, and the function takes 1d, 2d, and 3d coordinate values. These functions are scaled to return 0-255"},"sortText":"4068a03finoise8","filterText":"inoise8","insertText":"inoise8($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"inoise8($0)"}},{"label":"•inoise8_raw(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\"noise.h\"`  \n@name 8 bit raw noise functions  \n@{ 8 bit raw versions of the noise functions. These values are not scaled/altered and have output values roughly in the range (-70,70)"},"sortText":"4068a03finoise8_raw","filterText":"inoise8_raw","insertText":"inoise8_raw($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"inoise8_raw($0)"}},{"label":" ICES1","kind":1,"sortText":"40ec52eaICES1","filterText":"ICES1","insertText":"ICES1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICES1"}},{"label":" ICF1","kind":1,"sortText":"40ec52eaICF1","filterText":"ICF1","insertText":"ICF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICF1"}},{"label":" ICIE1","kind":1,"sortText":"40ec52eaICIE1","filterText":"ICIE1","insertText":"ICIE1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICIE1"}},{"label":" ICNC1","kind":1,"sortText":"40ec52eaICNC1","filterText":"ICNC1","insertText":"ICNC1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICNC1"}},{"label":" ICR1","kind":1,"sortText":"40ec52eaICR1","filterText":"ICR1","insertText":"ICR1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1"}},{"label":" ICR1H","kind":1,"sortText":"40ec52eaICR1H","filterText":"ICR1H","insertText":"ICR1H","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H"}},{"label":" ICR1H0","kind":1,"sortText":"40ec52eaICR1H0","filterText":"ICR1H0","insertText":"ICR1H0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H0"}},{"label":" ICR1H1","kind":1,"sortText":"40ec52eaICR1H1","filterText":"ICR1H1","insertText":"ICR1H1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H1"}},{"label":" ICR1H2","kind":1,"sortText":"40ec52eaICR1H2","filterText":"ICR1H2","insertText":"ICR1H2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H2"}},{"label":" ICR1H3","kind":1,"sortText":"40ec52eaICR1H3","filterText":"ICR1H3","insertText":"ICR1H3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H3"}},{"label":" ICR1H4","kind":1,"sortText":"40ec52eaICR1H4","filterText":"ICR1H4","insertText":"ICR1H4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H4"}},{"label":" ICR1H5","kind":1,"sortText":"40ec52eaICR1H5","filterText":"ICR1H5","insertText":"ICR1H5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H5"}},{"label":" ICR1H6","kind":1,"sortText":"40ec52eaICR1H6","filterText":"ICR1H6","insertText":"ICR1H6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H6"}},{"label":" ICR1H7","kind":1,"sortText":"40ec52eaICR1H7","filterText":"ICR1H7","insertText":"ICR1H7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1H7"}},{"label":" ICR1L","kind":1,"sortText":"40ec52eaICR1L","filterText":"ICR1L","insertText":"ICR1L","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L"}},{"label":" ICR1L0","kind":1,"sortText":"40ec52eaICR1L0","filterText":"ICR1L0","insertText":"ICR1L0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L0"}},{"label":" ICR1L1","kind":1,"sortText":"40ec52eaICR1L1","filterText":"ICR1L1","insertText":"ICR1L1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L1"}},{"label":" ICR1L2","kind":1,"sortText":"40ec52eaICR1L2","filterText":"ICR1L2","insertText":"ICR1L2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L2"}},{"label":" ICR1L3","kind":1,"sortText":"40ec52eaICR1L3","filterText":"ICR1L3","insertText":"ICR1L3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L3"}},{"label":" ICR1L4","kind":1,"sortText":"40ec52eaICR1L4","filterText":"ICR1L4","insertText":"ICR1L4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L4"}},{"label":" ICR1L5","kind":1,"sortText":"40ec52eaICR1L5","filterText":"ICR1L5","insertText":"ICR1L5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L5"}},{"label":" ICR1L6","kind":1,"sortText":"40ec52eaICR1L6","filterText":"ICR1L6","insertText":"ICR1L6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L6"}},{"label":" ICR1L7","kind":1,"sortText":"40ec52eaICR1L7","filterText":"ICR1L7","insertText":"ICR1L7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"ICR1L7"}},{"label":" INT0","kind":1,"sortText":"40ec52eaINT0","filterText":"INT0","insertText":"INT0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT0"}},{"label":" INT0_vect","kind":1,"sortText":"40ec52eaINT0_vect","filterText":"INT0_vect","insertText":"INT0_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT0_vect"}},{"label":" INT0_vect_num","kind":1,"sortText":"40ec52eaINT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"40ec52eaINT1","filterText":"INT1","insertText":"INT1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT1"}},{"label":" INT16_C(value)","kind":1,"sortText":"40ec52eaINT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT16_C(${1:value})"}},{"label":" INT16_MAX","kind":1,"sortText":"40ec52eaINT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT16_MAX"}},{"label":" INT1_vect","kind":1,"sortText":"40ec52eaINT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"40ec52eaINT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT1_vect_num"}},{"label":" INT32_C(value)","kind":1,"sortText":"40ec52eaINT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT32_C(${1:value})"}},{"label":" INT32_MAX","kind":1,"sortText":"40ec52eaINT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT32_MAX"}},{"label":" INT32_MIN","kind":1,"sortText":"40ec52eaINT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT32_MIN"}},{"label":" INT64_C(value)","kind":1,"sortText":"40ec52eaINT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT64_C(${1:value})"}},{"label":" INT8_C(value)","kind":1,"sortText":"40ec52eaINT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT8_C(${1:value})"}},{"label":" INT8_MIN","kind":1,"sortText":"40ec52eaINT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INT8_MIN"}},{"label":" INTF0","kind":1,"sortText":"40ec52eaINTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INTF0"}},{"label":" INTF1","kind":1,"sortText":"40ec52eaINTF1","filterText":"INTF1","insertText":"INTF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INTF1"}},{"label":" INTMAX_C(value)","kind":1,"sortText":"40ec52eaINTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INTMAX_C(${1:value})"}},{"label":" INTMAX_MIN","kind":1,"sortText":"40ec52eaINTMAX_MIN","filterText":"INTMAX_MIN","insertText":"INTMAX_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INTMAX_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"40ec52eaINTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"40ec52eaINTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"INTPTR_MIN"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":186},"contentChanges":[{"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":3}},"rangeLength":0,"text":"n"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":233,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'in'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":233,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":187},"contentChanges":[{"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":4}},"rangeLength":0,"text":"t"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":234,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":234,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":235,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":236,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":5},"context":{"triggerKind":3}}}
>>>
Content-Length: 21023

{"id":236,"result":{"isIncomplete":false,"items":[{"label":" int","kind":14,"sortText":"3e800000int","filterText":"int","insertText":"int","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int"}},{"label":" int8_t","kind":8,"documentation":{"kind":"markdown","value":"actual implementation goes here"},"sortText":"40301411int8_t","filterText":"int8_t","insertText":"int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int8_t"}},{"label":" int16_t","kind":8,"sortText":"4032a543int16_t","filterText":"int16_t","insertText":"int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int16_t"}},{"label":" int32_t","kind":8,"sortText":"405d8e68int32_t","filterText":"int32_t","insertText":"int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int32_t"}},{"label":" int64_t","kind":8,"sortText":"405d8e68int64_t","filterText":"int64_t","insertText":"int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int64_t"}},{"label":" int_farptr_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \n\\\\ingroup avr_inttypes signed integer type that can hold a pointer \u003e 64 KB"},"sortText":"405d8e68int_farptr_t","filterText":"int_farptr_t","insertText":"int_farptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_farptr_t"}},{"label":" int_fast16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 16 bits."},"sortText":"405d8e68int_fast16_t","filterText":"int_fast16_t","insertText":"int_fast16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_fast16_t"}},{"label":" int_fast32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 32 bits."},"sortText":"405d8e68int_fast32_t","filterText":"int_fast32_t","insertText":"int_fast32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_fast32_t"}},{"label":" int_fast64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_fast64_t","filterText":"int_fast64_t","insertText":"int_fast64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_fast64_t"}},{"label":" int_fast8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint fastest signed int with at least 8 bits."},"sortText":"405d8e68int_fast8_t","filterText":"int_fast8_t","insertText":"int_fast8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_fast8_t"}},{"label":" int_least16_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 16 bits."},"sortText":"405d8e68int_least16_t","filterText":"int_least16_t","insertText":"int_least16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_least16_t"}},{"label":" int_least32_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 32 bits."},"sortText":"405d8e68int_least32_t","filterText":"int_least32_t","insertText":"int_least32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_least32_t"}},{"label":" int_least64_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 64 bits.  \n\\\\note This type is not available when the compiler option -mint8 is in effect."},"sortText":"405d8e68int_least64_t","filterText":"int_least64_t","insertText":"int_least64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_least64_t"}},{"label":" int_least8_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint signed int with at least 8 bits."},"sortText":"405d8e68int_least8_t","filterText":"int_least8_t","insertText":"int_least8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"int_least8_t"}},{"label":" intmax_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint largest signed int available."},"sortText":"405d8e68intmax_t","filterText":"intmax_t","insertText":"intmax_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"intmax_t"}},{"label":" intptr_t","kind":8,"documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdint Signed pointer compatible type."},"sortText":"405d8e68intptr_t","filterText":"intptr_t","insertText":"intptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"intptr_t"}},{"label":" attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40c27b78attachInterrupt","filterText":"attachInterrupt","insertText":"attachInterrupt(${1:uint8_t interruptNum}, ${2:void (*userFunc)(void)}, ${3:int mode})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"attachInterrupt(${1:uint8_t interruptNum}, ${2:void (*userFunc)(void)}, ${3:int mode})"}},{"label":" detachInterrupt(uint8_t interruptNum)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40c27b78detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"detachInterrupt(${1:uint8_t interruptNum})"}},{"label":"•map_data_into_colors_through_palette(uint8_t *dataArray, uint16_t dataCount, CRGB *targetColorArray, const PALETTE \u0026pal, uint8_t brightness = 255, uint8_t opacity = 255, TBlendType blendType = LINEARBLEND)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"40e8a03fmap_data_into_colors_through_palette","filterText":"map_data_into_colors_through_palette","insertText":"map_data_into_colors_through_palette(${1:uint8_t *dataArray}, ${2:uint16_t dataCount}, ${3:CRGB *targetColorArray}, ${4:const PALETTE \u0026pal})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"map_data_into_colors_through_palette(${1:uint8_t *dataArray}, ${2:uint16_t dataCount}, ${3:CRGB *targetColorArray}, ${4:const PALETTE \u0026pal})"}},{"label":" interrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eainterrupts","filterText":"interrupts","insertText":"interrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"interrupts()"}},{"label":"•b_m16_interleave","kind":6,"detail":"const uint8_t [8]","documentation":{"kind":"markdown","value":"From `\"lib8tion/trig8.h\"`"},"sortText":"40f1b066b_m16_interleave","filterText":"b_m16_interleave","insertText":"b_m16_interleave","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"b_m16_interleave"}},{"label":" INT0","kind":1,"sortText":"40f8a156INT0","filterText":"INT0","insertText":"INT0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT0"}},{"label":" INT0_vect","kind":1,"sortText":"40f8a156INT0_vect","filterText":"INT0_vect","insertText":"INT0_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT0_vect"}},{"label":" INT0_vect_num","kind":1,"sortText":"40f8a156INT0_vect_num","filterText":"INT0_vect_num","insertText":"INT0_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT0_vect_num"}},{"label":" INT1","kind":1,"sortText":"40f8a156INT1","filterText":"INT1","insertText":"INT1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT1"}},{"label":" INT16_C(value)","kind":1,"sortText":"40f8a156INT16_C","filterText":"INT16_C","insertText":"INT16_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT16_C(${1:value})"}},{"label":" INT16_MAX","kind":1,"sortText":"40f8a156INT16_MAX","filterText":"INT16_MAX","insertText":"INT16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT16_MAX"}},{"label":" INT16_MIN","kind":1,"sortText":"40f8a156INT16_MIN","filterText":"INT16_MIN","insertText":"INT16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT16_MIN"}},{"label":" INT1_vect","kind":1,"sortText":"40f8a156INT1_vect","filterText":"INT1_vect","insertText":"INT1_vect","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT1_vect"}},{"label":" INT1_vect_num","kind":1,"sortText":"40f8a156INT1_vect_num","filterText":"INT1_vect_num","insertText":"INT1_vect_num","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT1_vect_num"}},{"label":" INT32_C(value)","kind":1,"sortText":"40f8a156INT32_C","filterText":"INT32_C","insertText":"INT32_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT32_C(${1:value})"}},{"label":" INT32_MAX","kind":1,"sortText":"40f8a156INT32_MAX","filterText":"INT32_MAX","insertText":"INT32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT32_MAX"}},{"label":" INT32_MIN","kind":1,"sortText":"40f8a156INT32_MIN","filterText":"INT32_MIN","insertText":"INT32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT32_MIN"}},{"label":" INT64_C(value)","kind":1,"sortText":"40f8a156INT64_C","filterText":"INT64_C","insertText":"INT64_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT64_C(${1:value})"}},{"label":" INT64_MAX","kind":1,"sortText":"40f8a156INT64_MAX","filterText":"INT64_MAX","insertText":"INT64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT64_MAX"}},{"label":" INT64_MIN","kind":1,"sortText":"40f8a156INT64_MIN","filterText":"INT64_MIN","insertText":"INT64_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT64_MIN"}},{"label":" INT8_C(value)","kind":1,"sortText":"40f8a156INT8_C","filterText":"INT8_C","insertText":"INT8_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT8_C(${1:value})"}},{"label":" INT8_MAX","kind":1,"sortText":"40f8a156INT8_MAX","filterText":"INT8_MAX","insertText":"INT8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT8_MAX"}},{"label":" INT8_MIN","kind":1,"sortText":"40f8a156INT8_MIN","filterText":"INT8_MIN","insertText":"INT8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT8_MIN"}},{"label":"•rx_buffer_index_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ffae5crx_buffer_index_t","filterText":"rx_buffer_index_t","insertText":"rx_buffer_index_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"rx_buffer_index_t"}},{"label":"•tx_buffer_index_t","kind":8,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40ffae5ctx_buffer_index_t","filterText":"tx_buffer_index_t","insertText":"tx_buffer_index_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"tx_buffer_index_t"}},{"label":" INTERNAL","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4109df85INTERNAL","filterText":"INTERNAL","insertText":"INTERNAL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTERNAL"}},{"label":" INTF0","kind":1,"sortText":"4109df85INTF0","filterText":"INTF0","insertText":"INTF0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTF0"}},{"label":" INTF1","kind":1,"sortText":"4109df85INTF1","filterText":"INTF1","insertText":"INTF1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTF1"}},{"label":" INTMAX_C(value)","kind":1,"sortText":"4109df85INTMAX_C","filterText":"INTMAX_C","insertText":"INTMAX_C(${1:value})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTMAX_C(${1:value})"}},{"label":" INTMAX_MAX","kind":1,"sortText":"4109df85INTMAX_MAX","filterText":"INTMAX_MAX","insertText":"INTMAX_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTMAX_MAX"}},{"label":" INTMAX_MIN","kind":1,"sortText":"4109df85INTMAX_MIN","filterText":"INTMAX_MIN","insertText":"INTMAX_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTMAX_MIN"}},{"label":" INTPTR_MAX","kind":1,"sortText":"4109df85INTPTR_MAX","filterText":"INTPTR_MAX","insertText":"INTPTR_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTPTR_MAX"}},{"label":" INTPTR_MIN","kind":1,"sortText":"4109df85INTPTR_MIN","filterText":"INTPTR_MIN","insertText":"INTPTR_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTPTR_MIN"}},{"label":" INT_FAST16_MAX","kind":1,"sortText":"4109df85INT_FAST16_MAX","filterText":"INT_FAST16_MAX","insertText":"INT_FAST16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST16_MAX"}},{"label":" INT_FAST16_MIN","kind":1,"sortText":"4109df85INT_FAST16_MIN","filterText":"INT_FAST16_MIN","insertText":"INT_FAST16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST16_MIN"}},{"label":" INT_FAST32_MAX","kind":1,"sortText":"4109df85INT_FAST32_MAX","filterText":"INT_FAST32_MAX","insertText":"INT_FAST32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST32_MAX"}},{"label":" INT_FAST32_MIN","kind":1,"sortText":"4109df85INT_FAST32_MIN","filterText":"INT_FAST32_MIN","insertText":"INT_FAST32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST32_MIN"}},{"label":" INT_FAST64_MAX","kind":1,"sortText":"4109df85INT_FAST64_MAX","filterText":"INT_FAST64_MAX","insertText":"INT_FAST64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST64_MAX"}},{"label":" INT_FAST64_MIN","kind":1,"sortText":"4109df85INT_FAST64_MIN","filterText":"INT_FAST64_MIN","insertText":"INT_FAST64_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST64_MIN"}},{"label":" INT_FAST8_MAX","kind":1,"sortText":"4109df85INT_FAST8_MAX","filterText":"INT_FAST8_MAX","insertText":"INT_FAST8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST8_MAX"}},{"label":" INT_FAST8_MIN","kind":1,"sortText":"4109df85INT_FAST8_MIN","filterText":"INT_FAST8_MIN","insertText":"INT_FAST8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_FAST8_MIN"}},{"label":" INT_LEAST16_MAX","kind":1,"sortText":"4109df85INT_LEAST16_MAX","filterText":"INT_LEAST16_MAX","insertText":"INT_LEAST16_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST16_MAX"}},{"label":" INT_LEAST16_MIN","kind":1,"sortText":"4109df85INT_LEAST16_MIN","filterText":"INT_LEAST16_MIN","insertText":"INT_LEAST16_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST16_MIN"}},{"label":" INT_LEAST32_MAX","kind":1,"sortText":"4109df85INT_LEAST32_MAX","filterText":"INT_LEAST32_MAX","insertText":"INT_LEAST32_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST32_MAX"}},{"label":" INT_LEAST32_MIN","kind":1,"sortText":"4109df85INT_LEAST32_MIN","filterText":"INT_LEAST32_MIN","insertText":"INT_LEAST32_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST32_MIN"}},{"label":" INT_LEAST64_MAX","kind":1,"sortText":"4109df85INT_LEAST64_MAX","filterText":"INT_LEAST64_MAX","insertText":"INT_LEAST64_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST64_MAX"}},{"label":" INT_LEAST64_MIN","kind":1,"sortText":"4109df85INT_LEAST64_MIN","filterText":"INT_LEAST64_MIN","insertText":"INT_LEAST64_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST64_MIN"}},{"label":" INT_LEAST8_MAX","kind":1,"sortText":"4109df85INT_LEAST8_MAX","filterText":"INT_LEAST8_MAX","insertText":"INT_LEAST8_MAX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST8_MAX"}},{"label":" INT_LEAST8_MIN","kind":1,"sortText":"4109df85INT_LEAST8_MIN","filterText":"INT_LEAST8_MIN","insertText":"INT_LEAST8_MIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INT_LEAST8_MIN"}},{"label":"•INTERRUPT_THRESHOLD","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/led_sysdefs_avr.h\"`"},"sortText":"41339ec3INTERRUPT_THRESHOLD","filterText":"INTERRUPT_THRESHOLD","insertText":"INTERRUPT_THRESHOLD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"INTERRUPT_THRESHOLD"}},{"label":" prog_int16_t","kind":8,"sortText":"424c5a80prog_int16_t","filterText":"prog_int16_t","insertText":"prog_int16_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"prog_int16_t"}},{"label":" prog_int32_t","kind":8,"sortText":"424c5a80prog_int32_t","filterText":"prog_int32_t","insertText":"prog_int32_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"prog_int32_t"}},{"label":" prog_int64_t","kind":8,"sortText":"424c5a80prog_int64_t","filterText":"prog_int64_t","insertText":"prog_int64_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"prog_int64_t"}},{"label":" prog_int8_t","kind":8,"sortText":"424c5a80prog_int8_t","filterText":"prog_int8_t","insertText":"prog_int8_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"newText":"prog_int8_t"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":188},"contentChanges":[{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":237,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 342

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_unqualified_id","source":"clang","message":"Expected unqualified-id"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":237,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":238,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":238,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":239,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":239,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":188}}}Content-Length: 274

{"jsonrpc":"2.0","id":240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":240,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":189},"contentChanges":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":6}},"rangeLength":0,"text":"l"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":241,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":8,"jsonrpc":"2.0"}Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":241,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":242,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":56,"character":7},"context":{"triggerKind":1}}}Content-Length: 38

{"jsonrpc":"2.0","id":8,"result":null}
>>>
Content-Length: 69

{"id":242,"result":{"isIncomplete":false,"items":[]},"jsonrpc":"2.0"}Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":190},"contentChanges":[{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":243,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":244,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":191},"contentChanges":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":8}},"rangeLength":0,"text":"d"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":245,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":245,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":246,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":246,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":247,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":191}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":192},"contentChanges":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"rangeLength":0,"text":"O"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":248,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":248,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":249,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":193},"contentChanges":[{"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":10}},"rangeLength":0,"text":"n"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":250,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":250,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":251,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":251,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":252,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":193}}}Content-Length: 274

{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":254,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":253,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":254,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":194},"contentChanges":[{"range":{"start":{"line":56,"character":11},"end":{"line":56,"character":11}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":255,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":255,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":195},"contentChanges":[{"range":{"start":{"line":56,"character":12},"end":{"line":56,"character":12}},"rangeLength":0,"text":"="}]}}Content-Length: 171

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 540

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":1}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":256,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":196},"contentChanges":[{"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":13}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 540

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":1}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":257,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":258,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":197},"contentChanges":[{"range":{"start":{"line":56,"character":14},"end":{"line":56,"character":14}},"rangeLength":0,"text":"1"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":259,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 371

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"severity":1,"code":"expected_semi_declaration","source":"clang","message":"Expected ';' at end of declaration (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":259,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":260,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":262,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":261,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":262,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":197}}}Content-Length: 274

{"jsonrpc":"2.0","id":263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":263,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":264,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":198},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":15}},"rangeLength":0,"text":";"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":265,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":265,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":266,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":266,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":267,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":198}}}Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":199},"contentChanges":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"rangeLength":0,"text":"    "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":268,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":268,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":199}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":200},"contentChanges":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":4}},"rangeLength":0,"text":"s"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":269,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":269,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":270,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 67754

{"id":270,"result":{"isIncomplete":true,"items":[{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3ecf8622setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" sensorReading","kind":6,"detail":"int","documentation":{"kind":"markdown","value":"switch and shut off timer"},"sortText":"3eeffa26sensorReading","filterText":"sensorReading","insertText":"sensorReading","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sensorReading"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3eeffa26setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3eeffa26setLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3eeffa26setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setLedsOff()"}},{"label":"•scale8(uint8_t i, fract8 scale)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale one byte by a second one, which is treated as the numerator of a fraction whose denominator is 256 In other words, it computes i * (scale / 256) 4 clocks AVR with MUL, 2 clocks ARM"},"sortText":"3ef3eb01scale8","filterText":"scale8","insertText":"scale8(${1:uint8_t i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"scale8(${1:uint8_t i}, ${2:fract8 scale})"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" serialEvent()","kind":3,"detail":"void","sortText":"3f13a2a3serialEvent","filterText":"serialEvent","insertText":"serialEvent()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"serialEvent()"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setup()"}},{"label":"•Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"3fdf2ae3Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"Serial"}},{"label":"•String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"3ff42869String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"String"}},{"label":"•StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"400a5edbStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"StringSumHelper"}},{"label":" size_t","kind":8,"sortText":"402a8429size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"size_t"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"sortText":"403331fdstrlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlen(${1:const char *})"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"403f858bserialEventRun","filterText":"serialEventRun","insertText":"serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"serialEventRun()"}},{"label":" signbit(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x \u003c 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 \u003c 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"sortText":"403f858bsignbit","filterText":"signbit","insertText":"signbit(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"signbit(${1:double __x})"}},{"label":" sin(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"sortText":"403f858bsin","filterText":"sin","insertText":"sin(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sin(${1:double __x})"}},{"label":" sinh(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"sortText":"403f858bsinh","filterText":"sinh","insertText":"sinh(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sinh(${1:double __x})"}},{"label":" sqrt(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"403f858bsqrt","filterText":"sqrt","insertText":"sqrt(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sqrt(${1:double __x})"}},{"label":" sqrtf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"sortText":"403f858bsqrtf","filterText":"sqrtf","insertText":"sqrtf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sqrtf(${1:float})"}},{"label":" square(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\\u003cem\u003e\\_\\_x * \\_\\_x\\\u003c/em\u003e.  \n\\\\note This function does not belong to the C standard definition."},"sortText":"403f858bsquare","filterText":"square","insertText":"square(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"square(${1:double __x})"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Pseudo-random number generator seeding; see rand()."},"sortText":"403f858bsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" srandom(unsigned long __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib Pseudo-random number generator seeding; see random()."},"sortText":"403f858bsrandom","filterText":"srandom","insertText":"srandom(${1:unsigned long __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"srandom(${1:unsigned long __seed})"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcasecmp_PF","filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrcasestr","filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcasestr(${1:const char *}, ${2:const char *})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strcat_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"sortText":"403f858bstrcat_P","filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcat_P(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strchr() function returns a pointer to the first occurrence of the character \\\\p val in the string \\\\p src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strchr() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strchr_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr_P","filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchr_P(${1:const char *}, ${2:int __val})"}},{"label":" strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul","filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchrnul(${1:const char *}, ${2:int})"}},{"label":" strchrnul_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul_P","filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchrnul_P(${1:const char *}, ${2:int __val})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp_P","filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcmp_PF","filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcoll(const char *s1, const char *s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcpy_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrcpy_P","filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcpy_P(${1:char *}, ${2:const char *})"}},{"label":" strcpy_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrcpy_PF","filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strcspn(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strcspn_P(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn_P","filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strdup(const char *s1)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strdup(${1:const char *s1})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat_P","filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n \u003c= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval \u003e= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrlcat_PF","filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred."},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcpy_P","filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlcpy_PF","filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlen_P(const char *s)","kind":3,"detail":"size_t","sortText":"403f858bstrlen_P","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlen_P(${1:const char *s})"}},{"label":" strlen_PF(uint_farptr_t src)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlen_PF","filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlen_PF(${1:uint_farptr_t src})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlwr(${1:char *})"}},{"label":" strncat_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrncat_P","filterText":"strncat_P","insertText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncpy(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Copy a string.  \nThe strncpy() function is similar to strcpy(), except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy_P","filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncpy_PF","filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_P(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"sortText":"403f858bstrnlen_P","filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strnlen_P(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_PF(uint_farptr_t src, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrnlen_PF","filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})"}},{"label":" strpbrk(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strpbrk_P(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"sortText":"403f858bstrpbrk_P","filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strrev(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"sortText":"403f858bstrrev","filterText":"strrev","insertText":"strrev(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strrev(${1:char *})"}},{"label":" strsep_P(char **__sp, const char *__delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"sortText":"403f858bstrsep_P","filterText":"strsep_P","insertText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})"}},{"label":" strspn(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strspn(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strspn_P(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn_P","filterText":"strspn_P","insertText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtod(const char *__nptr, char **__endptr)","kind":3,"detail":"double","sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strtol(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strtoul(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *dest, const char *src, size_t n)","kind":3,"detail":"size_t","sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})"}},{"label":" system(const char *)","kind":3,"detail":"int","sortText":"403f858bsystem","filterText":"system","insertText":"system(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"system(${1:const char *})"}},{"label":"•scale8_LEAVING_R1_DIRTY(uint8_t i, fract8 scale)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nThis version of scale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"40456beescale8_LEAVING_R1_DIRTY","filterText":"scale8_LEAVING_R1_DIRTY","insertText":"scale8_LEAVING_R1_DIRTY(${1:uint8_t i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"scale8_LEAVING_R1_DIRTY(${1:uint8_t i}, ${2:fract8 scale})"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"404f4645Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"Stream"}},{"label":" SK6812\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK6812","filterText":"SK6812","insertText":"SK6812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SK6822\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK6822","filterText":"SK6822","insertText":"SK6822\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6822\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SK9822","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK9822","filterText":"SK9822","insertText":"SK9822","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK9822"}},{"label":"•SKIP_ALL","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nAll invalid characters are ignored."},"sortText":"405d8e68SKIP_ALL","filterText":"SKIP_ALL","insertText":"SKIP_ALL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SKIP_ALL"}},{"label":"•SKIP_NONE","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nNothing is skipped, and the stream is not touched unless the first waiting character is valid."},"sortText":"405d8e68SKIP_NONE","filterText":"SKIP_NONE","insertText":"SKIP_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SKIP_NONE"}},{"label":"•SKIP_WHITESPACE","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nOnly tabs, spaces, line feeds \u0026 carriage returns are skipped."},"sortText":"405d8e68SKIP_WHITESPACE","filterText":"SKIP_WHITESPACE","insertText":"SKIP_WHITESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SKIP_WHITESPACE"}},{"label":" SM16703\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SM16703","filterText":"SM16703","insertText":"SM16703\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SM16703\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SM16716","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SM16716","filterText":"SM16716","insertText":"SM16716","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SM16716"}},{"label":" SMART_MATRIX","kind":20,"detail":"ESM","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SMART_MATRIX","filterText":"SMART_MATRIX","insertText":"SMART_MATRIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SMART_MATRIX"}},{"label":" SWS2812","kind":13,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SWS2812","filterText":"SWS2812","insertText":"SWS2812","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SWS2812"}},{"label":"•SHORTEST_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fSHORTEST_HUES","filterText":"SHORTEST_HUES","insertText":"SHORTEST_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SHORTEST_HUES"}},{"label":"•SK6812Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fSK6812Controller","filterText":"SK6812Controller","insertText":"SK6812Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6812Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•SK6822Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fSK6822Controller","filterText":"SK6822Controller","insertText":"SK6822Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6822Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•SK9822Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nSK9822 controller class.  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(24)"},"sortText":"4068a03fSK9822Controller","filterText":"SK9822Controller","insertText":"SK9822Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK9822Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•SPIOutput\u003cuint8_t _DATA_PIN, uint8_t _CLOCK_PIN, uint32_t _SPI_CLOCK_DIVIDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastspi.h\"`"},"sortText":"4068a03fSPIOutput","filterText":"SPIOutput","insertText":"SPIOutput\u003c${1:uint8_t _DATA_PIN}, ${2:uint8_t _CLOCK_PIN}, ${3:uint32_t _SPI_CLOCK_DIVIDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SPIOutput\u003c${1:uint8_t _DATA_PIN}, ${2:uint8_t _CLOCK_PIN}, ${3:uint32_t _SPI_CLOCK_DIVIDER}\u003e"}},{"label":"•Selectable","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  \nPin access class - needs to tune for various platforms (naive fallback solution?)  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////"},"sortText":"4068a03fSelectable","filterText":"Selectable","insertText":"Selectable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"Selectable"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":201},"contentChanges":[{"range":{"start":{"line":58,"character":5},"end":{"line":58,"character":5}},"rangeLength":0,"text":"t"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":271,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'st'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":271,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":272,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":272,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":273,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":6},"context":{"triggerKind":3}}}
>>>
Content-Length: 71144

{"id":273,"result":{"isIncomplete":false,"items":[{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"struct"}},{"label":"•String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"3ff42869String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"String"}},{"label":"•StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"400a5edbStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"StringSumHelper"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"sortText":"403331fdstrlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlen(${1:const char *})"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_P(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp_P() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\returns The strcasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcasecmp_P","filterText":"strcasecmp_P","insertText":"strcasecmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcasecmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcasecmp_PF","filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrcasestr","filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcasestr(${1:const char *}, ${2:const char *})"}},{"label":" strcasestr_P(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcasestr_P(const char \\*s1, const char \\*s2)  \nThis funtion is similar to strcasestr() except that \\\\p s2 is pointer to a string in program space."},"sortText":"403f858bstrcasestr_P","filterText":"strcasestr_P","insertText":"strcasestr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcasestr_P(${1:const char *}, ${2:const char *})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strcat_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"sortText":"403f858bstrcat_P","filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcat_P(${1:char *}, ${2:const char *})"}},{"label":" strcat_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Concatenates two strings  \nThe strcat_PF() function is similar to strcat() except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the string to be appended in Flash  \n\\\\returns The strcat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns"},"sortText":"403f858bstrcat_PF","filterText":"strcat_PF","insertText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcat_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strchr() function returns a pointer to the first occurrence of the character \\\\p val in the string \\\\p src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strchr() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strchr_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr_P","filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strchr_P(${1:const char *}, ${2:int __val})"}},{"label":" strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul","filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strchrnul(${1:const char *}, ${2:int})"}},{"label":" strchrnul_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul_P","filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strchrnul_P(${1:const char *}, ${2:int __val})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp_P","filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcmp_PF","filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcoll(const char *s1, const char *s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcpy_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrcpy_P","filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcpy_P(${1:char *}, ${2:const char *})"}},{"label":" strcpy_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrcpy_PF","filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strcspn(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strcspn_P(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn_P","filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strdup(const char *s1)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strdup(${1:const char *s1})"}},{"label":" strerror(int errnum)","kind":3,"detail":"char *","sortText":"403f858bstrerror","filterText":"strerror","insertText":"strerror(${1:int errnum})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strerror(${1:int errnum})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat_P","filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n \u003c= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval \u003e= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrlcat_PF","filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred."},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcpy_P","filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlcpy_PF","filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlen_P(const char *s)","kind":3,"detail":"size_t","sortText":"403f858bstrlen_P","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlen_P(${1:const char *s})"}},{"label":" strlen_PF(uint_farptr_t src)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlen_PF","filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlen_PF(${1:uint_farptr_t src})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strlwr(${1:char *})"}},{"label":" strncasecmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncasecmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp() function is similar to strcasecmp(), except it only compares the first \\\\p len characters of \\\\p s1.  \n\\\\returns The strncasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p len bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrncasecmp","filterText":"strncasecmp","insertText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncasecmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_P(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_P(const char \\*s1, const char \\*s2, size_t n)  \n\\\\brief Compare two strings ignoring case.  \nThe strncasecmp_P() function is similar to strcasecmp_P(), except it only compares the first \\\\p n characters of \\\\p s1.  \n\\\\param s1 A pointer to a string in the devices SRAM.  \n\\\\param s2 A pointer to a string in the devices Flash.  \n\\\\param n The maximum number of bytes to compare.  \n\\\\returns The strncasecmp_P() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 (or the first \\\\p n bytes thereof) is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strncasecmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2,  \nthen \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrncasecmp_P","filterText":"strncasecmp_P","insertText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncasecmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncasecmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings ignoring case  \nThe strncasecmp_PF() function is similar to strcasecmp_PF(), except it only compares the first \\\\e n characters of \\\\e s1 and the string in flash is addressed using a far pointer.  \n\\\\param s1 A pointer to a string in SRAM  \n\\\\param s2 A far pointer to a string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncasecmp_PF","filterText":"strncasecmp_PF","insertText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})"}},{"label":" strncat(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncat(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat() function is similar to strcat(), except that only the first n characters of src are appended to dest.  \n\\\\returns The strncat() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrncat","filterText":"strncat","insertText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncat_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrncat_P","filterText":"strncat_P","insertText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncat_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strncat_PF() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to append  \n\\\\returns The strncat_PF() function returns a pointer to the resulting string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncat_PF","filterText":"strncat_PF","insertText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncat_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp_P(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_P(const char \\*s1, const char \\*s2, size_t n)  \nThe strncmp_P() function is similar to strcmp_P() except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp_P() function returns an integer less than, equal to,  \nor greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"403f858bstrncmp_P","filterText":"strncmp_P","insertText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncmp_P(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp_PF(const char *s1, uint_farptr_t s2, size_t n)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strncmp_PF(const char \\*s1, uint_farptr_t s2, size_t n)  \n\\\\brief Compare two strings with limited length  \nThe strncmp_PF() function is similar to strcmp_PF() except it only compares the first (at most) \\\\e n characters of \\\\e s1 and \\\\e s2.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\param n The maximum number of bytes to compare  \n\\\\returns The strncmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 (or the first \\\\e n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncmp_PF","filterText":"strncmp_PF","insertText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2}, ${3:size_t n})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncpy(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Copy a string.  \nThe strncpy() function is similar to strcpy(), except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy_P","filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncpy_PF","filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_P(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"sortText":"403f858bstrnlen_P","filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strnlen_P(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_PF(uint_farptr_t src, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrnlen_PF","filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})"}},{"label":" strpbrk(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strpbrk_P(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"sortText":"403f858bstrpbrk_P","filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strrchr_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strrchr_P(const char \\*s, int val)  \n\\\\brief Locate character in string.  \nThe strrchr_P() function returns a pointer to the last occurrence of the character \\\\p val in the flash string \\\\p s.  \n\\\\return The strrchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrrchr_P","filterText":"strrchr_P","insertText":"strrchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strrchr_P(${1:const char *}, ${2:int __val})"}},{"label":" strrev(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"sortText":"403f858bstrrev","filterText":"strrev","insertText":"strrev(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strrev(${1:char *})"}},{"label":" strsep(char **, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strsep(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'.  \n\\\\return The strsep() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep() returns  \n\\\\c NULL."},"sortText":"403f858bstrsep","filterText":"strsep","insertText":"strsep(${1:char **}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strsep(${1:char **}, ${2:const char *})"}},{"label":" strsep_P(char **__sp, const char *__delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"sortText":"403f858bstrsep_P","filterText":"strsep_P","insertText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})"}},{"label":" strspn(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strspn(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strspn_P(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn_P","filterText":"strspn_P","insertText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strstr_P(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_P(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr_P() function finds the first occurrence of the substring  \n\\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared. The strstr_P() function is similar to strstr() except that  \n\\\\p s2 is pointer to a string in program space.  \n\\\\returns The strstr_P() function returns a pointer to the beginning of the substring, or NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrstr_P","filterText":"strstr_P","insertText":"strstr_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strstr_P(${1:const char *}, ${2:const char *})"}},{"label":" strstr_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strstr_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Locate a substring.  \nThe strstr_PF() function finds the first occurrence of the substring \\\\c s2 in the string \\\\c s1. The terminating '\\\\\\\\0' characters are not compared.  \nThe strstr_PF() function is similar to strstr() except that \\\\c s2 is a far pointer to a string in program space.  \n\\\\returns The strstr_PF() function returns a pointer to the beginning of the substring, or NULL if the substring is not found.  \nIf \\\\c s2 points to a string of zero length, the function returns \\\\c s1. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrstr_PF","filterText":"strstr_PF","insertText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strstr_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strtod(const char *__nptr, char **__endptr)","kind":3,"detail":"double","sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})"}},{"label":" strtok(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok(char \\*s, const char \\*delim)  \n\\\\brief Parses the string s into tokens.  \nstrtok parses the string s into tokens. The first call to strtok should have s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok. The delimiter string delim may be different for each call.  \n\\\\returns The strtok() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok() is NOT reentrant. For a reentrant version of this function see \\\\c strtok_r()."},"sortText":"403f858bstrtok","filterText":"strtok","insertText":"strtok(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtok(${1:char *}, ${2:const char *})"}},{"label":" strtok_P(char *__s, const char *__delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_P(char \\*s, const char * delim)  \n\\\\brief Parses the string into tokens.  \nstrtok_P() parses the string \\\\p s into tokens. The first call to strtok_P() should have \\\\p s as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_P().  \nThe delimiter string \\\\p delim may be different for each call.  \nThe strtok_P() function is similar to strtok() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_P() function returns a pointer to the next token or NULL when no more tokens are found.  \n\\\\note strtok_P() is NOT reentrant. For a reentrant version of this function see strtok_rP()."},"sortText":"403f858bstrtok_P","filterText":"strtok_P","insertText":"strtok_P(${1:char *__s}, ${2:const char *__delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtok_P(${1:char *__s}, ${2:const char *__delim})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strtok_rP(char *__s, const char *__delim, char **__last)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strtok_rP (char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nThe strtok_rP() function parses \\\\p string into tokens. The first call to strtok_rP() should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_rP().  \nThe delimiter string \\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_rP() is a reentrant version of strtok_P().  \nThe strtok_rP() function is similar to strtok_r() except that \\\\p delim is pointer to a string in program space.  \n\\\\returns The strtok_rP() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"403f858bstrtok_rP","filterText":"strtok_rP","insertText":"strtok_rP(${1:char *__s}, ${2:const char *__delim}, ${3:char **__last})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtok_rP(${1:char *__s}, ${2:const char *__delim}, ${3:char **__last})"}},{"label":" strtol(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strtoul(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *dest, const char *src, size_t n)","kind":3,"detail":"size_t","sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"404f4645Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"Stream"}},{"label":" size_t","kind":8,"sortText":"405fe31fsize_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"size_t"}},{"label":"•StandardFluorescent","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n0 K, 244, 255, 250"},"sortText":"4068a03fStandardFluorescent","filterText":"StandardFluorescent","insertText":"StandardFluorescent","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"StandardFluorescent"}},{"label":" sfract15ToFloat(sfract15 y)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"sfract15ToFloat: conversion from sfract15 fixed point to IEEE754 32-bit float."},"sortText":"409cf05esfract15ToFloat","filterText":"sfract15ToFloat","insertText":"sfract15ToFloat(${1:sfract15 y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"sfract15ToFloat(${1:sfract15 y})"}},{"label":" stderr","kind":1,"sortText":"40f66322stderr","filterText":"stderr","insertText":"stderr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"stderr"}},{"label":" stdin","kind":1,"sortText":"40f66322stdin","filterText":"stdin","insertText":"stdin","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"stdin"}},{"label":" stdout","kind":1,"sortText":"40f66322stdout","filterText":"stdout","insertText":"stdout","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"newText":"stdout"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 453

{"jsonrpc":"2.0","id":274,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":6},"end":{"line":58,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"message":"Use of undeclared identifier 'st'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":274,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 294

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":202},"contentChanges":[{"range":{"start":{"line":58,"character":5},"end":{"line":58,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 232

{"jsonrpc":"2.0","id":275,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":5},"context":{"triggerKind":1}}}Content-Length: 171

{"jsonrpc":"2.0","id":276,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 67754

{"id":275,"result":{"isIncomplete":true,"items":[{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3ecf8622setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" sensorReading","kind":6,"detail":"int","documentation":{"kind":"markdown","value":"switch and shut off timer"},"sortText":"3eeffa26sensorReading","filterText":"sensorReading","insertText":"sensorReading","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sensorReading"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3eeffa26setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3eeffa26setLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3eeffa26setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setLedsOff()"}},{"label":"•scale8(uint8_t i, fract8 scale)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale one byte by a second one, which is treated as the numerator of a fraction whose denominator is 256 In other words, it computes i * (scale / 256) 4 clocks AVR with MUL, 2 clocks ARM"},"sortText":"3ef3eb01scale8","filterText":"scale8","insertText":"scale8(${1:uint8_t i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"scale8(${1:uint8_t i}, ${2:fract8 scale})"}},{"label":" short","kind":14,"sortText":"3f000000short","filterText":"short","insertText":"short","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"short"}},{"label":" signed","kind":14,"sortText":"3f000000signed","filterText":"signed","insertText":"signed","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"signed"}},{"label":" sizeof(expression-or-type)","kind":15,"detail":"size_t","sortText":"3f000000sizeof","filterText":"sizeof","insertText":"sizeof(${0:expression-or-type})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sizeof(${0:expression-or-type})"}},{"label":" sizeof...(parameter-pack)","kind":15,"detail":"size_t","sortText":"3f000000sizeof...","filterText":"sizeof...","insertText":"sizeof...(${0:parameter-pack})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sizeof...(${0:parameter-pack})"}},{"label":" static","kind":14,"sortText":"3f000000static","filterText":"static","insertText":"static","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"static"}},{"label":" static_assert(expression, message);","kind":15,"sortText":"3f000000static_assert","filterText":"static_assert","insertText":"static_assert(${1:expression}, ${0:message});","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"static_assert(${1:expression}, ${0:message});"}},{"label":" static_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000static_cast","filterText":"static_cast","insertText":"static_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"static_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" struct","kind":14,"sortText":"3f000000struct","filterText":"struct","insertText":"struct","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"struct"}},{"label":" switch (condition) {cases}","kind":15,"sortText":"3f000000switch","filterText":"switch","insertText":"switch (${1:condition}) {\n${0:cases}\n}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"switch (${1:condition}) {\n${0:cases}\n}"}},{"label":" serialEvent()","kind":3,"detail":"void","sortText":"3f13a2a3serialEvent","filterText":"serialEvent","insertText":"serialEvent()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"serialEvent()"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"setup()"}},{"label":"•Serial","kind":6,"detail":"HardwareSerial","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"3fdf2ae3Serial","filterText":"Serial","insertText":"Serial","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"Serial"}},{"label":"•String","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nThe string class"},"sortText":"3ff42869String","filterText":"String","insertText":"String","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"String"}},{"label":"•StringSumHelper","kind":7,"documentation":{"kind":"markdown","value":"From `\"WString.h\"`  \nAn inherited class for holding the result of a concatenation. These result objects are assumed to be writable by subsequent concatenations."},"sortText":"400a5edbStringSumHelper","filterText":"StringSumHelper","insertText":"StringSumHelper","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"StringSumHelper"}},{"label":" size_t","kind":8,"sortText":"402a8429size_t","filterText":"size_t","insertText":"size_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"size_t"}},{"label":" strlen(const char *)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlen(const char \\*src)  \n\\\\brief Calculate the length of a string.  \nThe strlen() function calculates the length of the string src, not including the terminating '\\\\\\\\0' character.  \n\\\\returns The strlen() function returns the number of characters in src."},"sortText":"403331fdstrlen","filterText":"strlen","insertText":"strlen(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlen(${1:const char *})"}},{"label":"•serialEventRun()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"403f858bserialEventRun","filterText":"serialEventRun","insertText":"serialEventRun()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"serialEventRun()"}},{"label":" signbit(double __x)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"The signbit() function returns a nonzero value if the value of \\\\a \\_\\_x has its sign bit set. This is not the same as \\`\\\\a \\_\\_x \u003c 0.0',  \nbecause IEEE 754 floating point allows zero to be signed. The comparison \\`-0.0 \u003c 0.0' is false, but \\`signbit (-0.0)' will return a nonzero value."},"sortText":"403f858bsignbit","filterText":"signbit","insertText":"signbit(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"signbit(${1:double __x})"}},{"label":" sin(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sin() function returns the sine of \\\\a \\_\\_x, measured in radians."},"sortText":"403f858bsin","filterText":"sin","insertText":"sin(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sin(${1:double __x})"}},{"label":" sinh(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sinh() function returns the hyperbolic sine of \\\\a \\_\\_x."},"sortText":"403f858bsinh","filterText":"sinh","insertText":"sinh(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sinh(${1:double __x})"}},{"label":" sqrt(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The sqrt() function returns the non-negative square root of \\\\a \\_\\_x."},"sortText":"403f858bsqrt","filterText":"sqrt","insertText":"sqrt(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sqrt(${1:double __x})"}},{"label":" sqrtf(float)","kind":3,"detail":"float","documentation":{"kind":"markdown","value":"An alias for sqrt()."},"sortText":"403f858bsqrtf","filterText":"sqrtf","insertText":"sqrtf(${1:float})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"sqrtf(${1:float})"}},{"label":" square(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The function square() returns \\\u003cem\u003e\\_\\_x * \\_\\_x\\\u003c/em\u003e.  \n\\\\note This function does not belong to the C standard definition."},"sortText":"403f858bsquare","filterText":"square","insertText":"square(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"square(${1:double __x})"}},{"label":" srand(unsigned int __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"Pseudo-random number generator seeding; see rand()."},"sortText":"403f858bsrand","filterText":"srand","insertText":"srand(${1:unsigned int __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"srand(${1:unsigned int __seed})"}},{"label":" srandom(unsigned long __seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib Pseudo-random number generator seeding; see random()."},"sortText":"403f858bsrandom","filterText":"srandom","insertText":"srandom(${1:unsigned long __seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"srandom(${1:unsigned long __seed})"}},{"label":" strcasecmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcasecmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings ignoring case.  \nThe strcasecmp() function compares the two strings \\\\p s1 and \\\\p s2,  \nignoring the case of the characters.  \n\\\\returns The strcasecmp() function returns an integer less than,  \nequal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcasecmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\"  \n\\\\p s2."},"sortText":"403f858bstrcasecmp","filterText":"strcasecmp","insertText":"strcasecmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcasecmp(${1:const char *}, ${2:const char *})"}},{"label":" strcasecmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcasecmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compare two strings ignoring case  \nThe strcasecmp_PF() function compares the two strings \\\\e s1 and \\\\e s2, ignoring the case of the characters.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcasecmp_PF() function returns an integer less than, equal to, or greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcasecmp_PF","filterText":"strcasecmp_PF","insertText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcasecmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcasestr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcasestr(const char \\*s1, const char \\*s2)  \nThe strcasestr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. This is like strstr(), except that it ignores case of alphabetic symbols in searching for the substring. (Glibc, GNU extension.)  \n\\\\return The strcasestr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrcasestr","filterText":"strcasestr","insertText":"strcasestr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcasestr(${1:const char *}, ${2:const char *})"}},{"label":" strcat(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcat(char \\*dest, const char \\*src)  \n\\\\brief Concatenate two strings.  \nThe strcat() function appends the src string to the dest string overwriting the '\\\\\\\\0' character at the end of dest, and then adds a terminating '\\\\\\\\0' character. The strings may not overlap, and the dest string must have enough space for the result.  \n\\\\returns The strcat() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrcat","filterText":"strcat","insertText":"strcat(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcat(${1:char *}, ${2:const char *})"}},{"label":" strcat_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcat_P(char \\*dest, const char \\*src)  \nThe strcat_P() function is similar to strcat() except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strcat() function returns a pointer to the resulting string  \n\\\\e dest."},"sortText":"403f858bstrcat_P","filterText":"strcat_P","insertText":"strcat_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcat_P(${1:char *}, ${2:const char *})"}},{"label":" strchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strchr() function returns a pointer to the first occurrence of the character \\\\p val in the string \\\\p src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strchr() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr","filterText":"strchr","insertText":"strchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchr(${1:const char *}, ${2:int})"}},{"label":" strchr_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchr_P(const char \\*s, int val)  \n\\\\brief Locate character in program space string.  \nThe strchr_P() function locates the first occurrence of \\\\p val (converted to a char) in the string pointed to by \\\\p s in program space. The terminating null character is considered to be part of the string.  \nThe strchr_P() function is similar to strchr() except that \\\\p s is pointer to a string in program space.  \n\\\\returns The strchr_P() function returns a pointer to the matched character or \\\\c NULL if the character is not found."},"sortText":"403f858bstrchr_P","filterText":"strchr_P","insertText":"strchr_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchr_P(${1:const char *}, ${2:int __val})"}},{"label":" strchrnul(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strchrnul(const char \\*s, int c)  \nThe strchrnul() function is like strchr() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul","filterText":"strchrnul","insertText":"strchrnul(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchrnul(${1:const char *}, ${2:int})"}},{"label":" strchrnul_P(const char *, int __val)","kind":3,"detail":"const char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn const char \\*strchrnul_P(const char \\*s, int c)  \nThe strchrnul_P() function is like strchr_P() except that if \\\\p c is not found in \\\\p s, then it returns a pointer to the null byte at the end of \\\\p s, rather than \\\\c NULL. (Glibc, GNU extension.)  \n\\\\return The strchrnul_P() function returns a pointer to the matched character, or a pointer to the null byte at the end of \\\\p s (i.e.,  \n\\\\c s+strlen(s)) if the character is not found."},"sortText":"403f858bstrchrnul_P","filterText":"strchrnul_P","insertText":"strchrnul_P(${1:const char *}, ${2:int __val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strchrnul_P(${1:const char *}, ${2:int __val})"}},{"label":" strcmp(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strcmp(const char \\*s1, const char \\*s2)  \n\\\\brief Compare two strings.  \nThe strcmp() function compares the two strings \\\\p s1 and \\\\p s2.  \n\\\\returns The strcmp() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp","filterText":"strcmp","insertText":"strcmp(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcmp(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_P(const char *, const char *)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_P(const char \\*s1, const char \\*s2)  \nThe strcmp_P() function is similar to strcmp() except that \\\\p s2 is pointer to a string in program space.  \n\\\\returns The strcmp_P() function returns an integer less than, equal to, or greater than zero if \\\\p s1 is found, respectively, to be less than, to match, or be greater than \\\\p s2. A consequence of the ordering used by strcmp_P() is that if \\\\p s1 is an initial substring of \\\\p s2, then \\\\p s1 is considered to be \"less than\" \\\\p s2."},"sortText":"403f858bstrcmp_P","filterText":"strcmp_P","insertText":"strcmp_P(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcmp_P(${1:const char *}, ${2:const char *})"}},{"label":" strcmp_PF(const char *s1, uint_farptr_t s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn int strcmp_PF(const char \\*s1, uint_farptr_t s2)  \n\\\\brief Compares two strings  \nThe strcmp_PF() function is similar to strcmp() except that \\\\e s2 is a far pointer to a string in program space.  \n\\\\param s1 A pointer to the first string in SRAM  \n\\\\param s2 A far pointer to the second string in Flash  \n\\\\returns The strcmp_PF() function returns an integer less than, equal to,  \nor greater than zero if \\\\e s1 is found, respectively, to be less than, to match, or be greater than \\\\e s2. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrcmp_PF","filterText":"strcmp_PF","insertText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcmp_PF(${1:const char *s1}, ${2:uint_farptr_t s2})"}},{"label":" strcoll(const char *s1, const char *s2)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"libstdc++ compatibility, dummy declarations"},"sortText":"403f858bstrcoll","filterText":"strcoll","insertText":"strcoll(${1:const char *s1}, ${2:const char *s2})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcoll(${1:const char *s1}, ${2:const char *s2})"}},{"label":" strcpy(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strcpy(char \\*dest, const char \\*src)  \n\\\\brief Copy a string.  \nThe strcpy() function copies the string pointed to by src (including the terminating '\\\\\\\\0' character) to the array pointed to by dest. The strings may not overlap, and the destination string dest must be large enough to receive the copy.  \n\\\\returns The strcpy() function returns a pointer to the destination string dest.  \n\\\\note If the destination string of a strcpy() is not large enough (that is, if the programmer was stupid/lazy, and failed to check the size before copying) then anything might happen. Overflowing fixed length strings is a favourite cracker technique."},"sortText":"403f858bstrcpy","filterText":"strcpy","insertText":"strcpy(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcpy(${1:char *}, ${2:const char *})"}},{"label":" strcpy_P(char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_P(char \\*dest, const char \\*src)  \nThe strcpy_P() function is similar to strcpy() except that src is a pointer to a string in program space.  \n\\\\returns The strcpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrcpy_P","filterText":"strcpy_P","insertText":"strcpy_P(${1:char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcpy_P(${1:char *}, ${2:const char *})"}},{"label":" strcpy_PF(char *dest, uint_farptr_t src)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strcpy_PF(char \\*dst, uint_farptr_t src)  \n\\\\brief Duplicate a string  \nThe strcpy_PF() function is similar to strcpy() except that \\\\e src is a far pointer to a string in program space.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\returns The strcpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrcpy_PF","filterText":"strcpy_PF","insertText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcpy_PF(${1:char *dest}, ${2:uint_farptr_t src})"}},{"label":" strcspn(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strcspn(const char \\*s, const char \\*reject)  \nThe strcspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject.  \n\\\\return The strcspn() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn","filterText":"strcspn","insertText":"strcspn(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcspn(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strcspn_P(const char *__s, const char *__reject)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strcspn_P(const char \\*s, const char \\*reject)  \nThe strcspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters not in \\\\p reject. This function is similar to strcspn() except that \\\\p reject is a pointer to a string in program space.  \n\\\\return The strcspn_P() function returns the number of characters in the initial segment of \\\\p s which are not in the string \\\\p reject.  \nThe terminating zero is not considered as a part of string."},"sortText":"403f858bstrcspn_P","filterText":"strcspn_P","insertText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strcspn_P(${1:const char *__s}, ${2:const char *__reject})"}},{"label":" strdup(const char *s1)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strdup(const char \\*s1)  \n\\\\brief Duplicate a string.  \nThe strdup() function allocates memory and copies into it the string addressed by s1, including the terminating null character.  \n\\\\warning The strdup() function calls malloc() to allocate the memory for the duplicated string! The user is responsible for freeing the memory by calling free().  \n\\\\returns The strdup() function returns a pointer to the resulting string dest. If malloc() cannot allocate enough storage for the string, strdup() will return NULL.  \n\\\\warning Be sure to check the return value of the strdup() function to make sure that the function has succeeded in allocating the memory!"},"sortText":"403f858bstrdup","filterText":"strdup","insertText":"strdup(${1:const char *s1})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strdup(${1:const char *s1})"}},{"label":" strlcat(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcat(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat","filterText":"strlcat","insertText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcat(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Concatenate two strings.  \nThe strlcat_P() function is similar to strlcat(), except that the \\\\p src string must be located in program space (flash).  \nAppends \\\\p src to string \\\\p dst of size \\\\p siz (unlike strncat(),  \n\\\\p siz is the full size of \\\\p dst, not space left). At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz \u003c=  \n\\\\p strlen(dst)).  \n\\\\returns The strlcat_P() function returns strlen(src) + MIN(siz,  \nstrlen(initial dst)). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcat_P","filterText":"strlcat_P","insertText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcat_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcat_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Concatenate two strings  \nThe strlcat_PF() function is similar to strlcat(), except that the \\\\e src string must be located in program space (flash) and is addressed using a far pointer.  \nAppends src to string dst of size \\\\e n (unlike strncat(), \\\\e n is the full size of \\\\e dst, not space left). At most \\\\e n-1 characters will be copied. Always NULL terminates (unless \\\\e n \u003c= strlen(\\\\e dst)).  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The total number of bytes allocated to the destination string  \n\\\\returns The strlcat_PF() function returns strlen(\\\\e src) + MIN(\\\\e n,  \nstrlen(initial \\\\e dst)). If retval \u003e= \\\\e n, truncation occurred. The contents of RAMPZ SFR are undefined when the funcion returns."},"sortText":"403f858bstrlcat_PF","filterText":"strlcat_PF","insertText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcat_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlcpy(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strlcpy(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \n\\\\returns The strlcpy() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred."},"sortText":"403f858bstrlcpy","filterText":"strlcpy","insertText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_P(char *, const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_P(char \\*dst, const char \\*src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy \\\\p src to string \\\\p dst of size \\\\p siz. At most \\\\p siz-1 characters will be copied. Always NULL terminates (unless \\\\p siz == 0).  \nThe strlcpy_P() function is similar to strlcpy() except that the  \n\\\\p src is pointer to a string in memory space.  \n\\\\returns The strlcpy_P() function returns strlen(src). If retval \u003e= siz, truncation occurred."},"sortText":"403f858bstrlcpy_P","filterText":"strlcpy_P","insertText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strlcpy_PF(char *dst, uint_farptr_t src, size_t siz)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlcpy_PF(char \\*dst, uint_farptr_t src, size_t siz)  \n\\\\brief Copy a string from progmem to RAM.  \nCopy src to string dst of size siz. At most siz-1 characters will be copied. Always NULL terminates (unless siz == 0).  \n\\\\returns The strlcpy_PF() function returns strlen(src). If retval \u003e= siz,  \ntruncation occurred. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlcpy_PF","filterText":"strlcpy_PF","insertText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlcpy_PF(${1:char *dst}, ${2:uint_farptr_t src}, ${3:size_t siz})"}},{"label":" strlen_P(const char *s)","kind":3,"detail":"size_t","sortText":"403f858bstrlen_P","filterText":"strlen_P","insertText":"strlen_P(${1:const char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlen_P(${1:const char *s})"}},{"label":" strlen_PF(uint_farptr_t src)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strlen_PF(uint_farptr_t s)  \n\\\\brief Obtain the length of a string  \nThe strlen_PF() function is similar to strlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in flash  \n\\\\returns The strlen_PF() function returns the number of characters in  \n\\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrlen_PF","filterText":"strlen_PF","insertText":"strlen_PF(${1:uint_farptr_t src})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlen_PF(${1:uint_farptr_t src})"}},{"label":" strlwr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strlwr(char \\*s)  \n\\\\brief Convert a string to lower case.  \nThe strlwr() function will convert a string to lower case. Only the upper case alphabetic characters [A .. Z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strlwr() function returns a pointer to the converted string."},"sortText":"403f858bstrlwr","filterText":"strlwr","insertText":"strlwr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strlwr(${1:char *})"}},{"label":" strncat_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncat_P(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Concatenate two strings.  \nThe strncat_P() function is similar to strncat(), except that the \\\\e src string must be located in program space (flash).  \n\\\\returns The strncat_P() function returns a pointer to the resulting string dest."},"sortText":"403f858bstrncat_P","filterText":"strncat_P","insertText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncat_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncmp(const char *, const char *, size_t)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn int strncmp(const char \\*s1, const char \\*s2, size_t len)  \n\\\\brief Compare two strings.  \nThe strncmp() function is similar to strcmp(), except it only compares the first (at most) n characters of s1 and s2.  \n\\\\returns The strncmp() function returns an integer less than, equal to, or greater than zero if s1 (or the first n bytes thereof) is found,  \nrespectively, to be less than, to match, or be greater than s2."},"sortText":"403f858bstrncmp","filterText":"strncmp","insertText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncmp(${1:const char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strncpy(char \\*dest, const char \\*src, size_t len)  \n\\\\brief Copy a string.  \nThe strncpy() function is similar to strcpy(), except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy","filterText":"strncpy","insertText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncpy(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_P(char *, const char *, size_t)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_P(char \\*dest, const char \\*src, size_t n)  \nThe strncpy_P() function is similar to strcpy_P() except that not more than n bytes of src are copied. Thus, if there is no null byte among the first n bytes of src, the result will not be null-terminated.  \nIn the case where the length of src is less than that of n, the remainder of dest will be padded with nulls.  \n\\\\returns The strncpy_P() function returns a pointer to the destination string dest."},"sortText":"403f858bstrncpy_P","filterText":"strncpy_P","insertText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncpy_P(${1:char *}, ${2:const char *}, ${3:size_t})"}},{"label":" strncpy_PF(char *dest, uint_farptr_t src, size_t len)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strncpy_PF(char \\*dst, uint_farptr_t src, size_t n)  \n\\\\brief Duplicate a string until a limited length  \nThe strncpy_PF() function is similar to strcpy_PF() except that not more than \\\\e n bytes of \\\\e src are copied. Thus, if there is no null byte among the first \\\\e n bytes of \\\\e src, the result will not be null-terminated.  \nIn the case where the length of \\\\e src is less than that of \\\\e n, the remainder of \\\\e dst will be padded with nulls.  \n\\\\param dst A pointer to the destination string in SRAM  \n\\\\param src A far pointer to the source string in Flash  \n\\\\param n The maximum number of bytes to copy  \n\\\\returns The strncpy_PF() function returns a pointer to the destination string \\\\e dst. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrncpy_PF","filterText":"strncpy_PF","insertText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strncpy_PF(${1:char *dest}, ${2:uint_farptr_t src}, ${3:size_t len})"}},{"label":" strnlen(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strnlen(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen function returns the number of characters in the string pointed to by src, not including the terminating '\\\\\\\\0' character, but at most len. In doing this, strnlen looks only at the first len characters at src and never beyond src+len.  \n\\\\returns The strnlen function returns strlen(src), if that is less than len, or len if there is no '\\\\\\\\0' character among the first len characters pointed to by src."},"sortText":"403f858bstrnlen","filterText":"strnlen","insertText":"strnlen(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strnlen(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_P(const char *, size_t)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_P(const char \\*src, size_t len)  \n\\\\brief Determine the length of a fixed-size string.  \nThe strnlen_P() function is similar to strnlen(), except that \\\\c src is a pointer to a string in program space.  \n\\\\returns The strnlen_P function returns strlen_P(src), if that is less than  \n\\\\c len, or \\\\c len if there is no '\\\\\\\\0' character among the first \\\\c len characters pointed to by \\\\c src."},"sortText":"403f858bstrnlen_P","filterText":"strnlen_P","insertText":"strnlen_P(${1:const char *}, ${2:size_t})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strnlen_P(${1:const char *}, ${2:size_t})"}},{"label":" strnlen_PF(uint_farptr_t src, size_t len)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strnlen_PF(uint_farptr_t s, size_t len)  \n\\\\brief Determine the length of a fixed-size string  \nThe strnlen_PF() function is similar to strnlen(), except that \\\\e s is a far pointer to a string in program space.  \n\\\\param s A far pointer to the string in Flash  \n\\\\param len The maximum number of length to return  \n\\\\returns The strnlen_PF function returns strlen_P(\\\\e s), if that is less than \\\\e len, or \\\\e len if there is no '\\\\\\\\0' character among the first \\\\e len characters pointed to by \\\\e s. The contents of RAMPZ SFR are undefined when the function returns."},"sortText":"403f858bstrnlen_PF","filterText":"strnlen_PF","insertText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strnlen_PF(${1:uint_farptr_t src}, ${2:size_t len})"}},{"label":" strpbrk(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strpbrk(const char \\*s, const char \\*accept)  \nThe strpbrk() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the string \\\\p accept.  \n\\\\return The strpbrk() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will be \\\\c NULL."},"sortText":"403f858bstrpbrk","filterText":"strpbrk","insertText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strpbrk(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strpbrk_P(const char *__s, const char *__accept)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strpbrk_P(const char \\*s, const char \\*accept)  \nThe strpbrk_P() function locates the first occurrence in the string  \n\\\\p s of any of the characters in the flash string \\\\p accept. This function is similar to strpbrk() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strpbrk_P() function returns a pointer to the character in \\\\p s that matches one of the characters in \\\\p accept, or \\\\c NULL if no such character is found. The terminating zero is not considered as a part of string: if one or both args are empty, the result will  \n\\\\c NULL."},"sortText":"403f858bstrpbrk_P","filterText":"strpbrk_P","insertText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strpbrk_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strrchr(const char *, int)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrchr(const char \\*src, int val)  \n\\\\brief Locate character in string.  \nThe strrchr() function returns a pointer to the last occurrence of the character val in the string src.  \nHere \"character\" means \"byte\" - these functions do not work with wide or multi-byte characters.  \n\\\\returns The strrchr() function returns a pointer to the matched character or NULL if the character is not found."},"sortText":"403f858bstrrchr","filterText":"strrchr","insertText":"strrchr(${1:const char *}, ${2:int})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strrchr(${1:const char *}, ${2:int})"}},{"label":" strrev(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strrev(char \\*s)  \n\\\\brief Reverse a string.  \nThe strrev() function reverses the order of the string.  \n\\\\returns The strrev() function returns a pointer to the beginning of the reversed string."},"sortText":"403f858bstrrev","filterText":"strrev","insertText":"strrev(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strrev(${1:char *})"}},{"label":" strsep_P(char **__sp, const char *__delim)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn char \\*strsep_P(char \\*\\*sp, const char \\*delim)  \n\\\\brief Parse a string into tokens.  \nThe strsep_P() function locates, in the string referenced by \\\\p \\*sp,  \nthe first occurrence of any character in the string \\\\p delim (or the terminating '\\\\\\\\0' character) and replaces it with a '\\\\\\\\0'. The location of the next character after the delimiter character (or \\\\c NULL, if the end of the string was reached) is stored in \\\\p \\*sp. An  \n\\`\\`empty'' field, i.e. one caused by two adjacent delimiter characters, can be detected by comparing the location referenced by the pointer returned in \\\\p \\*sp to '\\\\\\\\0'. This function is similar to strsep() except that \\\\p delim is a pointer to a string in program space.  \n\\\\return The strsep_P() function returns a pointer to the original value of \\\\p \\*sp. If \\\\p \\*sp is initially \\\\c NULL, strsep_P() returns  \n\\\\c NULL."},"sortText":"403f858bstrsep_P","filterText":"strsep_P","insertText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strsep_P(${1:char **__sp}, ${2:const char *__delim})"}},{"label":" strspn(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn size_t strspn(const char \\*s, const char \\*accept)  \nThe strspn() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept.  \n\\\\return The strspn() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn","filterText":"strspn","insertText":"strspn(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strspn(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strspn_P(const char *__s, const char *__accept)","kind":3,"detail":"size_t","documentation":{"kind":"markdown","value":"\\\\ingroup avr_pgmspace  \n\\\\fn size_t strspn_P(const char \\*s, const char \\*accept)  \nThe strspn_P() function calculates the length of the initial segment of \\\\p s which consists entirely of characters in \\\\p accept. This function is similar to strspn() except that \\\\p accept is a pointer to a string in program space.  \n\\\\return The strspn_P() function returns the number of characters in the initial segment of \\\\p s which consist only of characters from \\\\p accept. The terminating zero is not considered as a part of string."},"sortText":"403f858bstrspn_P","filterText":"strspn_P","insertText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strspn_P(${1:const char *__s}, ${2:const char *__accept})"}},{"label":" strstr(const char *, const char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strstr(const char \\*s1, const char \\*s2)  \n\\\\brief Locate a substring.  \nThe strstr() function finds the first occurrence of the substring \\\\p s2 in the string \\\\p s1. The terminating '\\\\\\\\0' characters are not compared.  \n\\\\returns The strstr() function returns a pointer to the beginning of the substring, or \\\\c NULL if the substring is not found. If \\\\p s2 points to a string of zero length, the function returns \\\\p s1."},"sortText":"403f858bstrstr","filterText":"strstr","insertText":"strstr(${1:const char *}, ${2:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strstr(${1:const char *}, ${2:const char *})"}},{"label":" strtod(const char *__nptr, char **__endptr)","kind":3,"detail":"double","sortText":"403f858bstrtod","filterText":"strtod","insertText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtod(${1:const char *__nptr}, ${2:char **__endptr})"}},{"label":" strtok_r(char *, const char *, char **)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strtok_r(char \\*string, const char \\*delim, char \\*\\*last)  \n\\\\brief Parses string into tokens.  \nstrtok_r parses string into tokens. The first call to strtok_r should have string as its first argument. Subsequent calls should have the first argument set to NULL. If a token ends with a delimiter, this delimiting character is overwritten with a '\\\\\\\\0' and a pointer to the next character is saved for the next call to strtok_r. The delimiter string  \n\\\\p delim may be different for each call. \\\\p last is a user allocated char\\* pointer. It must be the same while parsing the same string. strtok_r is a reentrant version of strtok().  \n\\\\returns The strtok_r() function returns a pointer to the next token or NULL when no more tokens are found."},"sortText":"403f858bstrtok_r","filterText":"strtok_r","insertText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtok_r(${1:char *}, ${2:const char *}, ${3:char **})"}},{"label":" strtol(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The strtol() function converts the string in \\\\c nptr to a long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to a long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11,  \nand so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtol() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtol() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtol() function returns the result of the conversion, unless the value would underflow or overflow. If no conversion could be performed, 0 is returned. If an overflow or underflow occurs, \\\\c errno is set to \\\\ref avr_errno \"ERANGE\" and the function return value is clamped to \\\\c LONG_MIN or \\\\c LONG_MAX, respectively."},"sortText":"403f858bstrtol","filterText":"strtol","insertText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtol(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strtoul(const char *__nptr, char **__endptr, int __base)","kind":3,"detail":"unsigned long","documentation":{"kind":"markdown","value":"The strtoul() function converts the string in \\\\c nptr to an unsigned long value. The conversion is done according to the given base, which must be between 2 and 36 inclusive, or be the special value 0.  \nThe string may begin with an arbitrary amount of white space (as determined by isspace()) followed by a single optional \\\\c '+' or \\\\c '-' sign. If \\\\c base is zero or 16, the string may then include a  \n\\\\c \"0x\" prefix, and the number will be read in base 16; otherwise,  \na zero base is taken as 10 (decimal) unless the next character is  \n\\\\c '0', in which case it is taken as 8 (octal).  \nThe remainder of the string is converted to an unsigned long value in the obvious manner, stopping at the first character which is not a valid digit in the given base. (In bases above 10, the letter \\\\c 'A' in either upper or lower case represents 10, \\\\c 'B' represents 11, and so forth, with \\\\c 'Z' representing 35.)  \nIf \\\\c endptr is not NULL, strtoul() stores the address of the first invalid character in \\\\c \\*endptr. If there were no digits at all,  \nhowever, strtoul() stores the original value of \\\\c nptr in \\\\c endptr. (Thus, if \\\\c \\*nptr is not \\\\c '\\\\\\\\0' but \\\\c \\*\\*endptr is \\\\c '\\\\\\\\0' on return, the entire string was valid.)  \nThe strtoul() function return either the result of the conversion or, if there was a leading minus sign, the negation of the result of the conversion, unless the original (non-negated) value would overflow; in the latter case, strtoul() returns ULONG_MAX, and \\\\c errno is set to \\\\ref avr_errno \"ERANGE\". If no conversion could be performed, 0 is returned."},"sortText":"403f858bstrtoul","filterText":"strtoul","insertText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strtoul(${1:const char *__nptr}, ${2:char **__endptr}, ${3:int __base})"}},{"label":" strupr(char *)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_string  \n\\\\fn char \\*strupr(char \\*s)  \n\\\\brief Convert a string to upper case.  \nThe strupr() function will convert a string to upper case. Only the lower case alphabetic characters [a .. z] are converted. Non-alphabetic characters will not be changed.  \n\\\\returns The strupr() function returns a pointer to the converted string. The pointer is the same as that passed in since the operation is perform in place."},"sortText":"403f858bstrupr","filterText":"strupr","insertText":"strupr(${1:char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strupr(${1:char *})"}},{"label":" strxfrm(char *dest, const char *src, size_t n)","kind":3,"detail":"size_t","sortText":"403f858bstrxfrm","filterText":"strxfrm","insertText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"strxfrm(${1:char *dest}, ${2:const char *src}, ${3:size_t n})"}},{"label":" system(const char *)","kind":3,"detail":"int","sortText":"403f858bsystem","filterText":"system","insertText":"system(${1:const char *})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"system(${1:const char *})"}},{"label":"•scale8_LEAVING_R1_DIRTY(uint8_t i, fract8 scale)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nThis version of scale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"40456beescale8_LEAVING_R1_DIRTY","filterText":"scale8_LEAVING_R1_DIRTY","insertText":"scale8_LEAVING_R1_DIRTY(${1:uint8_t i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"scale8_LEAVING_R1_DIRTY(${1:uint8_t i}, ${2:fract8 scale})"}},{"label":"•Stream","kind":7,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"404f4645Stream","filterText":"Stream","insertText":"Stream","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"Stream"}},{"label":" SK6812\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK6812","filterText":"SK6812","insertText":"SK6812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6812\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SK6822\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK6822","filterText":"SK6822","insertText":"SK6822\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6822\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SK9822","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SK9822","filterText":"SK9822","insertText":"SK9822","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK9822"}},{"label":"•SKIP_ALL","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nAll invalid characters are ignored."},"sortText":"405d8e68SKIP_ALL","filterText":"SKIP_ALL","insertText":"SKIP_ALL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SKIP_ALL"}},{"label":"•SKIP_NONE","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nNothing is skipped, and the stream is not touched unless the first waiting character is valid."},"sortText":"405d8e68SKIP_NONE","filterText":"SKIP_NONE","insertText":"SKIP_NONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SKIP_NONE"}},{"label":"•SKIP_WHITESPACE","kind":20,"detail":"LookaheadMode","documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nOnly tabs, spaces, line feeds \u0026 carriage returns are skipped."},"sortText":"405d8e68SKIP_WHITESPACE","filterText":"SKIP_WHITESPACE","insertText":"SKIP_WHITESPACE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SKIP_WHITESPACE"}},{"label":" SM16703\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SM16703","filterText":"SM16703","insertText":"SM16703\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SM16703\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" SM16716","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SM16716","filterText":"SM16716","insertText":"SM16716","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SM16716"}},{"label":" SMART_MATRIX","kind":20,"detail":"ESM","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SMART_MATRIX","filterText":"SMART_MATRIX","insertText":"SMART_MATRIX","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SMART_MATRIX"}},{"label":" SWS2812","kind":13,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68SWS2812","filterText":"SWS2812","insertText":"SWS2812","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SWS2812"}},{"label":"•SHORTEST_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fSHORTEST_HUES","filterText":"SHORTEST_HUES","insertText":"SHORTEST_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SHORTEST_HUES"}},{"label":"•SK6812Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fSK6812Controller","filterText":"SK6812Controller","insertText":"SK6812Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6812Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•SK6822Controller\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`"},"sortText":"4068a03fSK6822Controller","filterText":"SK6822Controller","insertText":"SK6822Controller\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK6822Controller\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•SK9822Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nSK9822 controller class.  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(24)"},"sortText":"4068a03fSK9822Controller","filterText":"SK9822Controller","insertText":"SK9822Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SK9822Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•SPIOutput\u003cuint8_t _DATA_PIN, uint8_t _CLOCK_PIN, uint32_t _SPI_CLOCK_DIVIDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastspi.h\"`"},"sortText":"4068a03fSPIOutput","filterText":"SPIOutput","insertText":"SPIOutput\u003c${1:uint8_t _DATA_PIN}, ${2:uint8_t _CLOCK_PIN}, ${3:uint32_t _SPI_CLOCK_DIVIDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"SPIOutput\u003c${1:uint8_t _DATA_PIN}, ${2:uint8_t _CLOCK_PIN}, ${3:uint32_t _SPI_CLOCK_DIVIDER}\u003e"}},{"label":"•Selectable","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  \nPin access class - needs to tune for various platforms (naive fallback solution?)  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////"},"sortText":"4068a03fSelectable","filterText":"Selectable","insertText":"Selectable","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"newText":"Selectable"}}]},"jsonrpc":"2.0"}Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 's'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":276,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":276}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":203},"contentChanges":[{"range":{"start":{"line":58,"character":5},"end":{"line":58,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":277,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'se'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":277,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":277}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":204},"contentChanges":[{"range":{"start":{"line":58,"character":6},"end":{"line":58,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 274

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'set'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":278,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 38

{"id":279,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":280,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":7},"context":{"triggerKind":3}}}
>>>
Content-Length: 5337

{"id":280,"result":{"isIncomplete":false,"items":[{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3ecf8622setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3eeffa26setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3eeffa26setLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3eeffa26setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setLedsOff()"}},{"label":" setup()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3setup","filterText":"setup","insertText":"setup()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setup()"}},{"label":"•set_max_power_in_milliwatts(uint32_t powerInmW)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSet the maximum power used in watts  \n@deprecated - use FastLED.setMaxPowerInMilliWatts"},"sortText":"4068a03fset_max_power_in_milliwatts","filterText":"set_max_power_in_milliwatts","insertText":"set_max_power_in_milliwatts(${1:uint32_t powerInmW})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"set_max_power_in_milliwatts(${1:uint32_t powerInmW})"}},{"label":"•set_max_power_in_volts_and_milliamps(uint8_t volts, uint32_t milliamps)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSet the maximum power used in milliamps for a given voltage  \n@deprecated - use FastLED.setMaxPowerInVoltsAndMilliamps()"},"sortText":"4068a03fset_max_power_in_volts_and_milliamps","filterText":"set_max_power_in_volts_and_milliamps","insertText":"set_max_power_in_volts_and_milliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"set_max_power_in_volts_and_milliamps(${1:uint8_t volts}, ${2:uint32_t milliamps})"}},{"label":"•set_max_power_indicator_LED(uint8_t pinNumber)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSelect a pin with an led that will be flashed to indicate that power management is pulling down the brightness"},"sortText":"4068a03fset_max_power_indicator_LED","filterText":"set_max_power_indicator_LED","insertText":"set_max_power_indicator_LED(${1:uint8_t pinNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"set_max_power_indicator_LED(${1:uint8_t pinNumber})"}},{"label":" setbuf(FILE *stream, char *buf)","kind":3,"detail":"void","sortText":"4068a03fsetbuf","filterText":"setbuf","insertText":"setbuf(${1:FILE *stream}, ${2:char *buf})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setbuf(${1:FILE *stream}, ${2:char *buf})"}},{"label":" setvbuf(FILE *stream, char *buf, int mode, size_t size)","kind":3,"detail":"int","sortText":"4068a03fsetvbuf","filterText":"setvbuf","insertText":"setvbuf(${1:FILE *stream}, ${2:char *buf}, ${3:int mode}, ${4:size_t size})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"setvbuf(${1:FILE *stream}, ${2:char *buf}, ${3:int mode}, ${4:size_t size})"}},{"label":"•CRGBSet","kind":8,"documentation":{"kind":"markdown","value":"From `\"pixelset.h\"`"},"sortText":"40cf659eCRGBSet","filterText":"CRGBSet","insertText":"CRGBSet","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"CRGBSet"}},{"label":"•random16_set_seed(uint16_t seed)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/random8.h\"`  \nSet the 16-bit seed used for the random number generator"},"sortText":"40d9f877random16_set_seed","filterText":"random16_set_seed","insertText":"random16_set_seed(${1:uint16_t seed})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"newText":"random16_set_seed(${1:uint16_t seed})"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":281,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 454

{"jsonrpc":"2.0","id":282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":7},"end":{"line":58,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"message":"Use of undeclared identifier 'set'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":281,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":282,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":283,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 454

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":7},"end":{"line":58,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"message":"Use of undeclared identifier 'set'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":283,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":284,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 454

{"jsonrpc":"2.0","id":286,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":7},"end":{"line":58,"character":7}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":7}},"message":"Use of undeclared identifier 'set'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":285,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":286,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":204}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":205},"contentChanges":[{"range":{"start":{"line":58,"character":7},"end":{"line":58,"character":7}},"rangeLength":0,"text":"A"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setA'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":287,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":288,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 455

{"jsonrpc":"2.0","id":289,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":8}},"message":"Use of undeclared identifier 'setA'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":288,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":289,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":205}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":206},"contentChanges":[{"range":{"start":{"line":58,"character":8},"end":{"line":58,"character":8}},"rangeLength":0,"text":"l"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":290,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":9}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setAl'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":290,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":291,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 456

{"jsonrpc":"2.0","id":292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":9}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":9}},"message":"Use of undeclared identifier 'setAl'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":291,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":292,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":206}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":207},"contentChanges":[{"range":{"start":{"line":58,"character":9},"end":{"line":58,"character":9}},"rangeLength":0,"text":"l"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":293,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 352

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":10}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setAll'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":293,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":294,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 460

{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":10}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":10}},"message":"Use of undeclared identifier 'setAll'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":294,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":295,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":208},"contentChanges":[{"range":{"start":{"line":58,"character":10},"end":{"line":58,"character":10}},"rangeLength":0,"text":"L"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":296,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 353

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":11}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'setAllL'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":296,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":209},"contentChanges":[{"range":{"start":{"line":58,"character":11},"end":{"line":58,"character":11}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":297,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 895

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":12}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'setAllLe'; did you mean 'setAllLeds'? (fix available)\n\nproject.ino.cpp:63:6: note: 'setAllLeds' declared here"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"'setAllLeds' declared here\n\nproject.ino.cpp:78:5: error: use of undeclared identifier 'setAllLe'; did you mean 'setAllLeds'?"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":297,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":298,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":298,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":210},"contentChanges":[{"range":{"start":{"line":58,"character":12},"end":{"line":58,"character":12}},"rangeLength":0,"text":"d"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":299,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 897

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":13}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'setAllLed'; did you mean 'setAllLeds'? (fix available)\n\nproject.ino.cpp:63:6: note: 'setAllLeds' declared here"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"'setAllLeds' declared here\n\nproject.ino.cpp:78:5: error: use of undeclared identifier 'setAllLed'; did you mean 'setAllLeds'?"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":299,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":211},"contentChanges":[{"range":{"start":{"line":58,"character":13},"end":{"line":58,"character":13}},"rangeLength":0,"text":"s"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":300,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":300,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":301,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":301,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":14},"end":{"line":58,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":302,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":303,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":304,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":14},"end":{"line":58,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":303,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":304,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":212},"contentChanges":[{"range":{"start":{"line":58,"character":14},"end":{"line":58,"character":14}},"rangeLength":0,"text":"()"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 931

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'setAllLeds'\n\nproject.ino.cpp:63:6: note: candidate function not viable: requires 3 arguments, but 0 were provided"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"Candidate function not viable: requires 3 arguments, but 0 were provided\n\nproject.ino.cpp:78:5: error: no matching function for call to 'setAllLeds'"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":305,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":306,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":306,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":307,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":15},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":307,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":15},"end":{"line":58,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":308,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":309,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":310,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":15},"end":{"line":58,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":309,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":310,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":212}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":213},"contentChanges":[{"range":{"start":{"line":58,"character":15},"end":{"line":58,"character":15}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":311,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 929

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'setAllLeds'\n\nproject.ino.cpp:63:6: note: candidate function not viable: requires 3 arguments, but 1 was provided"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"Candidate function not viable: requires 3 arguments, but 1 was provided\n\nproject.ino.cpp:78:5: error: no matching function for call to 'setAllLeds'"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":311,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":312,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":16},"end":{"line":58,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":312,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":214},"contentChanges":[{"range":{"start":{"line":58,"character":16},"end":{"line":58,"character":16}},"rangeLength":0,"text":","}]}}Content-Length: 171

{"jsonrpc":"2.0","id":313,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":17},"end":{"line":58,"character":18}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":313,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":314,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":315,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":17},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 183

{"id":315,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":215},"contentChanges":[{"range":{"start":{"line":58,"character":17},"end":{"line":58,"character":17}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":316,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":18},"end":{"line":58,"character":19}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":316,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":317,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":18},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":317,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":318,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":319,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":18},"end":{"line":58,"character":18}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":18},"end":{"line":58,"character":19}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":318,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":319,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":216},"contentChanges":[{"range":{"start":{"line":58,"character":18},"end":{"line":58,"character":18}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":320,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 931

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'setAllLeds'\n\nproject.ino.cpp:63:6: note: candidate function not viable: requires 3 arguments, but 2 were provided"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"Candidate function not viable: requires 3 arguments, but 2 were provided\n\nproject.ino.cpp:78:5: error: no matching function for call to 'setAllLeds'"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":320,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":321,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":217},"contentChanges":[{"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":322,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 931

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'setAllLeds'\n\nproject.ino.cpp:63:6: note: candidate function not viable: requires 3 arguments, but 2 were provided"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"Candidate function not viable: requires 3 arguments, but 2 were provided\n\nproject.ino.cpp:78:5: error: no matching function for call to 'setAllLeds'"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":322,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":323,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":323,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":324,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":218},"contentChanges":[{"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":325,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 931

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'setAllLeds'\n\nproject.ino.cpp:63:6: note: candidate function not viable: requires 3 arguments, but 2 were provided"},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"severity":3,"message":"Candidate function not viable: requires 3 arguments, but 2 were provided\n\nproject.ino.cpp:78:5: error: no matching function for call to 'setAllLeds'"},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":325,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":326,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":326,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":327,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":327,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":219},"contentChanges":[{"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"rangeLength":0,"text":","}]}}Content-Length: 171

{"jsonrpc":"2.0","id":328,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":21}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":328,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":329,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":20},"context":{"isRetrigger":false,"triggerCharacter":",","triggerKind":2}}}
>>>
Content-Length: 183

{"id":329,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":330,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":331,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":20}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":21}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":330,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":331,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":220},"contentChanges":[{"range":{"start":{"line":58,"character":20},"end":{"line":58,"character":20}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":332,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":332,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":221},"contentChanges":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":21}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":333,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":333,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":334,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":22},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":334,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":335,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":335,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":336,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":22},"end":{"line":58,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":336,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":222},"contentChanges":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":337,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":337,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":338,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":21},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":338,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":339,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":340,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":21}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":339,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":340,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":223},"contentChanges":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":21}},"rangeLength":0,"text":"N"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":341,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 548

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'N'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":341,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","id":342,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":22},"context":{"triggerKind":1}}}
>>>
Content-Length: 16941

{"id":342,"result":{"isIncomplete":true,"items":[{"label":" new type(expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}(${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"new ${1:type}(${0:expressions})"}},{"label":" new type[size](expressions)","kind":15,"sortText":"3f000000new","filterText":"new","insertText":"new ${1:type}[${2:size}](${0:expressions})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"new ${1:type}[${2:size}](${0:expressions})"}},{"label":" noexcept(expression)","kind":15,"detail":"bool","sortText":"3f000000noexcept","filterText":"noexcept","insertText":"noexcept(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"noexcept(${0:expression})"}},{"label":" nullptr","kind":15,"detail":"std::nullptr_t","sortText":"3f000000nullptr","filterText":"nullptr","insertText":"nullptr","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nullptr"}},{"label":"•nscale8(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8 - scale down the brightness of an array of pixels all at once. This function can scale pixels all the way down to black even if 'scale' is not zero."},"sortText":"3f651eb8nscale8","filterText":"nscale8","insertText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":"•nscale8_video(CRGB *leds, uint16_t num_leds, uint8_t scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnscale8_video - scale down the brightness of an array of pixels all at once. Guaranteed to never scale a pixel all the way down to black, unless 'scale' is zero."},"sortText":"3f651eb8nscale8_video","filterText":"nscale8_video","insertText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8_video(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t scale})"}},{"label":" NUM_LEDS","kind":1,"sortText":"40400000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NUM_LEDS"}},{"label":" NUM_LEDS_FRONT","kind":1,"sortText":"40400000NUM_LEDS_FRONT","filterText":"NUM_LEDS_FRONT","insertText":"NUM_LEDS_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NUM_LEDS_FRONT"}},{"label":" NEOPIXEL\u003cuint8_t DATA_PIN\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"404a3370NEOPIXEL","filterText":"NEOPIXEL","insertText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NEOPIXEL\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":" noTone(uint8_t _pin)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68noTone","filterText":"noTone","insertText":"noTone(${1:uint8_t _pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"noTone(${1:uint8_t _pin})"}},{"label":" nullptr_t","kind":8,"sortText":"405d8e68nullptr_t","filterText":"nullptr_t","insertText":"nullptr_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nullptr_t"}},{"label":"•NOBLEND","kind":20,"detail":"TBlendType","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fNOBLEND","filterText":"NOBLEND","insertText":"NOBLEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NOBLEND"}},{"label":"•napplyGamma_video(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nThe \"n\" versions below modify their arguments in-place."},"sortText":"4068a03fnapplyGamma_video","filterText":"napplyGamma_video","insertText":"napplyGamma_video($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"napplyGamma_video($0)"}},{"label":"•nblend(…)","kind":3,"detail":"[4 overloads]","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblend - destructively modifies one color, blending in a given fraction of an overlay color"},"sortText":"4068a03fnblend","filterText":"nblend","insertText":"nblend($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nblend($0)"}},{"label":"•nblendPaletteTowardPalette(CRGBPalette16 \u0026currentPalette, CRGBPalette16 \u0026targetPalette, uint8_t maxChanges = 24)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`  \nnblendPaletteTowardPalette:  \nAlter one palette by making it slightly more like a 'target palette', used for palette cross-fades.  \nIt does this by comparing each of the R, G, and B channels of each entry in the current palette to the corresponding entry in the target palette and making small adjustments:  \nIf the Red channel is too low, it will be increased.  \nIf the Red channel is too high, it will be slightly reduced.  \n... and likewise for Green and Blue channels.  \nAdditionally, there are two significant visual improvements to this algorithm implemented here. First is this:  \nWhen increasing a channel, it is stepped up by ONE.  \nWhen decreasing a channel, it is stepped down by TWO.  \nDue to the way the eye perceives light, and the way colors are represented in RGB, this produces a more uniform apparent brightness when cross-fading between most palette colors.  \nThe second visual tweak is limiting the number of changes that will be made to the palette at once. If all the palette entries are changed at once, it can give a muddled appearance.  \nHowever, if only a few palette entries are changed at once,  \nyou get a visually smoother transition: in the middle of the cross-fade your current palette will actually contain some colors from the old palette, a few blended colors, and some colors from the new palette.  \nThe maximum number of possible palette changes per call is 48 (sixteen color entries time three channels each).  \nThe default 'maximim number of changes' here is 12, meaning that only approximately a quarter of the palette entries will be changed per call."},"sortText":"4068a03fnblendPaletteTowardPalette","filterText":"nblendPaletteTowardPalette","insertText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nblendPaletteTowardPalette(${1:CRGBPalette16 \u0026currentPalette}, ${2:CRGBPalette16 \u0026targetPalette})"}},{"label":"•nscale8_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8, also this version of nscale8 does not clean up the R1 register on AVR If you are doing several 'scale8's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_LEAVING_R1_DIRTY","filterText":"nscale8_LEAVING_R1_DIRTY","insertText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8_video_LEAVING_R1_DIRTY(uint8_t \u0026i, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nIn place modifying version of scale8_video, also this version of nscale8_video does not clean up the R1 register on AVR If you are doing several 'scale8_video's in a row, use this, and then explicitly call cleanup_R1."},"sortText":"4071b066nscale8_video_LEAVING_R1_DIRTY","filterText":"nscale8_video_LEAVING_R1_DIRTY","insertText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8_video_LEAVING_R1_DIRTY(${1:uint8_t \u0026i}, ${2:fract8 scale})"}},{"label":"•nscale8x2(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2","filterText":"nscale8x2","insertText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8x2(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x2_video(uint8_t \u0026i, uint8_t \u0026j, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale two one byte values by a third one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes i,j * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x2_video","filterText":"nscale8x2_video","insertText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8x2_video(${1:uint8_t \u0026i}, ${2:uint8_t \u0026j}, ${3:fract8 scale})"}},{"label":"•nscale8x3(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256)  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3","filterText":"nscale8x3","insertText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8x3(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":"•nscale8x3_video(uint8_t \u0026r, uint8_t \u0026g, uint8_t \u0026b, fract8 scale)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nscale three one byte values by a fourth one, which is treated as the numerator of a fraction whose demominator is 256 In other words, it computes r,g,b * (scale / 256), ensuring that non-zero values passed in remain non zero, no matter how low the scale argument.  \nTHIS FUNCTION ALWAYS MODIFIES ITS ARGUMENTS IN PLACE"},"sortText":"4071b066nscale8x3_video","filterText":"nscale8x3_video","insertText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"nscale8x3_video(${1:uint8_t \u0026r}, ${2:uint8_t \u0026g}, ${3:uint8_t \u0026b}, ${4:fract8 scale})"}},{"label":" NAN","kind":1,"sortText":"40d1050aNAN","filterText":"NAN","insertText":"NAN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NAN"}},{"label":" NOT_AN_INTERRUPT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_AN_INTERRUPT","filterText":"NOT_AN_INTERRUPT","insertText":"NOT_AN_INTERRUPT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NOT_AN_INTERRUPT"}},{"label":" NOT_A_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PIN","filterText":"NOT_A_PIN","insertText":"NOT_A_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NOT_A_PIN"}},{"label":" NOT_A_PORT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_A_PORT","filterText":"NOT_A_PORT","insertText":"NOT_A_PORT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NOT_A_PORT"}},{"label":" NOT_ON_TIMER","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaNOT_ON_TIMER","filterText":"NOT_ON_TIMER","insertText":"NOT_ON_TIMER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NOT_ON_TIMER"}},{"label":"•NO_IGNORE_CHAR","kind":1,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`"},"sortText":"40ec52eaNO_IGNORE_CHAR","filterText":"NO_IGNORE_CHAR","insertText":"NO_IGNORE_CHAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NO_IGNORE_CHAR"}},{"label":" NULL","kind":1,"sortText":"40ec52eaNULL","filterText":"NULL","insertText":"NULL","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NULL"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NUM_CONTROLLERS"}},{"label":" noInterrupts()","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eanoInterrupts","filterText":"noInterrupts","insertText":"noInterrupts()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"noInterrupts()"}},{"label":"•NO_PIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastpin.h\"`"},"sortText":"40f66322NO_PIN","filterText":"NO_PIN","insertText":"NO_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NO_PIN"}},{"label":"•NO_TIME(A, B, C)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NO_TIME","filterText":"NO_TIME","insertText":"NO_TIME(${1:A}, ${2:B}, ${3:C})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NO_TIME(${1:A}, ${2:B}, ${3:C})"}},{"label":"•NS(_NS)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"40f66322NS","filterText":"NS","insertText":"NS(${1:_NS})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NS(${1:_NS})"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":22}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":343,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":343,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":344,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":22},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":344,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":224},"contentChanges":[{"range":{"start":{"line":58,"character":22},"end":{"line":58,"character":22}},"rangeLength":0,"text":"U"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":345,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":23}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NU'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":345,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":346,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":23},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":346,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":225},"contentChanges":[{"range":{"start":{"line":58,"character":23},"end":{"line":58,"character":23}},"rangeLength":0,"text":"M"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":347,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 550

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":24}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":347,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":348,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":24},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":348,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":349,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":349,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":350,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":24},"end":{"line":58,"character":24}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":24}},"message":"Use of undeclared identifier 'NUM'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":350,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":226},"contentChanges":[{"range":{"start":{"line":58,"character":24},"end":{"line":58,"character":24}},"rangeLength":0,"text":"_"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":351,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 551

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":351,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":352,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":25},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":352,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":353,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":353,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","id":354,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":25},"context":{"triggerKind":3}}}
>>>
Content-Length: 1643

{"id":354,"result":{"isIncomplete":false,"items":[{"label":" NUM_LEDS","kind":1,"sortText":"40400000NUM_LEDS","filterText":"NUM_LEDS","insertText":"NUM_LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"newText":"NUM_LEDS"}},{"label":" NUM_LEDS_FRONT","kind":1,"sortText":"40400000NUM_LEDS_FRONT","filterText":"NUM_LEDS_FRONT","insertText":"NUM_LEDS_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"newText":"NUM_LEDS_FRONT"}},{"label":" NUM_CONTROLLERS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40ec52eaNUM_CONTROLLERS","filterText":"NUM_CONTROLLERS","insertText":"NUM_CONTROLLERS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"newText":"NUM_CONTROLLERS"}},{"label":"•NUM_ANALOG_INPUTS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_ANALOG_INPUTS","filterText":"NUM_ANALOG_INPUTS","insertText":"NUM_ANALOG_INPUTS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"newText":"NUM_ANALOG_INPUTS"}},{"label":"•NUM_DIGITAL_PINS","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dNUM_DIGITAL_PINS","filterText":"NUM_DIGITAL_PINS","insertText":"NUM_DIGITAL_PINS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"newText":"NUM_DIGITAL_PINS"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 459

{"jsonrpc":"2.0","id":355,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":25},"end":{"line":58,"character":25}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":25}},"message":"Use of undeclared identifier 'NUM_'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":355,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":227},"contentChanges":[{"range":{"start":{"line":58,"character":25},"end":{"line":58,"character":25}},"rangeLength":0,"text":"L"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":356,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 552

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":26}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_L'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":356,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":228},"contentChanges":[{"range":{"start":{"line":58,"character":26},"end":{"line":58,"character":26}},"rangeLength":0,"text":"E"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":357,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 553

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":27}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'NUM_LE'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":357,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":358,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":27},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":358,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":359,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":359,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":229},"contentChanges":[{"range":{"start":{"line":58,"character":27},"end":{"line":58,"character":27}},"rangeLength":0,"text":"D"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":360,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 719

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":28}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'NUM_LED'; did you mean 'HUE_RED'? (fix available)\n\nC:\\Users\\tommy\\Documents\\Arduino\\libraries\\FastLED\\src\\pixeltypes.h:78:5:\nnote: 'HUE_RED' declared here"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":360,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":361,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":28},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":361,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":230},"contentChanges":[{"range":{"start":{"line":58,"character":28},"end":{"line":58,"character":28}},"rangeLength":0,"text":"S"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":362,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":362,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":363,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":29},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 183

{"id":363,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":364,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":364,"result":[],"jsonrpc":"2.0"}Content-Length: 396

{"id":365,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server588172071/sketch/project.ino.cpp","selection":{"start":{"line":77,"character":29},"end":{"line":77,"character":29}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":366,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":367,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":366,"result":[],"jsonrpc":"2.0"}Content-Length: 396

{"id":367,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server588172071/sketch/project.ino.cpp","selection":{"start":{"line":77,"character":29},"end":{"line":77,"character":29}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":231},"contentChanges":[{"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":30}},"rangeLength":1,"text":")"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":368,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":368,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":369,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":30},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":369,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":232},"contentChanges":[{"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"rangeLength":0,"text":";"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":370,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":370,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":371,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":371,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 255

{"jsonrpc":"2.0","id":372,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":31},"context":{"isRetrigger":true,"triggerKind":3}}}
>>>
Content-Length: 93

{"id":372,"result":{"signatures":[],"activeSignature":0,"activeParameter":0},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":373,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":374,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":373,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":374,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":376,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":375,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":376,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":377,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":26}}}
>>>
Content-Length: 220

{"id":377,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":378,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":379,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":378,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":379,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":380,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":381,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":380,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":381,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":232}}}Content-Length: 274

{"jsonrpc":"2.0","id":382,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":31},"end":{"line":57,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":382,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":383,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":24}}}
>>>
Content-Length: 220

{"id":383,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":384,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":25}}}
>>>
Content-Length: 38

{"id":384,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":385,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":25},"end":{"line":58,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 396

{"id":385,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server588172071/sketch/project.ino.cpp","selection":{"start":{"line":77,"character":25},"end":{"line":77,"character":25}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":386,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":27}}}
>>>
Content-Length: 220

{"id":386,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":387,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":29}}}
>>>
Content-Length: 220

{"id":387,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":388,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":63,"character":16}}}
>>>
Content-Length: 285

{"id":388,"result":{"contents":{"kind":"markdown","value":"### instance-method `available`  \n\n---\n→ `int`  \n\n---\n```cpp\n// In HardwareSerial\npublic: virtual int available()\n```"},"range":{"start":{"line":63,"character":16},"end":{"line":63,"character":25}}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":389,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":28}}}
>>>
Content-Length: 220

{"id":389,"result":{"contents":{"kind":"markdown","value":"### macro `NUM_LEDS`  \n\n---\n```cpp\n#define NUM_LEDS 11\n```"},"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":29}}},"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":390,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":29}}}
>>>
Content-Length: 391

{"id":390,"result":[{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"kind":1},{"range":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}},"kind":1},{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"kind":1},{"range":{"start":{"line":115,"character":4},"end":{"line":115,"character":14}},"kind":1}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":391,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 396

{"id":391,"result":[{"title":"Expand macro 'NUM_LEDS'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server588172071/sketch/project.ino.cpp","selection":{"start":{"line":77,"character":29},"end":{"line":77,"character":29}}}]}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":233},"contentChanges":[{"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":392,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":392,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":393,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":393,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":234},"contentChanges":[{"range":{"start":{"line":58,"character":30},"end":{"line":58,"character":30}},"rangeLength":0,"text":"*"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":394,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":32}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":394,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":395,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 444

{"jsonrpc":"2.0","id":396,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":32}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":395,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":396,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":235},"contentChanges":[{"range":{"start":{"line":58,"character":31},"end":{"line":58,"character":31}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":397,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 336

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":397,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":236},"contentChanges":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":32}},"rangeLength":0,"text":"l"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":398,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'l'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":398,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 233

{"jsonrpc":"2.0","id":399,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":33},"context":{"triggerKind":1}}}Content-Length: 274

{"jsonrpc":"2.0","id":400,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 27768

{"id":399,"result":{"isIncomplete":false,"items":[{"label":" ledOn","kind":6,"detail":"int","sortText":"3cfc0000ledOn","filterText":"ledOn","insertText":"ledOn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ledOn"}},{"label":" ledBrightness","kind":6,"detail":"int","sortText":"3db51ac6ledBrightness","filterText":"ledBrightness","insertText":"ledBrightness","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ledBrightness"}},{"label":" lastTime","kind":6,"detail":"unsigned long","sortText":"3dcbf8aflastTime","filterText":"lastTime","insertText":"lastTime","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lastTime"}},{"label":" leds","kind":6,"detail":"CRGB [11]","documentation":{"kind":"markdown","value":"Define the array of leds"},"sortText":"3ea7f738leds","filterText":"leds","insertText":"leds","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"leds"}},{"label":" ledsFront","kind":6,"detail":"CRGB [4]","sortText":"3ea7f738ledsFront","filterText":"ledsFront","insertText":"ledsFront","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ledsFront"}},{"label":" long","kind":14,"sortText":"3f000000long","filterText":"long","insertText":"long","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"long"}},{"label":" labs(long __i)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The labs() function computes the absolute value of the long integer  \n\\\\c i.  \n\\\\note The abs() and labs() functions are builtins of gcc."},"sortText":"3f0f66edlabs","filterText":"labs","insertText":"labs(${1:long __i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"labs(${1:long __i})"}},{"label":" lrint(double __x)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The lrint() function rounds \\\\a \\_\\_x to the nearest integer, rounding the halfway cases to the even integer direction. (That is both 1.5 and 2.5 values are rounded to 2). This function is similar to rint() function,  \nbut it differs in type of return value and in that an overflow is possible.  \n\\\\return The rounded long integer value. If \\\\a \\_\\_x is not a finite number or an overflow was, this realization returns the \\\\c LONG_MIN value (0x80000000)."},"sortText":"3f0f66edlrint","filterText":"lrint","insertText":"lrint(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lrint(${1:double __x})"}},{"label":" lround(double __x)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The lround() function rounds \\\\a \\_\\_x to the nearest integer, but rounds halfway cases away from zero (instead of to the nearest even integer).  \nThis function is similar to round() function, but it differs in type of return value and in that an overflow is possible.  \n\\\\return The rounded long integer value. If \\\\a \\_\\_x is not a finite number or an overflow was, this realization returns the \\\\c LONG_MIN value (0x80000000)."},"sortText":"3f0f66edlround","filterText":"lround","insertText":"lround(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lround(${1:double __x})"}},{"label":" loop()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3loop","filterText":"loop","insertText":"loop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"loop()"}},{"label":" lerp15by16(int16_t a, int16_t b, fract16 frac)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"linear interpolation between two signed 15-bit values,  \nwith 8-bit fraction"},"sortText":"3f3ed4f8lerp15by16","filterText":"lerp15by16","insertText":"lerp15by16(${1:int16_t a}, ${2:int16_t b}, ${3:fract16 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lerp15by16(${1:int16_t a}, ${2:int16_t b}, ${3:fract16 frac})"}},{"label":" lerp15by8(int16_t a, int16_t b, fract8 frac)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"linear interpolation between two signed 15-bit values,  \nwith 8-bit fraction"},"sortText":"3f42c84elerp15by8","filterText":"lerp15by8","insertText":"lerp15by8(${1:int16_t a}, ${2:int16_t b}, ${3:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lerp15by8(${1:int16_t a}, ${2:int16_t b}, ${3:fract8 frac})"}},{"label":" lerp16by16(uint16_t a, uint16_t b, fract16 frac)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"linear interpolation between two unsigned 16-bit values,  \nwith 16-bit fraction"},"sortText":"3f42c84elerp16by16","filterText":"lerp16by16","insertText":"lerp16by16(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract16 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lerp16by16(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract16 frac})"}},{"label":" lerp16by8(uint16_t a, uint16_t b, fract8 frac)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"linear interpolation between two unsigned 16-bit values,  \nwith 8-bit fraction"},"sortText":"3f42c84elerp16by8","filterText":"lerp16by8","insertText":"lerp16by8(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lerp16by8(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract8 frac})"}},{"label":" lerp8by8(uint8_t a, uint8_t b, fract8 frac)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"linear interpolation between two unsigned 8-bit values,  \nwith 8-bit fraction"},"sortText":"3f42c84elerp8by8","filterText":"lerp8by8","insertText":"lerp8by8(${1:uint8_t a}, ${2:uint8_t b}, ${3:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lerp8by8(${1:uint8_t a}, ${2:uint8_t b}, ${3:fract8 frac})"}},{"label":"•LEDColorCorrection","kind":8,"documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n@file color.h contains definitions for color correction and temperature  \n@defgroup ColorEnums Color correction/temperature definitions for color correction and light temperatures  \n@{"},"sortText":"3f651eb8LEDColorCorrection","filterText":"LEDColorCorrection","insertText":"LEDColorCorrection","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LEDColorCorrection"}},{"label":" ldexp(double __x, int __exp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The ldexp() function multiplies a floating-point number by an integral power of 2. It returns the value of \\\\a \\_\\_x times 2 raised to the power  \n\\\\a \\_\\_exp."},"sortText":"403f858bldexp","filterText":"ldexp","insertText":"ldexp(${1:double __x}, ${2:int __exp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ldexp(${1:double __x}, ${2:int __exp})"}},{"label":" ldiv(long __num, long __denom)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"The ldiv() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c ldiv_t that contains two long integer members named \\\\c quot and \\\\c rem."},"sortText":"403f858bldiv","filterText":"ldiv","insertText":"ldiv(${1:long __num}, ${2:long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ldiv(${1:long __num}, ${2:long __denom})"}},{"label":" ldiv_t","kind":8,"documentation":{"kind":"markdown","value":"Result type for function ldiv()."},"sortText":"403f858bldiv_t","filterText":"ldiv_t","insertText":"ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ldiv_t"}},{"label":" log(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The log() function returns the natural logarithm of argument \\\\a \\_\\_x."},"sortText":"403f858blog","filterText":"log","insertText":"log(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"log(${1:double __x})"}},{"label":" log10(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The log10() function returns the logarithm of argument \\\\a \\_\\_x to base 10."},"sortText":"403f858blog10","filterText":"log10","insertText":"log10(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"log10(${1:double __x})"}},{"label":" ltoa(long __val, char *__s, int __radix)","kind":3,"detail":"char *","sortText":"403f858bltoa","filterText":"ltoa","insertText":"ltoa(${1:long __val}, ${2:char *__s}, ${3:int __radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ltoa(${1:long __val}, ${2:char *__s}, ${3:int __radix})"}},{"label":" LPD1886\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD1886","filterText":"LPD1886","insertText":"LPD1886\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD1886\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" LPD1886_8BIT\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD1886_8BIT","filterText":"LPD1886_8BIT","insertText":"LPD1886_8BIT\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD1886_8BIT\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" LPD6803","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD6803","filterText":"LPD6803","insertText":"LPD6803","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD6803"}},{"label":" LPD8806","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD8806","filterText":"LPD8806","insertText":"LPD8806","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD8806"}},{"label":"•LookaheadMode","kind":13,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nThis enumeration provides the lookahead options for parseInt(), parseFloat() The rules set out here are used until either the first valid character is found or a time out occurs due to lack of input."},"sortText":"405d8e68LookaheadMode","filterText":"LookaheadMode","insertText":"LookaheadMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LookaheadMode"}},{"label":"•LINEARBLEND","kind":20,"detail":"TBlendType","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fLINEARBLEND","filterText":"LINEARBLEND","insertText":"LINEARBLEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LINEARBLEND"}},{"label":"•LONGEST_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fLONGEST_HUES","filterText":"LONGEST_HUES","insertText":"LONGEST_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LONGEST_HUES"}},{"label":"•LPD1886Controller1250Khz\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD1886"},"sortText":"4068a03fLPD1886Controller1250Khz","filterText":"LPD1886Controller1250Khz","insertText":"LPD1886Controller1250Khz\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD1886Controller1250Khz\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•LPD1886Controller1250Khz_8bit\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD1886"},"sortText":"4068a03fLPD1886Controller1250Khz_8bit","filterText":"LPD1886Controller1250Khz_8bit","insertText":"LPD1886Controller1250Khz_8bit\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD1886Controller1250Khz_8bit\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•LPD6803Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD6803 controller class (LPD1101).  \n16 bit (1 bit - const \"1\", 5 bit - red, 5 bit - green, 5 bit blue).  \nIn chip CMODE pin must be set to 1 (inside oscillator mode).  \nDatasheet: https://cdn-shop.adafruit.com/datasheets/LPD6803.pdf  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(12)"},"sortText":"4068a03fLPD6803Controller","filterText":"LPD6803Controller","insertText":"LPD6803Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD6803Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•LPD8806Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD8806 controller class.  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(12)"},"sortText":"4068a03fLPD8806Controller","filterText":"LPD8806Controller","insertText":"LPD8806Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LPD8806Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":" LavaColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Lava colors"},"sortText":"4068a03fLavaColors_p","filterText":"LavaColors_p","insertText":"LavaColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LavaColors_p"}},{"label":" LED_PIN","kind":1,"sortText":"40800000LED_PIN","filterText":"LED_PIN","insertText":"LED_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LED_PIN"}},{"label":" LED_PIN_FRONT","kind":1,"sortText":"40800000LED_PIN_FRONT","filterText":"LED_PIN_FRONT","insertText":"LED_PIN_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LED_PIN_FRONT"}},{"label":" LEDS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fLEDS","filterText":"LEDS","insertText":"LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LEDS"}},{"label":" labs(__i)","kind":1,"sortText":"40d1050alabs","filterText":"labs","insertText":"labs(${1:__i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"labs(${1:__i})"}},{"label":" ldexpf","kind":1,"sortText":"40d1050aldexpf","filterText":"ldexpf","insertText":"ldexpf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"ldexpf"}},{"label":" log10f","kind":1,"sortText":"40d1050alog10f","filterText":"log10f","insertText":"log10f","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"log10f"}},{"label":" logf","kind":1,"sortText":"40d1050alogf","filterText":"logf","insertText":"logf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"logf"}},{"label":" lrintf","kind":1,"sortText":"40d1050alrintf","filterText":"lrintf","insertText":"lrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lrintf"}},{"label":" lroundf","kind":1,"sortText":"40d1050alroundf","filterText":"lroundf","insertText":"lroundf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lroundf"}},{"label":" LB_MODE_1","kind":1,"sortText":"40ec52eaLB_MODE_1","filterText":"LB_MODE_1","insertText":"LB_MODE_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LB_MODE_1"}},{"label":" LB_MODE_2","kind":1,"sortText":"40ec52eaLB_MODE_2","filterText":"LB_MODE_2","insertText":"LB_MODE_2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LB_MODE_2"}},{"label":" LB_MODE_3","kind":1,"sortText":"40ec52eaLB_MODE_3","filterText":"LB_MODE_3","insertText":"LB_MODE_3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LB_MODE_3"}},{"label":" LFUSE_DEFAULT","kind":1,"sortText":"40ec52eaLFUSE_DEFAULT","filterText":"LFUSE_DEFAULT","insertText":"LFUSE_DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LFUSE_DEFAULT"}},{"label":" LOCKBITS","kind":1,"sortText":"40ec52eaLOCKBITS","filterText":"LOCKBITS","insertText":"LOCKBITS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LOCKBITS"}},{"label":" LOCKBITS_DEFAULT","kind":1,"sortText":"40ec52eaLOCKBITS_DEFAULT","filterText":"LOCKBITS_DEFAULT","insertText":"LOCKBITS_DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LOCKBITS_DEFAULT"}},{"label":" LOCKMEM","kind":1,"sortText":"40ec52eaLOCKMEM","filterText":"LOCKMEM","insertText":"LOCKMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LOCKMEM"}},{"label":" LOW","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaLOW","filterText":"LOW","insertText":"LOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LOW"}},{"label":" LSBFIRST","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaLSBFIRST","filterText":"LSBFIRST","insertText":"LSBFIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LSBFIRST"}},{"label":" loop_until_bit_is_clear(sfr, bit)","kind":1,"sortText":"40ec52ealoop_until_bit_is_clear","filterText":"loop_until_bit_is_clear","insertText":"loop_until_bit_is_clear(${1:sfr}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"loop_until_bit_is_clear(${1:sfr}, ${2:bit})"}},{"label":" loop_until_bit_is_set(sfr, bit)","kind":1,"sortText":"40ec52ealoop_until_bit_is_set","filterText":"loop_until_bit_is_set","insertText":"loop_until_bit_is_set(${1:sfr}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"loop_until_bit_is_set(${1:sfr}, ${2:bit})"}},{"label":" lowByte(w)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52ealowByte","filterText":"lowByte","insertText":"lowByte(${1:w})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"lowByte(${1:w})"}},{"label":" LIB8STATIC","kind":1,"sortText":"40f66322LIB8STATIC","filterText":"LIB8STATIC","insertText":"LIB8STATIC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LIB8STATIC"}},{"label":" LIB8STATIC_ALWAYS_INLINE","kind":1,"sortText":"40f66322LIB8STATIC_ALWAYS_INLINE","filterText":"LIB8STATIC_ALWAYS_INLINE","insertText":"LIB8STATIC_ALWAYS_INLINE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LIB8STATIC_ALWAYS_INLINE"}},{"label":"•LED_BUILTIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dLED_BUILTIN","filterText":"LED_BUILTIN","insertText":"LED_BUILTIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LED_BUILTIN"}},{"label":"•LD2(B, O)","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LD2","filterText":"LD2","insertText":"LD2(${1:B}, ${2:O})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LD2(${1:B}, ${2:O})"}},{"label":"•LDSCL4(B, O)","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LDSCL4","filterText":"LDSCL4","insertText":"LDSCL4(${1:B}, ${2:O})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LDSCL4(${1:B}, ${2:O})"}},{"label":"•LO1","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LO1","filterText":"LO1","insertText":"LO1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LO1"}},{"label":"•LOOP","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LOOP","filterText":"LOOP","insertText":"LOOP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"LOOP"}},{"label":" CFastLED","kind":7,"sortText":"80000000CFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"80000000CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"CFastLED()"}},{"label":" CLEDController(…)","kind":4,"detail":"[3 overloads]","sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"CLEDController($0)"}},{"label":" CLEDController","kind":7,"sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"CLEDController"}},{"label":" FastLED","kind":6,"detail":"CFastLED","sortText":"80000000FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"FastLED"}},{"label":" activityLow","kind":6,"detail":"int","sortText":"80000000activityLow","filterText":"activityLow","insertText":"activityLow","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"activityLow"}},{"label":" fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","sortText":"80000000fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" pulseLeds()","kind":3,"detail":"void","sortText":"80000000pulseLeds","filterText":"pulseLeds","insertText":"pulseLeds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"pulseLeds()"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"80000000setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"80000000setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"80000000setLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"80000000setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":33}},"newText":"setLedsOff()"}}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":400,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":237},"contentChanges":[{"range":{"start":{"line":58,"character":33},"end":{"line":58,"character":33}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":400}}Content-Length: 171

{"jsonrpc":"2.0","id":401,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 349

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":34}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'le'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":401,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":238},"contentChanges":[{"range":{"start":{"line":58,"character":34},"end":{"line":58,"character":34}},"rangeLength":0,"text":"d"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":402,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 350

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":35}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'led'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":402,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":403,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 458

{"jsonrpc":"2.0","id":404,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":35},"end":{"line":58,"character":35}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":35}},"message":"Use of undeclared identifier 'led'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":404,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":239},"contentChanges":[{"range":{"start":{"line":58,"character":35},"end":{"line":58,"character":35}},"rangeLength":0,"text":"O"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":405,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 669

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":36}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'ledO'; did you mean 'ledOn'? (fix available)\n\nproject.ino.cpp:76:7: note: 'ledOn' declared here"},{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":11}},"severity":3,"message":"'ledOn' declared here\n\nproject.ino.cpp:78:33: error: use of undeclared identifier 'ledO'; did you mean 'ledOn'?"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":405,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":406,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":406,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 559

{"jsonrpc":"2.0","id":407,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":36},"end":{"line":58,"character":36}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":36}},"message":"Use of undeclared identifier 'ledO'; did you mean 'ledOn'? (fix available)\n\nproject.ino.cpp:76:7: note: 'ledOn' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":407,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":240},"contentChanges":[{"range":{"start":{"line":58,"character":36},"end":{"line":58,"character":36}},"rangeLength":0,"text":"n"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":408,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":408,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":409,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":410,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":37},"end":{"line":58,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":409,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":410,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":411,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":412,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":37},"end":{"line":58,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":411,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":412,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 171

{"jsonrpc":"2.0","id":413,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":413,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":86,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":89,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":89,"character":5},"end":{"line":89,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":414,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":414,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":240}}}Content-Length: 274

{"jsonrpc":"2.0","id":415,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":39},"end":{"line":58,"character":39}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":415,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":241},"contentChanges":[{"range":{"start":{"line":58,"character":39},"end":{"line":58,"character":39}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":416,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3332

{"id":416,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":241}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":242},"contentChanges":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":4}},"rangeLength":0,"text":"l"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":417,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'l'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":417,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":418,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":59,"character":5},"context":{"triggerKind":1}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":417}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":243},"contentChanges":[{"range":{"start":{"line":59,"character":5},"end":{"line":59,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":419,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 27880

{"id":418,"result":{"isIncomplete":true,"items":[{"label":" ledOn","kind":6,"detail":"int","sortText":"3e13a2a3ledOn","filterText":"ledOn","insertText":"ledOn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ledOn"}},{"label":" leds","kind":6,"detail":"CRGB [11]","documentation":{"kind":"markdown","value":"Define the array of leds"},"sortText":"3ea7f738leds","filterText":"leds","insertText":"leds","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"leds"}},{"label":" ledsFront","kind":6,"detail":"CRGB [4]","sortText":"3ea7f738ledsFront","filterText":"ledsFront","insertText":"ledsFront","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ledsFront"}},{"label":" ledBrightness","kind":6,"detail":"int","sortText":"3eddaf05ledBrightness","filterText":"ledBrightness","insertText":"ledBrightness","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ledBrightness"}},{"label":" lastTime","kind":6,"detail":"unsigned long","sortText":"3eeffa26lastTime","filterText":"lastTime","insertText":"lastTime","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lastTime"}},{"label":" long","kind":14,"sortText":"3f000000long","filterText":"long","insertText":"long","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"long"}},{"label":" loop()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"3f13a2a3loop","filterText":"loop","insertText":"loop()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"loop()"}},{"label":"•LEDColorCorrection","kind":8,"documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n@file color.h contains definitions for color correction and temperature  \n@defgroup ColorEnums Color correction/temperature definitions for color correction and light temperatures  \n@{"},"sortText":"3f651eb8LEDColorCorrection","filterText":"LEDColorCorrection","insertText":"LEDColorCorrection","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LEDColorCorrection"}},{"label":" labs(long __i)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The labs() function computes the absolute value of the long integer  \n\\\\c i.  \n\\\\note The abs() and labs() functions are builtins of gcc."},"sortText":"403f858blabs","filterText":"labs","insertText":"labs(${1:long __i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"labs(${1:long __i})"}},{"label":" ldexp(double __x, int __exp)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The ldexp() function multiplies a floating-point number by an integral power of 2. It returns the value of \\\\a \\_\\_x times 2 raised to the power  \n\\\\a \\_\\_exp."},"sortText":"403f858bldexp","filterText":"ldexp","insertText":"ldexp(${1:double __x}, ${2:int __exp})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ldexp(${1:double __x}, ${2:int __exp})"}},{"label":" ldiv(long __num, long __denom)","kind":3,"detail":"ldiv_t","documentation":{"kind":"markdown","value":"The ldiv() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c ldiv_t that contains two long integer members named \\\\c quot and \\\\c rem."},"sortText":"403f858bldiv","filterText":"ldiv","insertText":"ldiv(${1:long __num}, ${2:long __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ldiv(${1:long __num}, ${2:long __denom})"}},{"label":" ldiv_t","kind":8,"documentation":{"kind":"markdown","value":"Result type for function ldiv()."},"sortText":"403f858bldiv_t","filterText":"ldiv_t","insertText":"ldiv_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ldiv_t"}},{"label":" log(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The log() function returns the natural logarithm of argument \\\\a \\_\\_x."},"sortText":"403f858blog","filterText":"log","insertText":"log(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"log(${1:double __x})"}},{"label":" log10(double __x)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The log10() function returns the logarithm of argument \\\\a \\_\\_x to base 10."},"sortText":"403f858blog10","filterText":"log10","insertText":"log10(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"log10(${1:double __x})"}},{"label":" lrint(double __x)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The lrint() function rounds \\\\a \\_\\_x to the nearest integer, rounding the halfway cases to the even integer direction. (That is both 1.5 and 2.5 values are rounded to 2). This function is similar to rint() function,  \nbut it differs in type of return value and in that an overflow is possible.  \n\\\\return The rounded long integer value. If \\\\a \\_\\_x is not a finite number or an overflow was, this realization returns the \\\\c LONG_MIN value (0x80000000)."},"sortText":"403f858blrint","filterText":"lrint","insertText":"lrint(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lrint(${1:double __x})"}},{"label":" lround(double __x)","kind":3,"detail":"long","documentation":{"kind":"markdown","value":"The lround() function rounds \\\\a \\_\\_x to the nearest integer, but rounds halfway cases away from zero (instead of to the nearest even integer).  \nThis function is similar to round() function, but it differs in type of return value and in that an overflow is possible.  \n\\\\return The rounded long integer value. If \\\\a \\_\\_x is not a finite number or an overflow was, this realization returns the \\\\c LONG_MIN value (0x80000000)."},"sortText":"403f858blround","filterText":"lround","insertText":"lround(${1:double __x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lround(${1:double __x})"}},{"label":" ltoa(long __val, char *__s, int __radix)","kind":3,"detail":"char *","sortText":"403f858bltoa","filterText":"ltoa","insertText":"ltoa(${1:long __val}, ${2:char *__s}, ${3:int __radix})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ltoa(${1:long __val}, ${2:char *__s}, ${3:int __radix})"}},{"label":" LPD1886\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD1886","filterText":"LPD1886","insertText":"LPD1886\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD1886\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" LPD1886_8BIT\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD1886_8BIT","filterText":"LPD1886_8BIT","insertText":"LPD1886_8BIT\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD1886_8BIT\u003c${1:uint8_t DATA_PIN}, ${2:EOrder RGB_ORDER}\u003e"}},{"label":" LPD6803","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD6803","filterText":"LPD6803","insertText":"LPD6803","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD6803"}},{"label":" LPD8806","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68LPD8806","filterText":"LPD8806","insertText":"LPD8806","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD8806"}},{"label":"•LookaheadMode","kind":13,"documentation":{"kind":"markdown","value":"From `\"Stream.h\"`  \nThis enumeration provides the lookahead options for parseInt(), parseFloat() The rules set out here are used until either the first valid character is found or a time out occurs due to lack of input."},"sortText":"405d8e68LookaheadMode","filterText":"LookaheadMode","insertText":"LookaheadMode","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LookaheadMode"}},{"label":" lerp15by16(int16_t a, int16_t b, fract16 frac)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"linear interpolation between two signed 15-bit values,  \nwith 8-bit fraction"},"sortText":"4065772elerp15by16","filterText":"lerp15by16","insertText":"lerp15by16(${1:int16_t a}, ${2:int16_t b}, ${3:fract16 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lerp15by16(${1:int16_t a}, ${2:int16_t b}, ${3:fract16 frac})"}},{"label":"•LINEARBLEND","kind":20,"detail":"TBlendType","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fLINEARBLEND","filterText":"LINEARBLEND","insertText":"LINEARBLEND","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LINEARBLEND"}},{"label":"•LONGEST_HUES","kind":20,"detail":"TGradientDirectionCode","documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"4068a03fLONGEST_HUES","filterText":"LONGEST_HUES","insertText":"LONGEST_HUES","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LONGEST_HUES"}},{"label":"•LPD1886Controller1250Khz\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD1886"},"sortText":"4068a03fLPD1886Controller1250Khz","filterText":"LPD1886Controller1250Khz","insertText":"LPD1886Controller1250Khz\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD1886Controller1250Khz\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•LPD1886Controller1250Khz_8bit\u003cuint8_t DATA_PIN, EOrder RGB_ORDER\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD1886"},"sortText":"4068a03fLPD1886Controller1250Khz_8bit","filterText":"LPD1886Controller1250Khz_8bit","insertText":"LPD1886Controller1250Khz_8bit\u003c${1:uint8_t DATA_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD1886Controller1250Khz_8bit\u003c${1:uint8_t DATA_PIN}\u003e"}},{"label":"•LPD6803Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD6803 controller class (LPD1101).  \n16 bit (1 bit - const \"1\", 5 bit - red, 5 bit - green, 5 bit blue).  \nIn chip CMODE pin must be set to 1 (inside oscillator mode).  \nDatasheet: https://cdn-shop.adafruit.com/datasheets/LPD6803.pdf  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(12)"},"sortText":"4068a03fLPD6803Controller","filterText":"LPD6803Controller","insertText":"LPD6803Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD6803Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":"•LPD8806Controller\u003cuint8_t DATA_PIN, uint8_t CLOCK_PIN, EOrder RGB_ORDER, uint32_t SPI_SPEED\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"chipsets.h\"`  \nLPD8806 controller class.  \n@tparam DATA_PIN the data pin for these leds  \n@tparam CLOCK_PIN the clock pin for these leds  \n@tparam RGB_ORDER the RGB ordering for these leds  \n@tparam SPI_SPEED the clock divider used for these leds. Set using the DATA_RATE_MHZ/DATA_RATE_KHZ macros. Defaults to DATA_RATE_MHZ(12)"},"sortText":"4068a03fLPD8806Controller","filterText":"LPD8806Controller","insertText":"LPD8806Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LPD8806Controller\u003c${1:uint8_t DATA_PIN}, ${2:uint8_t CLOCK_PIN}\u003e"}},{"label":" LavaColors_p","kind":6,"detail":"const TProgmemRGBPalette16","documentation":{"kind":"markdown","value":"Lava colors"},"sortText":"4068a03fLavaColors_p","filterText":"LavaColors_p","insertText":"LavaColors_p","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LavaColors_p"}},{"label":" lerp15by8(int16_t a, int16_t b, fract8 frac)","kind":3,"detail":"int16_t","documentation":{"kind":"markdown","value":"linear interpolation between two signed 15-bit values,  \nwith 8-bit fraction"},"sortText":"4068a03flerp15by8","filterText":"lerp15by8","insertText":"lerp15by8(${1:int16_t a}, ${2:int16_t b}, ${3:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lerp15by8(${1:int16_t a}, ${2:int16_t b}, ${3:fract8 frac})"}},{"label":" lerp16by16(uint16_t a, uint16_t b, fract16 frac)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"linear interpolation between two unsigned 16-bit values,  \nwith 16-bit fraction"},"sortText":"4068a03flerp16by16","filterText":"lerp16by16","insertText":"lerp16by16(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract16 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lerp16by16(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract16 frac})"}},{"label":" lerp16by8(uint16_t a, uint16_t b, fract8 frac)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"linear interpolation between two unsigned 16-bit values,  \nwith 8-bit fraction"},"sortText":"4068a03flerp16by8","filterText":"lerp16by8","insertText":"lerp16by8(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lerp16by8(${1:uint16_t a}, ${2:uint16_t b}, ${3:fract8 frac})"}},{"label":" lerp8by8(uint8_t a, uint8_t b, fract8 frac)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"linear interpolation between two unsigned 8-bit values,  \nwith 8-bit fraction"},"sortText":"4068a03flerp8by8","filterText":"lerp8by8","insertText":"lerp8by8(${1:uint8_t a}, ${2:uint8_t b}, ${3:fract8 frac})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lerp8by8(${1:uint8_t a}, ${2:uint8_t b}, ${3:fract8 frac})"}},{"label":" LED_PIN","kind":1,"sortText":"40800000LED_PIN","filterText":"LED_PIN","insertText":"LED_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LED_PIN"}},{"label":" LED_PIN_FRONT","kind":1,"sortText":"40800000LED_PIN_FRONT","filterText":"LED_PIN_FRONT","insertText":"LED_PIN_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LED_PIN_FRONT"}},{"label":" LEDS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40a27c5fLEDS","filterText":"LEDS","insertText":"LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LEDS"}},{"label":" labs(__i)","kind":1,"sortText":"40d1050alabs","filterText":"labs","insertText":"labs(${1:__i})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"labs(${1:__i})"}},{"label":" ldexpf","kind":1,"sortText":"40d1050aldexpf","filterText":"ldexpf","insertText":"ldexpf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"ldexpf"}},{"label":" log10f","kind":1,"sortText":"40d1050alog10f","filterText":"log10f","insertText":"log10f","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"log10f"}},{"label":" logf","kind":1,"sortText":"40d1050alogf","filterText":"logf","insertText":"logf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"logf"}},{"label":" lrintf","kind":1,"sortText":"40d1050alrintf","filterText":"lrintf","insertText":"lrintf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lrintf"}},{"label":" lroundf","kind":1,"sortText":"40d1050alroundf","filterText":"lroundf","insertText":"lroundf","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lroundf"}},{"label":" LB_MODE_1","kind":1,"sortText":"40ec52eaLB_MODE_1","filterText":"LB_MODE_1","insertText":"LB_MODE_1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LB_MODE_1"}},{"label":" LB_MODE_2","kind":1,"sortText":"40ec52eaLB_MODE_2","filterText":"LB_MODE_2","insertText":"LB_MODE_2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LB_MODE_2"}},{"label":" LB_MODE_3","kind":1,"sortText":"40ec52eaLB_MODE_3","filterText":"LB_MODE_3","insertText":"LB_MODE_3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LB_MODE_3"}},{"label":" LFUSE_DEFAULT","kind":1,"sortText":"40ec52eaLFUSE_DEFAULT","filterText":"LFUSE_DEFAULT","insertText":"LFUSE_DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LFUSE_DEFAULT"}},{"label":" LOCKBITS","kind":1,"sortText":"40ec52eaLOCKBITS","filterText":"LOCKBITS","insertText":"LOCKBITS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LOCKBITS"}},{"label":" LOCKBITS_DEFAULT","kind":1,"sortText":"40ec52eaLOCKBITS_DEFAULT","filterText":"LOCKBITS_DEFAULT","insertText":"LOCKBITS_DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LOCKBITS_DEFAULT"}},{"label":" LOCKMEM","kind":1,"sortText":"40ec52eaLOCKMEM","filterText":"LOCKMEM","insertText":"LOCKMEM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LOCKMEM"}},{"label":" LOW","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaLOW","filterText":"LOW","insertText":"LOW","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LOW"}},{"label":" LSBFIRST","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaLSBFIRST","filterText":"LSBFIRST","insertText":"LSBFIRST","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LSBFIRST"}},{"label":" loop_until_bit_is_clear(sfr, bit)","kind":1,"sortText":"40ec52ealoop_until_bit_is_clear","filterText":"loop_until_bit_is_clear","insertText":"loop_until_bit_is_clear(${1:sfr}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"loop_until_bit_is_clear(${1:sfr}, ${2:bit})"}},{"label":" loop_until_bit_is_set(sfr, bit)","kind":1,"sortText":"40ec52ealoop_until_bit_is_set","filterText":"loop_until_bit_is_set","insertText":"loop_until_bit_is_set(${1:sfr}, ${2:bit})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"loop_until_bit_is_set(${1:sfr}, ${2:bit})"}},{"label":" lowByte(w)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52ealowByte","filterText":"lowByte","insertText":"lowByte(${1:w})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"lowByte(${1:w})"}},{"label":" LIB8STATIC","kind":1,"sortText":"40f66322LIB8STATIC","filterText":"LIB8STATIC","insertText":"LIB8STATIC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LIB8STATIC"}},{"label":" LIB8STATIC_ALWAYS_INLINE","kind":1,"sortText":"40f66322LIB8STATIC_ALWAYS_INLINE","filterText":"LIB8STATIC_ALWAYS_INLINE","insertText":"LIB8STATIC_ALWAYS_INLINE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LIB8STATIC_ALWAYS_INLINE"}},{"label":"•LED_BUILTIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05dLED_BUILTIN","filterText":"LED_BUILTIN","insertText":"LED_BUILTIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LED_BUILTIN"}},{"label":"•LD2(B, O)","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LD2","filterText":"LD2","insertText":"LD2(${1:B}, ${2:O})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LD2(${1:B}, ${2:O})"}},{"label":"•LDSCL4(B, O)","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LDSCL4","filterText":"LDSCL4","insertText":"LDSCL4(${1:B}, ${2:O})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LDSCL4(${1:B}, ${2:O})"}},{"label":"•LO1","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LO1","filterText":"LO1","insertText":"LO1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LO1"}},{"label":"•LOOP","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85LOOP","filterText":"LOOP","insertText":"LOOP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"LOOP"}},{"label":" CFastLED","kind":7,"sortText":"80000000CFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"80000000CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"CFastLED()"}},{"label":" CLEDController(…)","kind":4,"detail":"[3 overloads]","sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"CLEDController($0)"}},{"label":" CLEDController","kind":7,"sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"CLEDController"}},{"label":" FastLED","kind":6,"detail":"CFastLED","sortText":"80000000FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"FastLED"}},{"label":" activityLow","kind":6,"detail":"int","sortText":"80000000activityLow","filterText":"activityLow","insertText":"activityLow","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"activityLow"}},{"label":" fadeLightBy(CRGB *leds, uint16_t num_leds, uint8_t fadeBy)","kind":3,"detail":"void","sortText":"80000000fadeLightBy","filterText":"fadeLightBy","insertText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"fadeLightBy(${1:CRGB *leds}, ${2:uint16_t num_leds}, ${3:uint8_t fadeBy})"}},{"label":" pulseLeds()","kind":3,"detail":"void","sortText":"80000000pulseLeds","filterText":"pulseLeds","insertText":"pulseLeds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"pulseLeds()"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"80000000setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"80000000setLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"80000000setLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"80000000setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"setLedsOff()"}},{"label":" thread_local","kind":14,"sortText":"80000000thread_local","filterText":"thread_local","insertText":"thread_local","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":5}},"newText":"thread_local"}}]},"jsonrpc":"2.0"}Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'le'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":419,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":244},"contentChanges":[{"range":{"start":{"line":59,"character":6},"end":{"line":59,"character":6}},"rangeLength":0,"text":"d"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":420,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 859

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'led'; did you mean 'leds'? (fix available)\n\nproject.ino.cpp:20:6: note: 'leds' declared here"},{"range":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}},"severity":3,"message":"'leds' declared here\n\nproject.ino.cpp:79:5: error: use of undeclared identifier 'led'; did you mean 'leds'?"},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":420,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":421,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":59,"character":7},"context":{"triggerKind":3}}}Content-Length: 274

{"jsonrpc":"2.0","id":422,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 8356

{"id":421,"result":{"isIncomplete":false,"items":[{"label":" ledOn","kind":6,"detail":"int","sortText":"3e13a2a3ledOn","filterText":"ledOn","insertText":"ledOn","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"ledOn"}},{"label":" leds","kind":6,"detail":"CRGB [11]","documentation":{"kind":"markdown","value":"Define the array of leds"},"sortText":"3e8c8687leds","filterText":"leds","insertText":"leds","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"leds"}},{"label":" ledsFront","kind":6,"detail":"CRGB [4]","sortText":"3ea7f738ledsFront","filterText":"ledsFront","insertText":"ledsFront","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"ledsFront"}},{"label":" ledBrightness","kind":6,"detail":"int","sortText":"3eddaf05ledBrightness","filterText":"ledBrightness","insertText":"ledBrightness","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"ledBrightness"}},{"label":" setLeds(int start, int end, const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3ee5955dsetLeds","filterText":"setLeds","insertText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"setLeds(${1:int start}, ${2:int end}, ${3:const struct CRGB \u0026color})"}},{"label":" setLedsFront(const struct CRGB \u0026color)","kind":3,"detail":"void","sortText":"3f03f5c0setLedsFront","filterText":"setLedsFront","insertText":"setLedsFront(${1:const struct CRGB \u0026color})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"setLedsFront(${1:const struct CRGB \u0026color})"}},{"label":" setLedsOff()","kind":3,"detail":"void","sortText":"3f03f5c0setLedsOff","filterText":"setLedsOff","insertText":"setLedsOff()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"setLedsOff()"}},{"label":" setAllLeds(int green, int yellow, int red)","kind":3,"detail":"void","sortText":"3f0c8687setAllLeds","filterText":"setAllLeds","insertText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"setAllLeds(${1:int green}, ${2:int yellow}, ${3:int red})"}},{"label":" pulseLeds()","kind":3,"detail":"void","sortText":"3f312e4dpulseLeds","filterText":"pulseLeds","insertText":"pulseLeds()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"pulseLeds()"}},{"label":" FastLED","kind":6,"detail":"CFastLED","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"3f79ec18FastLED","filterText":"FastLED","insertText":"FastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"FastLED"}},{"label":"•LEDColorCorrection","kind":8,"documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n@file color.h contains definitions for color correction and temperature  \n@defgroup ColorEnums Color correction/temperature definitions for color correction and light temperatures  \n@{"},"sortText":"3f7eeeeeLEDColorCorrection","filterText":"LEDColorCorrection","insertText":"LEDColorCorrection","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"LEDColorCorrection"}},{"label":" CFastLED","kind":7,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`  \nHigh level controller interface for FastLED. This class manages controllers, global settings and trackings such as brightness, and refresh rates, and provides access functions for driving led data to controllers via the show/showColor/clear methods.  \n@nosubgrouping"},"sortText":"401f566eCFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"40444444CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"CFastLED()"}},{"label":" LED_PIN","kind":1,"sortText":"40aaaaaaLED_PIN","filterText":"LED_PIN","insertText":"LED_PIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"LED_PIN"}},{"label":" LED_PIN_FRONT","kind":1,"sortText":"40aaaaaaLED_PIN_FRONT","filterText":"LED_PIN_FRONT","insertText":"LED_PIN_FRONT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"LED_PIN_FRONT"}},{"label":"•TypicalLEDStrip","kind":20,"detail":"LEDColorCorrection","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n255, 176, 240"},"sortText":"40c2c84eTypicalLEDStrip","filterText":"TypicalLEDStrip","insertText":"TypicalLEDStrip","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"TypicalLEDStrip"}},{"label":" LEDS","kind":1,"documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"40c767a4LEDS","filterText":"LEDS","insertText":"LEDS","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"LEDS"}},{"label":"•LED_BUILTIN","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"4128609bLED_BUILTIN","filterText":"LED_BUILTIN","insertText":"LED_BUILTIN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"LED_BUILTIN"}},{"label":"•CPixelLEDController\u003cEOrder RGB_ORDER, int LANES, uint32_t MASK\u003e","kind":7,"documentation":{"kind":"markdown","value":"From `\"controller.h\"`"},"sortText":"41362afeCPixelLEDController","filterText":"CPixelLEDController","insertText":"CPixelLEDController\u003c${1:EOrder RGB_ORDER}\u003e","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"CPixelLEDController\u003c${1:EOrder RGB_ORDER}\u003e"}},{"label":"•set_max_power_indicator_LED(uint8_t pinNumber)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSelect a pin with an led that will be flashed to indicate that power management is pulling down the brightness"},"sortText":"41b62afeset_max_power_indicator_LED","filterText":"set_max_power_indicator_LED","insertText":"set_max_power_indicator_LED(${1:uint8_t pinNumber})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"set_max_power_indicator_LED(${1:uint8_t pinNumber})"}},{"label":" CLEDController(…)","kind":4,"detail":"[3 overloads]","sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"CLEDController($0)"}},{"label":"•CLEDController","kind":7,"documentation":{"kind":"markdown","value":"From `\"controller.h\"`  \nBase definition for an LED controller. Pretty much the methods that every LED controller object will make available.  \nNote that the showARGB method is not impelemented for all controllers yet. Note also the methods for eventual checking of background writing of data (I'm looking at you, teensy 3.0 DMA controller!). If you want to pass LED controllers around to methods, make them references to this type, keeps your code saner. However, most people won't be seeing/using these objects directly at all"},"sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController","insertTextFormat":2,"textEdit":{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":7}},"newText":"CLEDController"}}]},"jsonrpc":"2.0"}Content-Length: 38

{"id":422,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":245},"contentChanges":[{"range":{"start":{"line":59,"character":7},"end":{"line":59,"character":7}},"rangeLength":0,"text":"O"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":423,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 549

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"},{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":8}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'ledO'"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":423,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":424,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":424,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":425,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 455

{"jsonrpc":"2.0","id":426,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":8},"end":{"line":59,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":59,"character":4},"end":{"line":59,"character":8}},"message":"Use of undeclared identifier 'ledO'","severity":1,"code":"undeclared_var_use","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":425,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":426,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":246},"contentChanges":[{"range":{"start":{"line":59,"character":8},"end":{"line":59,"character":8}},"rangeLength":0,"text":"n"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":427,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":427,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":247},"contentChanges":[{"range":{"start":{"line":59,"character":9},"end":{"line":59,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":428,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":428,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":429,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":429,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":247}}}Content-Length: 274

{"jsonrpc":"2.0","id":430,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":430,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":248},"contentChanges":[{"range":{"start":{"line":59,"character":10},"end":{"line":59,"character":10}},"rangeLength":0,"text":"*"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":431,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 334

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":431,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":432,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":433,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":11},"end":{"line":59,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":432,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":433,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":249},"contentChanges":[{"range":{"start":{"line":59,"character":11},"end":{"line":59,"character":11}},"rangeLength":0,"text":"="}]}}Content-Length: 171

{"jsonrpc":"2.0","id":434,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 334

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":434,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":435,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":436,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":12},"end":{"line":59,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":435,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":436,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":250},"contentChanges":[{"range":{"start":{"line":59,"character":12},"end":{"line":59,"character":12}},"rangeLength":0,"text":" "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":437,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 334

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":437,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":251},"contentChanges":[{"range":{"start":{"line":59,"character":13},"end":{"line":59,"character":13}},"rangeLength":0,"text":"-"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":438,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 334

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":438,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":439,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":439,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":252},"contentChanges":[{"range":{"start":{"line":59,"character":14},"end":{"line":59,"character":14}},"rangeLength":0,"text":"1"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":440,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":440,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":441,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":442,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":15},"end":{"line":59,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":441,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":442,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":253},"contentChanges":[{"range":{"start":{"line":59,"character":15},"end":{"line":59,"character":15}},"rangeLength":0,"text":";"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":443,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 166

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[]},"jsonrpc":"2.0"}Content-Length: 3332

{"id":443,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":61,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":63,"character":0},"end":{"line":87,"character":1}},"selectionRange":{"start":{"line":63,"character":5},"end":{"line":63,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":90,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":90,"character":5},"end":{"line":90,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":444,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":445,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":16},"end":{"line":59,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":444,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":445,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":446,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":447,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":16},"end":{"line":59,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":446,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":447,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":253}}}Content-Length: 200

{"jsonrpc":"2.0","id":448,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":35}}}
>>>
Content-Length: 268

{"id":448,"result":{"contents":{"kind":"markdown","value":"### variable `ledOn`  \n\n---\nType: `int`  \nValue = `1`  \n\n---\n```cpp\n// In pulseLeds\nint ledOn = 1\n```"},"range":{"start":{"line":58,"character":32},"end":{"line":58,"character":37}}},"jsonrpc":"2.0"}
<<<
Content-Length: 304

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":254},"contentChanges":[{"range":{"start":{"line":59,"character":16},"end":{"line":59,"character":16}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 171

{"jsonrpc":"2.0","id":449,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 3335

{"id":449,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":254}}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":255},"contentChanges":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":4}},"rangeLength":0,"text":"d"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":450,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 346

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'd'"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":450,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 232

{"jsonrpc":"2.0","id":451,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":5},"context":{"triggerKind":1}}}
>>>
Content-Length: 34047

{"id":451,"result":{"isIncomplete":true,"items":[{"label":" decltype(expression)","kind":15,"sortText":"3f000000decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"decltype(${0:expression})"}},{"label":" delete [] expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delete [] ${0:expression}"}},{"label":" delete expression","kind":15,"detail":"void","sortText":"3f000000delete","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delete ${0:expression}"}},{"label":" do {statements}while (expression)","kind":15,"sortText":"3f000000do","filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"do {\n${1:statements}\n}while (${0:expression})"}},{"label":" double","kind":14,"sortText":"3f000000double","filterText":"double","insertText":"double","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"double"}},{"label":" dynamic_cast\u003ctype\u003e(expression)","kind":15,"sortText":"3f000000dynamic_cast","filterText":"dynamic_cast","insertText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" div(int __num, int __denom)","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"sortText":"403f858bdiv","filterText":"div","insertText":"div(${1:int __num}, ${2:int __denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"div(${1:int __num}, ${2:int __denom})"}},{"label":" div_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"sortText":"403f858bdiv_t","filterText":"div_t","insertText":"div_t","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"div_t"}},{"label":" dtostre(double __val, char *__s, unsigned char __prec, unsigned char __flags)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"sortText":"403f858bdtostre","filterText":"dtostre","insertText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"dtostre(${1:double __val}, ${2:char *__s}, ${3:unsigned char __prec}, ${4:unsigned char __flags})"}},{"label":" dtostrf(double __val, signed char __width, unsigned char __prec, char *__s)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"sortText":"403f858bdtostrf","filterText":"dtostrf","insertText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"dtostrf(${1:double __val}, ${2:signed char __width}, ${3:unsigned char __prec}, ${4:char *__s})"}},{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4057a258digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":" DOTSTAR","kind":20,"detail":"ESPIChipsets","documentation":{"kind":"markdown","value":"From `\"FastLED.h\"`"},"sortText":"405d8e68DOTSTAR","filterText":"DOTSTAR","insertText":"DOTSTAR","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DOTSTAR"}},{"label":" delay(unsigned long ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68delay","filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delay(${1:unsigned long ms})"}},{"label":" delayMicroseconds(unsigned int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"sortText":"405d8e68delayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":" detachInterrupt(uint8_t interruptNum)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"detachInterrupt(${1:uint8_t interruptNum})"}},{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":" digital_pin_to_bit_mask_PGM","kind":6,"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"sortText":"405d8e68digital_pin_to_bit_mask_PGM","filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digital_pin_to_bit_mask_PGM"}},{"label":" digital_pin_to_port_PGM","kind":6,"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68digital_pin_to_port_PGM","filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digital_pin_to_port_PGM"}},{"label":" digital_pin_to_timer_PGM","kind":6,"detail":"const uint8_t []","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"405d8e68digital_pin_to_timer_PGM","filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digital_pin_to_timer_PGM"}},{"label":"•DATA_NOP","kind":7,"documentation":{"kind":"markdown","value":"From `\"fastspi_types.h\"`  \nSome of the SPI controllers will need to perform a transform on each byte before doing anyting with it. Creating a class of this form and passing it in as a template parameter to writeBytes/writeBytes3 below will ensure that the body of this method will get called on every byte worked on. Recommendation, make the adjust method aggressively inlined.  \nTODO: Convinience macro for building these"},"sortText":"4068a03fDATA_NOP","filterText":"DATA_NOP","insertText":"DATA_NOP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DATA_NOP"}},{"label":"•DirectSunlight","kind":20,"detail":"ColorTemperature","documentation":{"kind":"markdown","value":"From `\"color.h\"`  \n6000 K, 255, 255, 255"},"sortText":"4068a03fDirectSunlight","filterText":"DirectSunlight","insertText":"DirectSunlight","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DirectSunlight"}},{"label":"•delay_at_max_brightness_for_power(uint16_t ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSimilar to FastLED.delay, but pre-adjusts brightness to keep below the power threshold.  \n@deprecated this has now been rolled into FastLED.delay();"},"sortText":"4068a03fdelay_at_max_brightness_for_power","filterText":"delay_at_max_brightness_for_power","insertText":"delay_at_max_brightness_for_power(${1:uint16_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delay_at_max_brightness_for_power(${1:uint16_t ms})"}},{"label":"•delaycycles\u003cint CYCLES\u003e()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`  \npredeclaration to not upset the compiler"},"sortText":"4068a03fdelaycycles","filterText":"delaycycles","insertText":"delaycycles\u003c${1:int CYCLES}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delaycycles\u003c${1:int CYCLES}\u003e()"}},{"label":"•delaycycles_min1\u003cint CYCLES\u003e()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"4068a03fdelaycycles_min1","filterText":"delaycycles_min1","insertText":"delaycycles_min1\u003c${1:int CYCLES}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"delaycycles_min1\u003c${1:int CYCLES}\u003e()"}},{"label":" div1024_32_16(uint32_t in32)","kind":3,"detail":"uint16_t","documentation":{"kind":"markdown","value":"Helper routine to divide a 32-bit value by 1024, returning only the low 16 bits. You'd think this would be just result = (in32 \u003e\u003e 10) \u0026 0xFFFF;  \nand on ARM, that's what you want and all is well.  \nBut on AVR that code turns into a loop that executes a four-byte shift ten times: 40 shifts in all, plus loop overhead. This routine gets exactly the same result with just six shifts (vs 40), and no loop overhead.  \nUsed to convert millis to 'binary seconds' aka bseconds:  \none bsecond == 1024 millis."},"sortText":"4068a03fdiv1024_32_16","filterText":"div1024_32_16","insertText":"div1024_32_16(${1:uint32_t in32})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"div1024_32_16(${1:uint32_t in32})"}},{"label":"•dim8_lin(uint8_t x)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nLinear version of the dimming function that halves for values \u003c 128"},"sortText":"4071b066dim8_lin","filterText":"dim8_lin","insertText":"dim8_lin(${1:uint8_t x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"dim8_lin(${1:uint8_t x})"}},{"label":"•dim8_raw(uint8_t x)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nAdjust a scaling value for dimming"},"sortText":"4071b066dim8_raw","filterText":"dim8_raw","insertText":"dim8_raw(${1:uint8_t x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"dim8_raw(${1:uint8_t x})"}},{"label":"•dim8_video(uint8_t x)","kind":3,"detail":"uint8_t","documentation":{"kind":"markdown","value":"From `\"lib8tion/scale8.h\"`  \nAdjust a scaling value for dimming for video (value will never go below 1)"},"sortText":"4071b066dim8_video","filterText":"dim8_video","insertText":"dim8_video(${1:uint8_t x})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"dim8_video(${1:uint8_t x})"}},{"label":" DTOSTR_ALWAYS_SIGN","kind":1,"sortText":"40d1050aDTOSTR_ALWAYS_SIGN","filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DTOSTR_ALWAYS_SIGN"}},{"label":" DTOSTR_PLUS_SIGN","kind":1,"sortText":"40d1050aDTOSTR_PLUS_SIGN","filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DTOSTR_PLUS_SIGN"}},{"label":" DTOSTR_UPPERCASE","kind":1,"sortText":"40d1050aDTOSTR_UPPERCASE","filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DTOSTR_UPPERCASE"}},{"label":" DD0","kind":1,"sortText":"40ec52eaDD0","filterText":"DD0","insertText":"DD0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD0"}},{"label":" DD1","kind":1,"sortText":"40ec52eaDD1","filterText":"DD1","insertText":"DD1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD1"}},{"label":" DD2","kind":1,"sortText":"40ec52eaDD2","filterText":"DD2","insertText":"DD2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD2"}},{"label":" DD3","kind":1,"sortText":"40ec52eaDD3","filterText":"DD3","insertText":"DD3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD3"}},{"label":" DD4","kind":1,"sortText":"40ec52eaDD4","filterText":"DD4","insertText":"DD4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD4"}},{"label":" DD5","kind":1,"sortText":"40ec52eaDD5","filterText":"DD5","insertText":"DD5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD5"}},{"label":" DD6","kind":1,"sortText":"40ec52eaDD6","filterText":"DD6","insertText":"DD6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD6"}},{"label":" DD7","kind":1,"sortText":"40ec52eaDD7","filterText":"DD7","insertText":"DD7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DD7"}},{"label":" DDB0","kind":1,"sortText":"40ec52eaDDB0","filterText":"DDB0","insertText":"DDB0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB0"}},{"label":" DDB1","kind":1,"sortText":"40ec52eaDDB1","filterText":"DDB1","insertText":"DDB1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB1"}},{"label":" DDB2","kind":1,"sortText":"40ec52eaDDB2","filterText":"DDB2","insertText":"DDB2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB2"}},{"label":" DDB3","kind":1,"sortText":"40ec52eaDDB3","filterText":"DDB3","insertText":"DDB3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB3"}},{"label":" DDB4","kind":1,"sortText":"40ec52eaDDB4","filterText":"DDB4","insertText":"DDB4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB4"}},{"label":" DDB5","kind":1,"sortText":"40ec52eaDDB5","filterText":"DDB5","insertText":"DDB5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB5"}},{"label":" DDB6","kind":1,"sortText":"40ec52eaDDB6","filterText":"DDB6","insertText":"DDB6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB6"}},{"label":" DDB7","kind":1,"sortText":"40ec52eaDDB7","filterText":"DDB7","insertText":"DDB7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDB7"}},{"label":" DDC0","kind":1,"sortText":"40ec52eaDDC0","filterText":"DDC0","insertText":"DDC0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC0"}},{"label":" DDC1","kind":1,"sortText":"40ec52eaDDC1","filterText":"DDC1","insertText":"DDC1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC1"}},{"label":" DDC2","kind":1,"sortText":"40ec52eaDDC2","filterText":"DDC2","insertText":"DDC2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC2"}},{"label":" DDC3","kind":1,"sortText":"40ec52eaDDC3","filterText":"DDC3","insertText":"DDC3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC3"}},{"label":" DDC4","kind":1,"sortText":"40ec52eaDDC4","filterText":"DDC4","insertText":"DDC4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC4"}},{"label":" DDC5","kind":1,"sortText":"40ec52eaDDC5","filterText":"DDC5","insertText":"DDC5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC5"}},{"label":" DDC6","kind":1,"sortText":"40ec52eaDDC6","filterText":"DDC6","insertText":"DDC6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDC6"}},{"label":" DDD0","kind":1,"sortText":"40ec52eaDDD0","filterText":"DDD0","insertText":"DDD0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD0"}},{"label":" DDD1","kind":1,"sortText":"40ec52eaDDD1","filterText":"DDD1","insertText":"DDD1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD1"}},{"label":" DDD2","kind":1,"sortText":"40ec52eaDDD2","filterText":"DDD2","insertText":"DDD2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD2"}},{"label":" DDD3","kind":1,"sortText":"40ec52eaDDD3","filterText":"DDD3","insertText":"DDD3","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD3"}},{"label":" DDD4","kind":1,"sortText":"40ec52eaDDD4","filterText":"DDD4","insertText":"DDD4","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD4"}},{"label":" DDD5","kind":1,"sortText":"40ec52eaDDD5","filterText":"DDD5","insertText":"DDD5","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD5"}},{"label":" DDD6","kind":1,"sortText":"40ec52eaDDD6","filterText":"DDD6","insertText":"DDD6","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD6"}},{"label":" DDD7","kind":1,"sortText":"40ec52eaDDD7","filterText":"DDD7","insertText":"DDD7","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDD7"}},{"label":" DDRB","kind":1,"sortText":"40ec52eaDDRB","filterText":"DDRB","insertText":"DDRB","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDRB"}},{"label":" DDRC","kind":1,"sortText":"40ec52eaDDRC","filterText":"DDRC","insertText":"DDRC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDRC"}},{"label":" DDRD","kind":1,"sortText":"40ec52eaDDRD","filterText":"DDRD","insertText":"DDRD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DDRD"}},{"label":" DEFAULT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaDEFAULT","filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DEFAULT"}},{"label":" DEG_TO_RAD","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaDEG_TO_RAD","filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DEG_TO_RAD"}},{"label":" DIDR0","kind":1,"sortText":"40ec52eaDIDR0","filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DIDR0"}},{"label":" DIDR1","kind":1,"sortText":"40ec52eaDIDR1","filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DIDR1"}},{"label":" DISPLAY","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eaDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DISPLAY"}},{"label":" DOR0","kind":1,"sortText":"40ec52eaDOR0","filterText":"DOR0","insertText":"DOR0","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DOR0"}},{"label":" DORD","kind":1,"sortText":"40ec52eaDORD","filterText":"DORD","insertText":"DORD","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DORD"}},{"label":" degrees(rad)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eadegrees","filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"degrees(${1:rad})"}},{"label":" digitalPinToBitMask(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eadigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToBitMask(${1:P})"}},{"label":" digitalPinToPort(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eadigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToPort(${1:P})"}},{"label":" digitalPinToTimer(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ec52eadigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToTimer(${1:P})"}},{"label":"•DATA_RATE_KHZ(X)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastspi.h\"`"},"sortText":"40f66322DATA_RATE_KHZ","filterText":"DATA_RATE_KHZ","insertText":"DATA_RATE_KHZ(${1:X})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DATA_RATE_KHZ(${1:X})"}},{"label":"•DATA_RATE_MHZ(X)","kind":1,"documentation":{"kind":"markdown","value":"From `\"fastspi.h\"`"},"sortText":"40f66322DATA_RATE_MHZ","filterText":"DATA_RATE_MHZ","insertText":"DATA_RATE_MHZ(${1:X})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DATA_RATE_MHZ(${1:X})"}},{"label":"•DEC","kind":1,"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"sortText":"40f66322DEC","filterText":"DEC","insertText":"DEC","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DEC"}},{"label":"•DECLARE_GRADIENT_PALETTE(X)","kind":1,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"40f66322DECLARE_GRADIENT_PALETTE","filterText":"DECLARE_GRADIENT_PALETTE","insertText":"DECLARE_GRADIENT_PALETTE(${1:X})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DECLARE_GRADIENT_PALETTE(${1:X})"}},{"label":"•DEFINE_GRADIENT_PALETTE(X)","kind":1,"documentation":{"kind":"markdown","value":"From `\"colorutils.h\"`"},"sortText":"40f66322DEFINE_GRADIENT_PALETTE","filterText":"DEFINE_GRADIENT_PALETTE","insertText":"DEFINE_GRADIENT_PALETTE(${1:X})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DEFINE_GRADIENT_PALETTE(${1:X})"}},{"label":"•DISABLE_DITHER","kind":1,"documentation":{"kind":"markdown","value":"From `\"controller.h\"`"},"sortText":"40f66322DISABLE_DITHER","filterText":"DISABLE_DITHER","insertText":"DISABLE_DITHER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DISABLE_DITHER"}},{"label":"•digitalPinHasPWM(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05ddigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":"•digitalPinToInterrupt(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05ddigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":"•digitalPinToPCICR(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05ddigitalPinToPCICR","filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToPCICR(${1:p})"}},{"label":"•digitalPinToPCICRbit(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05ddigitalPinToPCICRbit","filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToPCICRbit(${1:p})"}},{"label":"•digitalPinToPCMSK(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05ddigitalPinToPCMSK","filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToPCMSK(${1:p})"}},{"label":"•digitalPinToPCMSKbit(p)","kind":1,"documentation":{"kind":"markdown","value":"From `\"pins_arduino.h\"`"},"sortText":"40fea05ddigitalPinToPCMSKbit","filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"digitalPinToPCMSKbit(${1:p})"}},{"label":"•DADVANCE","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DADVANCE","filterText":"DADVANCE","insertText":"DADVANCE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DADVANCE"}},{"label":"•DCOUNT2","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DCOUNT2","filterText":"DCOUNT2","insertText":"DCOUNT2","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DCOUNT2"}},{"label":"•DINT(T, ADJ)","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DINT","filterText":"DINT","insertText":"DINT(${1:T}, ${2:ADJ})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DINT(${1:T}, ${2:ADJ})"}},{"label":"•DINTPIN(T, ADJ, PINADJ)","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DINTPIN","filterText":"DINTPIN","insertText":"DINTPIN(${1:T}, ${2:ADJ}, ${3:PINADJ})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DINTPIN(${1:T}, ${2:ADJ}, ${3:PINADJ})"}},{"label":"•DITHER","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DITHER","filterText":"DITHER","insertText":"DITHER","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DITHER"}},{"label":"•DNOP","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DNOP","filterText":"DNOP","insertText":"DNOP","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DNOP"}},{"label":"•DONE","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DONE","filterText":"DONE","insertText":"DONE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DONE"}},{"label":"•DUSE","kind":1,"documentation":{"kind":"markdown","value":"From `\"platforms/avr/clockless_trinket.h\"`"},"sortText":"410abe85DUSE","filterText":"DUSE","insertText":"DUSE","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"DUSE"}},{"label":" CFastLED","kind":7,"sortText":"80000000CFastLED","filterText":"CFastLED","insertText":"CFastLED","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"CFastLED"}},{"label":" CFastLED()","kind":4,"sortText":"80000000CFastLED","filterText":"CFastLED","insertText":"CFastLED()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"CFastLED()"}},{"label":" CLEDController(…)","kind":4,"detail":"[3 overloads]","sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"CLEDController($0)"}},{"label":" CLEDController","kind":7,"sortText":"80000000CLEDController","filterText":"CLEDController","insertText":"CLEDController","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":5}},"newText":"CLEDController"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":256},"contentChanges":[{"range":{"start":{"line":60,"character":5},"end":{"line":60,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":452,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 347

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":6}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'de'"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":452,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":452}}Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":257},"contentChanges":[{"range":{"start":{"line":60,"character":6},"end":{"line":60,"character":6}},"rangeLength":0,"text":"l"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":453,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 348

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":7}},"severity":1,"code":"undeclared_var_use","source":"clang","message":"Use of undeclared identifier 'del'"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":453,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":258},"contentChanges":[{"range":{"start":{"line":60,"character":7},"end":{"line":60,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":454,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 747

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"severity":1,"code":"undeclared_var_use_suggest","source":"clang","message":"Use of undeclared identifier 'dela'; did you mean 'delay'? (fix available)\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: 'delay' declared here"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":454,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":455,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 232

{"jsonrpc":"2.0","id":456,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":8},"context":{"triggerKind":3}}}
>>>
Content-Length: 38

{"id":455,"result":[],"jsonrpc":"2.0"}Content-Length: 2539

{"id":456,"result":{"isIncomplete":false,"items":[{"label":" delay(unsigned long ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"404a3370delay","filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"newText":"delay(${1:unsigned long ms})"}},{"label":" delayMicroseconds(unsigned int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"sortText":"405d8e68delayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":"•delay_at_max_brightness_for_power(uint16_t ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"power_mgt.h\"`  \nSimilar to FastLED.delay, but pre-adjusts brightness to keep below the power threshold.  \n@deprecated this has now been rolled into FastLED.delay();"},"sortText":"4068a03fdelay_at_max_brightness_for_power","filterText":"delay_at_max_brightness_for_power","insertText":"delay_at_max_brightness_for_power(${1:uint16_t ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"newText":"delay_at_max_brightness_for_power(${1:uint16_t ms})"}},{"label":"•delaycycles\u003cint CYCLES\u003e()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`  \npredeclaration to not upset the compiler"},"sortText":"4068a03fdelaycycles","filterText":"delaycycles","insertText":"delaycycles\u003c${1:int CYCLES}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"newText":"delaycycles\u003c${1:int CYCLES}\u003e()"}},{"label":"•delaycycles_min1\u003cint CYCLES\u003e()","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"fastled_delay.h\"`"},"sortText":"4068a03fdelaycycles_min1","filterText":"delaycycles_min1","insertText":"delaycycles_min1\u003c${1:int CYCLES}\u003e()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"newText":"delaycycles_min1\u003c${1:int CYCLES}\u003e()"}}]},"jsonrpc":"2.0"}
<<<
Content-Length: 653

{"jsonrpc":"2.0","id":457,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"context":{"diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":8}},"message":"Use of undeclared identifier 'dela'; did you mean 'delay'? (fix available)\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: 'delay' declared here","severity":1,"code":"undeclared_var_use_suggest","source":"clang"}]}}}
>>>
Content-Length: 190

{"id":457,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 295

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":259},"contentChanges":[{"range":{"start":{"line":60,"character":8},"end":{"line":60,"character":8}},"rangeLength":0,"text":"y"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":458,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 365

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":458,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":459,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 272

{"jsonrpc":"2.0","id":460,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":459,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":460,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":260},"contentChanges":[{"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":461,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 788

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: candidate function not viable: requires single argument 'ms', but no arguments were provided"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":461,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 279

{"jsonrpc":"2.0","id":462,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":10},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}
>>>
Content-Length: 183

{"id":462,"error":{"code":0,"message":"json: cannot unmarshal array into Go struct field ParameterInformation.signatures.parameters.label of type string","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":463,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":463,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":464,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":464,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":465,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":466,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":465,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":466,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":467,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":468,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":467,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":468,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":469,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":470,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":469,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":470,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":260}}}Content-Length: 200

{"jsonrpc":"2.0","id":471,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":21}}}
>>>
Content-Length: 40

{"id":471,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":472,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":23}}}
>>>
Content-Length: 40

{"id":472,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":473,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":23}}}
>>>
Content-Length: 38

{"id":473,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":474,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":23},"end":{"line":57,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":474,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":22},"end":{"line":57,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":475,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":261},"contentChanges":[{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":476,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 788

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: candidate function not viable: requires single argument 'ms', but no arguments were provided"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":476,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":477,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":478,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":477,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":478,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":262},"contentChanges":[{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":21}},"rangeLength":0,"text":"§"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":479,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 1018

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":22}},"severity":1,"code":"non_ascii","source":"clang","message":"Non-ASCII characters are not allowed outside of literals and identifiers (fix available)"},{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: candidate function not viable: requires single argument 'ms', but no arguments were provided"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":479,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":480,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 503

{"jsonrpc":"2.0","id":481,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":22},"end":{"line":57,"character":22}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":22}},"message":"Non-ASCII characters are not allowed outside of literals and identifiers (fix available)","severity":1,"code":"non_ascii","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":480,"result":[],"jsonrpc":"2.0"}Content-Length: 190

{"id":481,"error":{"code":0,"message":"json: cannot unmarshal object into Go struct field WorkspaceEdit.edit.changes of type map[lsp.DocumentURI][]lsp.TextEdit","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":262}}}Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":263},"contentChanges":[{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":482,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 788

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: candidate function not viable: requires single argument 'ms', but no arguments were provided"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":482,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":482}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":264},"contentChanges":[{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":21}},"rangeLength":0,"text":"1"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":483,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 788

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":9}},"severity":1,"code":"ovl_no_viable_function_in_call","source":"clang","message":"No matching function for call to 'delay'\n\nC:\\Users\\tommy\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.3\\cores\\arduino\\Arduino.h:143:6:\nnote: candidate function not viable: requires single argument 'ms', but no arguments were provided"},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":3}},"severity":1,"code":"expected_semi_after_expr","source":"clang","message":"Expected ';' after expression (fix available)"}]},"jsonrpc":"2.0"}Content-Length: 3335

{"id":483,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":62,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":64,"character":0},"end":{"line":88,"character":1}},"selectionRange":{"start":{"line":64,"character":5},"end":{"line":64,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":91,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":91,"character":5},"end":{"line":91,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":484,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":485,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":22},"end":{"line":57,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":484,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":485,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":486,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":487,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":22},"end":{"line":57,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":486,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":487,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":264}}}
>>>
Content-Length: 116

{"method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"},"id":9,"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
>>>
Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"title":"Building sketch","kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":488,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":10}}}
>>>
Content-Length: 138

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling.","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 139

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling..","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 140

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"compiling...","kind":"report"}},"jsonrpc":"2.0"}Content-Length: 129

{"method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"message":"done","kind":"end"}},"jsonrpc":"2.0"}Content-Length: 166

{"id":488,"error":{"code":0,"message":"Document is not available: file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":488}}Content-Length: 199

{"jsonrpc":"2.0","id":489,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":9}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":489}}Content-Length: 274

{"jsonrpc":"2.0","id":490,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 166

{"id":489,"error":{"code":0,"message":"Document is not available: file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","data":null},"jsonrpc":"2.0"}Content-Length: 38

{"id":490,"result":[],"jsonrpc":"2.0"}Content-Length: 1258

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"severity":1,"code":"expected_expression","source":"clang","message":"Expected expression"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nproject.ino.cpp:71:6: note: to match this '('"},{"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":6}},"severity":3,"message":"To match this '('\n\nproject.ino.cpp:72:1: error: expected ')'"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"severity":1,"code":"expected","source":"clang","message":"Expected '}'\n\nproject.ino.cpp:69:18: note: to match this '{'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:72:1: error: expected '}'"}]},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":491,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 274

{"jsonrpc":"2.0","id":492,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":491,"result":[],"jsonrpc":"2.0"}Content-Length: 38

{"id":492,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":493,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":16},"end":{"line":59,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":493,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":494,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":494,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":495,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":36}}}
>>>
Content-Length: 40

{"id":495,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":265},"contentChanges":[{"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"rangeLength":0,"text":"1"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":496,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":496,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":266},"contentChanges":[{"range":{"start":{"line":60,"character":11},"end":{"line":60,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":497,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":497,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":267},"contentChanges":[{"range":{"start":{"line":60,"character":12},"end":{"line":60,"character":12}},"rangeLength":0,"text":"0"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":498,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":498,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":499,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":13},"end":{"line":60,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":499,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":267}}}Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":268},"contentChanges":[{"range":{"start":{"line":60,"character":13},"end":{"line":60,"character":13}},"rangeLength":0,"text":")"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":500,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":500,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":501,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":14},"end":{"line":60,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":501,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":269},"contentChanges":[{"range":{"start":{"line":60,"character":14},"end":{"line":60,"character":14}},"rangeLength":0,"text":";"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":502,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":502,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":503,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":503,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":269}}}Content-Length: 200

{"jsonrpc":"2.0","id":504,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":21}}}
>>>
Content-Length: 40

{"id":504,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":505,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":23}}}
>>>
Content-Length: 40

{"id":505,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":506,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":23}}}
>>>
Content-Length: 38

{"id":506,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":507,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":23},"end":{"line":57,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":507,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":508,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":16},"end":{"line":60,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":508,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":270},"contentChanges":[{"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":16}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":509,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":509,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":510,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":510,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":270}}}Content-Length: 200

{"jsonrpc":"2.0","id":511,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":24}}}
>>>
Content-Length: 40

{"id":511,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":512,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":23}}}
>>>
Content-Length: 40

{"id":512,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":513,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":12}}}
>>>
Content-Length: 166

{"id":513,"error":{"code":0,"message":"Document is not available: file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":514,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":12},"end":{"line":60,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":514,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":515,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":515,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 211

{"jsonrpc":"2.0","id":516,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":9}}}
>>>
Content-Length: 166

{"id":516,"error":{"code":0,"message":"Document is not available: file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 272

{"jsonrpc":"2.0","id":517,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":9},"end":{"line":60,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":517,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 212

{"jsonrpc":"2.0","id":518,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":60,"character":10}}}
>>>
Content-Length: 166

{"id":518,"error":{"code":0,"message":"Document is not available: file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":519,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":519,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":520,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":11},"end":{"line":60,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":520,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":271},"contentChanges":[{"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":521,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":521,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":272},"contentChanges":[{"range":{"start":{"line":60,"character":10},"end":{"line":60,"character":10}},"rangeLength":0,"text":"2"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":522,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":522,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":523,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":11},"end":{"line":60,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":523,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":272}}}Content-Length: 274

{"jsonrpc":"2.0","id":524,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":524,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":525,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":59,"character":0}}}
>>>
Content-Length: 166

{"id":525,"error":{"code":0,"message":"Document is not available: file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","data":null},"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":526,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":1}}}
>>>
Content-Length: 40

{"id":526,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 1030

{"jsonrpc":"2.0","id":527,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":1}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected ')'\n\nproject.ino.cpp:71:6: note: to match this '('","severity":1,"code":"expected","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected '}'\n\nproject.ino.cpp:69:18: note: to match this '{'","severity":1,"code":"expected","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":527,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 199

{"jsonrpc":"2.0","id":528,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":0}}}
>>>
Content-Length: 40

{"id":528,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 1050

{"jsonrpc":"2.0","id":529,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected ')'\n\nproject.ino.cpp:71:6: note: to match this '('","severity":1,"code":"expected","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected '}'\n\nproject.ino.cpp:69:18: note: to match this '{'","severity":1,"code":"expected","source":"clang"}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":529,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":530,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":65,"character":30},"end":{"line":65,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":530,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 200

{"jsonrpc":"2.0","id":531,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":58,"character":39}}}
>>>
Content-Length: 40

{"id":531,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 274

{"jsonrpc":"2.0","id":532,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":31},"end":{"line":57,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":532,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":533,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":533,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":534,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":534,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":273},"contentChanges":[{"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":15}},"rangeLength":33,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":535,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":535,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":273}}}Content-Length: 199

{"jsonrpc":"2.0","id":536,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":8}}}
>>>
Content-Length: 40

{"id":536,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":274},"contentChanges":[{"range":{"start":{"line":59,"character":0},"end":{"line":59,"character":0}},"rangeLength":0,"text":"    ledOn *= -1;\r\n    delay(200);"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":537,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":537,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 273

{"jsonrpc":"2.0","id":538,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":538,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":274}}}Content-Length: 274

{"jsonrpc":"2.0","id":539,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":60,"character":15},"end":{"line":60,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"id":539,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 1031

{"jsonrpc":"2.0","id":540,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":58,"character":0},"end":{"line":60,"character":15}},"context":{"diagnostics":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected ';' in 'for' statement specifier","severity":1,"code":"expected_semi_for","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected expression","severity":1,"code":"expected_expression","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected ')'\n\nproject.ino.cpp:71:6: note: to match this '('","severity":1,"code":"expected","source":"clang"},{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"message":"Expected '}'\n\nproject.ino.cpp:69:18: note: to match this '{'","severity":1,"code":"expected","source":"clang"}]}}}
>>>
Content-Length: 38

{"id":540,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 296

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":275},"contentChanges":[{"range":{"start":{"line":58,"character":0},"end":{"line":60,"character":15}},"rangeLength":74,"text":""}]}}Content-Length: 171

{"jsonrpc":"2.0","id":541,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 2761

{"id":541,"result":[{"name":"leds","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":19}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":30}},"selectionRange":{"start":{"line":18,"character":5},"end":{"line":18,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":20}},"selectionRange":{"start":{"line":20,"character":4},"end":{"line":20,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":37}},"selectionRange":{"start":{"line":20,"character":22},"end":{"line":20,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":54}},"selectionRange":{"start":{"line":20,"character":39},"end":{"line":20,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":38}},"selectionRange":{"start":{"line":21,"character":4},"end":{"line":21,"character":17}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":21}},"selectionRange":{"start":{"line":24,"character":4},"end":{"line":24,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":21}},"selectionRange":{"start":{"line":25,"character":4},"end":{"line":25,"character":11}}},{"name":"lastTime","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":26}},"selectionRange":{"start":{"line":26,"character":14},"end":{"line":26,"character":22}}},{"name":"setLeds","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":41,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":50,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":57,"character":22}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":14}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 169

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":275}}}Content-Length: 199

{"jsonrpc":"2.0","id":542,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"position":{"line":57,"character":5}}}
>>>
Content-Length: 40

{"id":542,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 457

{"jsonrpc":"2.0","id":543,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":6}},"context":{"diagnostics":[{"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":6}},"message":"To match this '('\n\nproject.ino.cpp:72:1: error: expected ')'","severity":3}],"only":["quickfix"]}}}
>>>
Content-Length: 38

{"id":543,"result":[],"jsonrpc":"2.0"}
<<<
Content-Length: 372

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","version":276},"contentChanges":[{"range":{"start":{"line":58,"character":0},"end":{"line":58,"character":0}},"rangeLength":0,"text":"    setAllLeds(0, 0, NUM_LEDS * ledOn);\r\n    ledOn *= -1;\r\n    delay(200);"}]}}Content-Length: 171

{"jsonrpc":"2.0","id":544,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 112

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":10,"jsonrpc":"2.0"}Content-Length: 893

{"method":"textDocument/publishDiagnostics","params":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","diagnostics":[{"range":{"start":{"line":58,"character":4},"end":{"line":58,"character":14}},"severity":1,"code":"expected_semi_for","source":"clang","message":"Expected ';' in 'for' statement specifier"},{"range":{"start":{"line":58,"character":38},"end":{"line":58,"character":39}},"severity":1,"code":"expected","source":"clang","message":"Expected ')'\n\nproject.ino.cpp:71:6: note: to match this '('"},{"range":{"start":{"line":57,"character":5},"end":{"line":57,"character":6}},"severity":3,"message":"To match this '('\n\nproject.ino.cpp:72:39: error: expected ')'"},{"range":{"start":{"line":55,"character":17},"end":{"line":55,"character":18}},"severity":3,"message":"To match this '{'\n\nproject.ino.cpp:74:16: error: expected '}'"}]},"jsonrpc":"2.0"}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12312,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"c:\\Users\\tommy\\Desktop\\dev\\GA10-Arduino\\project","rootUri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project","name":"project"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4800

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino","languageId":"cpp","version":1,"text":"#define FASTLED_INTERNAL\r\n#include <FastLED.h>\r\n\r\n\r\n#define NUM_LEDS 11\r\n#define LED_PIN 3\r\n#define NUM_LEDS_FRONT 4\r\n#define LED_PIN_FRONT 5\r\n#define MAX_LED_BRIGHTNESS 255\r\n\r\n#define PIEZO_PIN A0\r\n#define PIEZO_THRESHOLD 130\r\n\r\n#define TIME_ON 6000 // ms before leds turn off\r\n\r\n#define PULSE_OFF 0\r\n#define PULSE_SHORT 1\r\n#define PULSE_LONG 2\r\n#define TIME_PULSE_TOGGLE_SHORT 250\r\n#define TIME_PULSE_TOGGLE_LONG 800\r\n#define PULSE_ITER_SHORT 4\r\n#define PULSE_ITER_LONG 10\r\n\r\n\r\n// Define the array of leds\r\nCRGB leds[NUM_LEDS];\r\nCRGB ledsFront[NUM_LEDS_FRONT];\r\n\r\nint activityHigh = 5, activityMed = 4, activityLow = 2;\r\nint ledBrightness = MAX_LED_BRIGHTNESS;\r\n\r\n// for pulse sequence\r\nbool pulse = false;\r\nint pulseType, ledOn = 1, timerToggle = 100, iterRemaining = 50;\r\n\r\n// switch and shut off timer\r\nint sensorReading = 0;\r\nint timerOn = TIME_ON;\r\nunsigned long dt, lastTime = 0;\r\n\r\n\r\nvoid setLeds(int start, int end, const struct CRGB &color) {\r\n  for (int i = start; i < end; i++) {\r\n    leds[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setLedsFront(const struct CRGB &color) {\r\n  for (int i = 0; i < NUM_LEDS_FRONT; i++) {\r\n    ledsFront[i] = color;\r\n  }\r\n  FastLED.show();\r\n}\r\n\r\nvoid setAllLeds(int green, int yellow, int red) {\r\n  int d1 = green, d2 = yellow + green, d3 = red + yellow + green;\r\n  setLeds(0, d1, CRGB::Green);\r\n  setLeds(d1, d2, CRGB::Orange);\r\n  setLeds(d2, d3, CRGB::Red);\r\n}\r\n\r\nvoid setLedsOff() {\r\n  FastLED.clear();\r\n  FastLED.show();\r\n}\r\n\r\nvoid startPulse(int type) {\r\n  if(type == PULSE_SHORT) {\r\n    ledOn = 1; timerToggle = TIME_PULSE_TOGGLE_SHORT; iterRemaining = PULSE_ITER_SHORT;\r\n  } else if (type == PULSE_LONG) {\r\n    ledOn = 1; timerToggle = TIME_PULSE_TOGGLE_LONG; iterRemaining = PULSE_ITER_LONG;\r\n  } else {\r\n    pulseType = PULSE_OFF;\r\n    return;\r\n  }\r\n\r\n  pulseType = type;\r\n}\r\n\r\nvoid pulseLeds() {\r\n  const int timeToggle = pulseType == PULSE_SHORT ? TIME_PULSE_TOGGLE_SHORT : TIME_PULSE_TOGGLE_LONG;\r\n\r\n  if (timerToggle <= 0) {\r\n    ledOn *= -1;\r\n    timerToggle = timeToggle;\r\n    iterRemaining -= 1;\r\n  }\r\n\r\n  if (iterRemaining <= 0)\r\n    pulseType = PULSE_OFF;\r\n\r\n  FastLED.setBrightness(ledOn == 1 ? map(timerToggle, 0, timeToggle, 128, 16) : map(timerToggle, 0, timeToggle, 16, 128));\r\n  setLeds(0, NUM_LEDS, CRGB::Red);\r\n  setLedsFront(CRGB::Black);\r\n\r\n  timerToggle -= dt;\r\n}\r\n\r\nvoid serialEvent() {\r\n  while (Serial.available()) {\r\n    char inChar = (char)Serial.read();\r\n    Serial.println(inChar);\r\n\r\n    switch(inChar) {\r\n      case 'q':\r\n        if (activityHigh == 0) break;\r\n        activityHigh--; activityMed++;\r\n        break;\r\n      case 'w':\r\n        if (activityMed == 0) break;\r\n        activityHigh++; activityMed--;\r\n        break;\r\n      case 'e':\r\n        if (activityMed == 0) break;\r\n        activityLow++; activityMed--;\r\n        break;\r\n      case 'r':\r\n        if (activityLow == 0) break;\r\n        activityMed++; activityLow--;\r\n        break;\r\n      case 'o':\r\n        startPulse(PULSE_SHORT);\r\n        break;\r\n      case 'p':\r\n        startPulse(PULSE_LONG);\r\n        break;\r\n      case 'l':\r\n        pulseType = PULSE_OFF;\r\n        break;\r\n      case 't':\r\n        timerOn = TIME_ON;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nvoid setup() {\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);\r\n  FastLED.addLeds<NEOPIXEL, LED_PIN_FRONT>(ledsFront, NUM_LEDS);\r\n  FastLED.setBrightness(ledBrightness);\r\n  setLedsFront(CRGB::Orange);\r\n\r\n  Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n  // Calculate delta time since last iteration\r\n  unsigned long timeNow = millis();\r\n  dt = timeNow - lastTime;\r\n  lastTime = timeNow;\r\n\r\n  // Read value of piezo switch/sensor\r\n  sensorReading = analogRead(PIEZO_PIN);\r\n  if (sensorReading >= PIEZO_THRESHOLD) {\r\n    //timerOn = TIME_ON;\r\n    startPulse(PULSE_SHORT);\r\n    Serial.println(\"tap\");\r\n  }\r\n\r\n  if(pulseType != PULSE_OFF) {\r\n    pulseLeds();\r\n  } else {\r\n    if(timerOn >= 0) {\r\n      ledBrightness = (timerOn >= TIME_ON / 3) ?\r\n          MAX_LED_BRIGHTNESS : map(timerOn, 0, TIME_ON / 3, 16, MAX_LED_BRIGHTNESS);\r\n      FastLED.setBrightness(ledBrightness);\r\n      setAllLeds(activityHigh, activityMed, activityLow);\r\n\r\n      timerOn -= (int) dt;\r\n    \r\n    } else {\r\n      setLedsOff();\r\n    }\r\n  }\r\n\r\n  delay(10);\r\n}\r\n"}}}Content-Length: 272

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 268

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 169

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 169

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/tommy/Desktop/dev/GA10-Arduino/project/project.ino"}}}
>>>
Content-Length: 111

{"method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"},"id":0,"jsonrpc":"2.0"}Content-Length: 406

{"id":1,"result":[{"title":"Expand macro 'NUM_LEDS_FRONT'","kind":"refactor","command":{"title":"Expand macro 'NUM_LEDS_FRONT'","command":"clangd.applyTweak","arguments":[{"tweakID":"ExpandMacro","file":"file:///C:/Users/tommy/AppData/Local/Temp/arduino-language-server235023751/sketch/project.ino.cpp","selection":{"start":{"line":28,"character":22},"end":{"line":28,"character":22}}}]}}],"jsonrpc":"2.0"}Content-Length: 36

{"id":2,"result":[],"jsonrpc":"2.0"}Content-Length: 4691

{"id":3,"result":[{"name":"leds","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":19}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":30}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":20}},"selectionRange":{"start":{"line":28,"character":4},"end":{"line":28,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":37}},"selectionRange":{"start":{"line":28,"character":22},"end":{"line":28,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":54}},"selectionRange":{"start":{"line":28,"character":39},"end":{"line":28,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":38}},"selectionRange":{"start":{"line":29,"character":4},"end":{"line":29,"character":17}}},{"name":"pulse","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":18}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":10}}},{"name":"pulseType","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":13}},"selectionRange":{"start":{"line":33,"character":4},"end":{"line":33,"character":13}}},{"name":"ledOn","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":24}},"selectionRange":{"start":{"line":33,"character":15},"end":{"line":33,"character":20}}},{"name":"timerToggle","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":43}},"selectionRange":{"start":{"line":33,"character":26},"end":{"line":33,"character":37}}},{"name":"iterRemaining","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":63}},"selectionRange":{"start":{"line":33,"character":45},"end":{"line":33,"character":58}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":21}},"selectionRange":{"start":{"line":36,"character":4},"end":{"line":36,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":21}},"selectionRange":{"start":{"line":37,"character":4},"end":{"line":37,"character":11}}},{"name":"dt","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":16}},"selectionRange":{"start":{"line":38,"character":14},"end":{"line":38,"character":16}}},{"name":"lastTime","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":30}},"selectionRange":{"start":{"line":38,"character":18},"end":{"line":38,"character":26}}},{"name":"setLeds","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":46,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":48,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":65,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":15}}},{"name":"startPulse","kind":12,"range":{"start":{"line":67,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":67,"character":5},"end":{"line":67,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":177,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":9}}}],"jsonrpc":"2.0"}Content-Length: 4691

{"id":4,"result":[{"name":"leds","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":19}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":9}}},{"name":"ledsFront","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":30}},"selectionRange":{"start":{"line":26,"character":5},"end":{"line":26,"character":14}}},{"name":"activityHigh","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":20}},"selectionRange":{"start":{"line":28,"character":4},"end":{"line":28,"character":16}}},{"name":"activityMed","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":37}},"selectionRange":{"start":{"line":28,"character":22},"end":{"line":28,"character":33}}},{"name":"activityLow","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":54}},"selectionRange":{"start":{"line":28,"character":39},"end":{"line":28,"character":50}}},{"name":"ledBrightness","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":38}},"selectionRange":{"start":{"line":29,"character":4},"end":{"line":29,"character":17}}},{"name":"pulse","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":18}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":10}}},{"name":"pulseType","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":13}},"selectionRange":{"start":{"line":33,"character":4},"end":{"line":33,"character":13}}},{"name":"ledOn","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":24}},"selectionRange":{"start":{"line":33,"character":15},"end":{"line":33,"character":20}}},{"name":"timerToggle","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":43}},"selectionRange":{"start":{"line":33,"character":26},"end":{"line":33,"character":37}}},{"name":"iterRemaining","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":63}},"selectionRange":{"start":{"line":33,"character":45},"end":{"line":33,"character":58}}},{"name":"sensorReading","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":21}},"selectionRange":{"start":{"line":36,"character":4},"end":{"line":36,"character":17}}},{"name":"timerOn","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":21}},"selectionRange":{"start":{"line":37,"character":4},"end":{"line":37,"character":11}}},{"name":"dt","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":16}},"selectionRange":{"start":{"line":38,"character":14},"end":{"line":38,"character":16}}},{"name":"lastTime","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":30}},"selectionRange":{"start":{"line":38,"character":18},"end":{"line":38,"character":26}}},{"name":"setLeds","kind":12,"range":{"start":{"line":41,"character":0},"end":{"line":46,"character":1}},"selectionRange":{"start":{"line":41,"character":5},"end":{"line":41,"character":12}}},{"name":"setLedsFront","kind":12,"range":{"start":{"line":48,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":17}}},{"name":"setAllLeds","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":60,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":15}}},{"name":"setLedsOff","kind":12,"range":{"start":{"line":62,"character":0},"end":{"line":65,"character":1}},"selectionRange":{"start":{"line":62,"character":5},"end":{"line":62,"character":15}}},{"name":"startPulse","kind":12,"range":{"start":{"line":67,"character":0},"end":{"line":78,"character":1}},"selectionRange":{"start":{"line":67,"character":5},"end":{"line":67,"character":15}}},{"name":"pulseLeds","kind":12,"range":{"start":{"line":80,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":80,"character":5},"end":{"line":80,"character":14}}},{"name":"serialEvent","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":16}}},{"name":"setup","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":177,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":9}}}],"jsonrpc":"2.0"}
<<<
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
>>>
Content-Length: 143

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"title":"indexing","percentage":0,"kind":"begin"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"2/38","percentage":5.2631578947368425,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"3/38","percentage":7.894736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"4/38","percentage":10.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"5/38","percentage":13.157894736842104,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"6/38","percentage":15.789473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"7/38","percentage":18.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"8/38","percentage":21.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"9/38","percentage":23.68421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"10/38","percentage":26.31578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"11/38","percentage":28.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"12/38","percentage":31.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"13/38","percentage":34.21052631578947,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"14/38","percentage":36.8421052631579,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"15/38","percentage":39.473684210526315,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"16/38","percentage":42.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"17/38","percentage":44.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"18/38","percentage":47.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 144

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"19/38","percentage":50,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"20/38","percentage":52.63157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"21/38","percentage":55.26315789473684,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"22/38","percentage":57.89473684210526,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 160

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"23/38","percentage":60.526315789473685,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"24/38","percentage":63.1578947368421,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"25/38","percentage":65.78947368421052,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"26/38","percentage":68.42105263157895,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"27/38","percentage":71.05263157894737,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"28/38","percentage":73.6842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 158

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"29/38","percentage":76.3157894736842,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"30/38","percentage":78.94736842105263,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"31/38","percentage":81.57894736842105,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"32/38","percentage":84.21052631578948,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"33/38","percentage":86.84210526315789,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"34/38","percentage":89.47368421052632,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"35/38","percentage":92.10526315789474,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"36/38","percentage":94.73684210526316,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 159

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"message":"37/38","percentage":97.36842105263158,"kind":"report"}},"jsonrpc":"2.0"}Content-Length: 107

{"method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}},"jsonrpc":"2.0"}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":5,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"id":5,"result":null,"jsonrpc":"2.0"}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}